
134800

Soft Reminder
Good Day Sir (Dr Seyi)
SmartDoctor support/Maint Annual fee of =N=250,000
long overdue since Dec 31 2022
Please Pay to 
Omage Babafemi
GT Bank
Acct No: 0006905287
Amount: =N=250,000

At clip 6:28 -- remove (slice off) the part that mentions SmartDoctor
At clip 9:58 or so -- change receipt logo to Logic Version logo
Cut off Clip between 12:14  and 13:59
In contact Us section, Edit the wesite address to https://logicversion.ng

...Great Job so far

Father deliver me from strange battles ijn
Witchcraft embargo assigned against my star, what are you waiting for, die

Angular Router is a service that provides navigation among views and URL manipulation capabilities.
Angular navigate mtd vs navigateByUrl mtd
navigateByUrl navigates to a view using an absolute route path.  

navigateByUrl(url: string | UrlTree, extras: NavigationBehaviorOptions = {
    skipLocationChange: false
}): Promise<boolean>

At its basic, it takes a string (An absolute path) as parameter and returns a Promise<boolean>, A Promise that resolves to 'true' when navigation succeeds, to 'false' when navigation fails, or is rejected on error.

The following calls request navigation to an absolute path.      
router.navigateByUrl("/team/33/user/11"); // the first slash denotes absolute path

// Navigate without updating the URL
router.navigateByUrl("/team/33/user/11", { skipLocationChange: true });

navigate() mtd -- Navigates based on the provided array of commands and a starting point. If no starting route is provided, the navigation is absolute.  

navigate(commands: any[], extras: NavigationExtras = { skipLocationChange: false }): Promise<boolean>

The following calls request navigation to a dynamic route path relative to the current URL
router.navigate(['team', 33, 'user', 11], {relativeTo: route});

// Navigate without updating the URL, overriding the default behavior
router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});

router.navigate(['hello/redirect/pageURL'],{queryParams:{id:1234,name:"ash"}});
this.router.navigate(['/', 'page-name']);

Parameters: 
commands :any[] An array of URL fragments with which to construct the target URL. If the path is static, can be the literal URL string. For a dynamic path, pass an array of path segments, followed by the parameters for each segment. The fragments are applied to the current URL or the one provided in the relativeTo property of the options object, if supplied.
extras:	NavigationExtras An options object that determines how the URL should be constructed or interpreted. Its Optional. Default is { skipLocationChange: false }.

navigate mtd Returns a Promise<boolean>: A Promise that resolves to true when navigation succeeds, to false when navigation fails, or is rejected on error.

import { Router, ActivatedRoute } from '@angular/router'; 
constructor(private router: Router, private route: ActivatedRoute)
Here,
    router provides the functionality to do routing operations.
    route refers the current route.

To access AboutComponent from another component (relative path) in the view template, say HomeComponent, simple use .. notation as in web url or folder path.

<a routerLink="../about">Relative Route to about component</a>
routerLink is a directive used to bind any clickable element to a route


To access relative path in the class component −
import { NavigationExtras } from '@angular/router';
 
this.router.navigate(['about'], { relativeTo: this.route });
relativeTo is available under NavigationExtras class.

serializeUrl() mtd Serializes a UrlTree into a string
  serializeUrl(url: UrlTree): string {
    return this.urlSerializer.serialize(url);
  }

parseUrl() mtd Parses a string into a UrlTree
/** Parses a string into a `UrlTree` */
  parseUrl(url: string): UrlTree {
    let urlTree: UrlTree;
    try {
      urlTree = this.urlSerializer.parse(url);
    } catch (e) {
      urlTree = this.malformedUriErrorHandler(e as URIError, this.urlSerializer, url);
    }
    return urlTree;
  }

What is a URL tree?
A URL tree is a hierarchical container class that is well suited for storing information about a URL hierarchy. The root of a URL tree is the hostname part of the URL, for example www.w3.org:8000 .

https://angular.io/api/router/Router#navigateByUrl   
https://github.com/angular/angular/blob/15.2.1/packages/router/src/router.ts#L609-L613

---------------------------------------

window.location.href = this.url;
window.location.assign('external-url');

Ganathealthcare – Ageing is a blessing
ganathealthcare.com
https://ganathealthcare.com
ganat hospital and elderly care center from ganathealthcare.com
Address. Ganat Hospital and Elderly Care Center, Road Q, NTA Road, Oba-Ile Housing Estate, Akure, Ondo State.

call welder
call slide door man

var list = (from t in ctn.Items
           where t.DeliverySelection == true && t.Delivery.SentForDelivery == null
           orderby t.Delivery.SubmissionDate
           select t).Take(5);

List<int> _numList = new List<int>() {100,220,430,440,550,330, 990} ;
var methodSyntax=_ numList.OrderByDescending(n=>n);
foreach(var res in val)
{
Console.Write(res+"");

var Customer_InDescOrder = CustomerList.OrderByDescending(c => c.CustomerName);

http://localhost:8081/api/clearing/invoicedetails/000002573
Wanna join Code Maze Team, help us produce more awesome .NET/C# content and get paid? >> JOIN US! <<
this.router.navigateByUrl(this.url);

[HttpPost] //Created (string uri, object value) -- asp.net core web api 
public IActionResult Create()
{
        var createdResource = new { Id = 1, Version = "1.0" };
        string uri = $"https://www.example.com/api/values/{createdResource.Id}?version=		{createdResource.Version}";
        return Created(uri, createdResource);
        // Location: https://www.example.com/api/values/1?version=1.0
}

    [HttpPost] //Created (Uri uri, object value)
    public IActionResult Create()
    {
        var createdResource = new { Id = 1, Version = "1.0" };
        Uri uri = new Uri($"https://www.example.com/api/values/{createdResource.Id}?		version={createdResource.Version}");
        return Created(uri, createdResource);
        // Location: https://www.example.com/api/values/1?version=1.0
    }


C# CratedAtAction mtd
https://ochzhen.com/blog/created-createdataction-createdatroute-methods-explained-aspnet-core
actionName - by default it is controller method name but can also be assigned using [ActionName("...")] attribute
    controllerName - name of the controller where our action resides
    routeValues - info necessary to generate a correct URL, for example, path or query 	parameters
    value - content to return in a response body

    controllerName - can be omitted if action is in the same controller
    routeValues - not needed in case your action doesn’t have any route parameters

What is location in HTTP response?
The Location response header indicates the URL to redirect a page to. It only provides a meaning when served with a 3xx (redirection) or 201 (created) status response.
In cases of new resource creation, it indicates the URL to the newly created resource.

The location property of a window (i.e. window. location ) is a reference to a Location object; it represents the current URL of the document being displayed in that window  

   [HttpPost]
    public IActionResult Create()
    {
        var createdResource = new { Id = 1, Version = "1.0" };
        var actionName = "RetrieveValue";
        return CreatedAtAction(actionName, createdResource);
        // Location: .../api/Values
    }

    [HttpPost]
    public IActionResult Create()
    {
        var createdResource = new { Id = 1, Version = "1.0" };
        var actionName = nameof(GetValue);
        var routeValues = new { id = createdResource.Id, version = createdResource.Version };
        return CreatedAtAction(actionName, routeValues, createdResource);
        // Location: .../api/Values/1?version=1.0
    }

To see the returned data in httpClient post request, 
we will log the response using console.log.

URL endpoint -- resource endpoint -- http://localhost:3000/invoices
here /invoices is the endpoint -- that fetches resources
baseURL: string = "http://localhost:3000/";

The URL endpoint of our json-server is hardcoded in our example, But you can make use of a config file to store the value and read it using the APP_INITIALIZER token
https://www.tektutorialshub.com/angular/angular-how-to-use-app-initializer/


HttpClient methods return one value
All HttpClient methods return an RxJS Observable of something.
HTTP is a request/response protocol. You make a request, it returns a single response.
In general, an observable can return more than one value over time. An observable from HttpClient always emits a single value and then completes, never to emit again.
This particular call to HttpClient.get() returns an Observable<Hero[]>, which is an observable of hero arrays. In practice, it only returns a single hero array.

HttpClient.get() returns response data
HttpClient.get() returns the body of the response as an untyped JSON object by default. Applying the optional type specifier, <Hero[]> , adds TypeScript capabilities, which reduce errors during compile time.
The server's data API determines the shape of the JSON data.

/** GET heroes from the server */
getHeroes(): Observable<Hero[]> {
  return this.http.get<Hero[]>(this.heroesUrl)
}

Other APIs may bury the data that you want within an object. You might have to dig that data out by processing the Observable result with the RxJS map() operator.
Although not discussed here, there's an example of map() in the getHeroNo404() method included in the sample source code.

Error handling
Things go wrong, especially when you're getting data from a remote server. The HeroService.getHeroes() method should catch errors and do something appropriate.
To catch errors, you "pipe" the observable result from http.get() through an RxJS catchError() operator.

Import the catchError symbol from rxjs/operators, along with some other operators to use later.   
import { catchError, map, tap } from 'rxjs/operators';
Now extend the observable result with the pipe() method and give it a catchError() operator.
getHeroes(): Observable<Hero[]> {
  return this.http.get<Hero[]>(this.heroesUrl)
    .pipe(
      catchError(this.handleError<Hero[]>('getHeroes', []))
    );
}

The catchError() operator intercepts an Observable that failed. The operator then passes the error to the error handling function.
The following handleError() method reports the error and then returns an innocuous result so that the application keeps working.

handleError function
The following handleError() can be shared by many HeroService methods so it's generalized to meet their different needs.
Instead of handling the error directly, it returns an error handler function to catchError. This function is configured with both the name of the operation that failed and a safe return value.

/**
 * Handle Http operation that failed.
 * Let the app continue.
 *
 * @param operation - name of the operation that failed
 * @param result - optional value to return as the observable result
 */
private handleError<T>(operation = 'operation', result?: T) {
  return (error: any): Observable<T> => {

    // TODO: send the error to remote logging infrastructure
    console.error(error); // log to console instead

    // TODO: better job of transforming error for user consumption
    this.log(`${operation} failed: ${error.message}`);

    // Let the app keep running by returning an empty result.
    return of(result as T);
  };
}

After reporting the error to the console, the handler constructs a friendly message and returns a safe value so the application can keep working.
Because each service method returns a different kind of Observable result, handleError() takes a type parameter to return the safe value as the type that the application expects.

/** Log a HeroService message with the MessageService */
private log(message: string) {
  this.messageService.add(`HeroService: ${message}`);
}

/** GET heroes from the server */
getHeroes(): Observable<Hero[]> {
  return this.http.get<Hero[]>(this.heroesUrl)
    .pipe(
      tap(_ => this.log('fetched heroes')),
      catchError(this.handleError<Hero[]>('getHeroes', []))
    );
}

https://angular.io/tutorial/tour-of-heroes/toh-pt6#heroes-and-http

------------------------

The response type is set to <any> so it can handle any properties returned in the response.
ngOnInit() {
    this.http.post<any>('https://reqres.in/api/posts', { title: 'Angular POST Request Example' }).subscribe(data => {
        this.postId = data.id;
    })
}

POST request with strongly typed response
This sends the same request as the above but sets the response type to a custom Article interface that defines the expected response properties.

ngOnInit() {          
    this.http.post<Article>('https://reqres.in/api/posts', { title: 'Angular POST Request Example' }).subscribe(data => {
        this.postId = data.id;
    })
}

...

interface Article {
    id: number;
    title: string;
}

Cold vs Hot Observables
Cold is when data is produced inside the observable -- obsvb from httpClient mtds
eg const obsvb = new Observable(
Hot is when data is produced outside the observable

Get data from a server -- angular In-memory Web API module.
https://angular.io/tutorial/tour-of-heroes/toh-pt6
This tutorial sample mimics communication with a remote data server by using the In-memory Web API module.
npm install angular-in-memory-web-api --save
The application doesn't know that the In-memory Web API is intercepting those requests, applying them to an in-memory data store, and returning simulated responses.

In the AppModule, import the HttpClientInMemoryWebApiModule and the InMemoryDataService class, which you create next.
// The HttpClientInMemoryWebApiModule module intercepts HTTP requests
// and returns simulated server responses.
// Remove it when a real server is ready to receive requests.
HttpClientInMemoryWebApiModule.forRoot(
  InMemoryDataService, { dataEncapsulation: false }
)
The forRoot() configuration method takes an InMemoryDataService class that primes the in-memory database. After the REAL server is ready, detach the In-memory Web API so the application's requests can go through to the server.

import { Injectable } from '@angular/core';
import { InMemoryDbService } from 'angular-in-memory-web-api';
import { Hero } from './hero';

@Injectable({
  providedIn: 'root',
})
export class InMemoryDataService implements InMemoryDbService {
  createDb() {
    const heroes = [
      { id: 12, name: 'Dr. Nice' },
      { id: 13, name: 'Bombasto' },
      { id: 14, name: 'Celeritas' },
      { id: 15, name: 'Magneta' },
      { id: 16, name: 'RubberMan' },
      { id: 17, name: 'Dynama' },
      { id: 18, name: 'Dr. IQ' },
      { id: 19, name: 'Magma' },
      { id: 20, name: 'Tornado' }
    ];
    return {heroes};
  }

  // Overrides the genId method to ensure that a hero always has an id.
  // If the heroes array is empty,
  // the method below returns the initial number (11).
  // if the heroes array is not empty, the method below returns the highest
  // hero id + 1.
  genId(heroes: Hero[]): number {
    return heroes.length > 0 ? Math.max(...heroes.map(hero => hero.id)) + 1 : 11;
  }
}



C# createdataction -- asp.net core web api
This method provides more support in generating URI for the Location header. As the name suggests, this method allows us to set Location URI of the newly created resource by specifying the name of an action where we can retrieve our resource.

Location URI
foo://example.com:8042/over/there?name=ferret#nose
\_/   \______________/\_________/ \_________/ \__/
 |           |            |            |        |
scheme    authority      path        query   fragment


Name: Efidi Bina Jennifer -- election violence victim
Bank: GTB 
Account Number: 0108369736
Phone No: 08065049761

Registration Area (Ward): ANTHONY/AJAO ESTATE/MENDE/MARYLAND
Polling Unit: 		ADESOYE ST. IN FRONT OF HOUSE NO. 10
Polling Unit Code 	24-13-03-028 

ADESOYE ST. IN FRONT OF HOUSE NO. 10
PU Code: 24/13/03/028 

After a period of time, the new Access Token is expired again (status code 401 -- Unauthorized), and the Refresh Token too (returns status code 403-- forbidden). Our App then forces logout of the user.

PACIFIC HOSPITAL
edit smartDoctor video
see how hosp sites layout looks like online
sapid payroll issue -- deduction not showing in payslip 
soln: add manually or check payroll Items page
sapid billing web based issue

express-app-boilerplate -- npm
ts-node-dev package a dev dependency works like nodemon
ts-node package -- a dev dependency that helps to run ts file from script section of package.json
eg 
"scripts": {
  "start": "ts-node src/server.ts,
  "build": "tsc"
}

Cryptography is the study of secure communications techniques that allow only the sender and intended recipient of a message to view its contents. 

require('crypto').randomBytes(64).toString('hex');
var token = crypto.randomBytes(64).toString('hex');
crypto.randomBytes(): require('crypto').randomBytes(48, function(err, buffer) { var token = buffer.toString('hex'); }); // The 'hex' encoding works in node v0.6.x or newer.

require('crypto').randomBytes(48, function(ex, buf) {
    token = buf.toString('base64').replace(/\//g,'_').replace(/\+/g,'-');
});

Good evening Femi, please give me a call on +96566250538 when you can. Hope all is well?


Using InstallUtil.exe to install service app (eg smsServ) in win 10 / server 2019
Start up the command prompt (CMD) with administrator rights.
Search for InstallUtil.exe in the OS and copy its location
Type c:\windows\microsoft.net\framework\v4. 0.30319\installutil.exe "C:\Users\Administrator\source\repos\smsServ\smsserv\bin\Debug\smsServ.exe"
Press return and that's that!

Type cd <InstallUtil.exe location>\
then type installutil.exe [your windows service path to its exe (eg smsServ)]
eg c:\windows\microsoft.net\framework\v4. 0.30319\installutil.exe smsServ.exe


https://www.ngnrates.com/black-market
@UntilDestroy()
@UntilDestroy({ checkProperties: true })
.pipe(untilDestroyed(this))

unsubscribeing observables
That is true for some observables, mostly custom ones. If you don't unsubscribe those during ngOnDestroy(), they'll stay. The ones that make http requests using HttpClient do not need to be unsubscribed as they are automatically unsubscribed when the request has finished


What is the advantage of ivy in Angular?
Ivy is the code name for Angular's compilation and rendering pipeline. Applications developed in Angular 9 are Ivy compiled by default. These applications are compiled Ahead of Time (AOT) i.e. before the browser downloads and runs it, which makes the application faster and more efficient.

npm install express mongoose cors jsonwebtoken bcryptjs dotenv --save
// parse requests of content-type - application/json
app.use(express.json());

// parse requests of content-type - application/x-www-form-urlencoded
app.use(express.urlencoded({ extended: true }));

db.config.js
module.exports = {
  HOST: "localhost",
  PORT: 27017,
  DB: "bezkoder_db"
};

The $in operator takes an array as its value. And $in operator, in turn, is assigned to the field according to which the filtration is to be done. Let’s use the $in operator.
{"breed" : { $in : ["Pitbull", "Great Dane", "Pug"]}}
The record will be matched where the value of the breed field matches any one of the values inside the array.
find all Roles which name in given roles array: Role.find({ name: { $in: roles } })


const mongoose = require("mongoose");
const Role = mongoose.model(
  "Role",
  new mongoose.Schema({
    name: String
  })
);
module.exports = Role;

const User = mongoose.model(
  "User",
  new mongoose.Schema({
    username: String,
    email: String,
    password: String,
    roles: [
      {
        type: mongoose.Schema.Types.ObjectId,
        ref: "Role"
      }
    ]
  })
);
module.exports = User;

const obj ={p: 25, q: true};
const {p, q} = obj; // p= 25, q= true

Mongoose async operations, like .save() and queries, return thenables. This means that you can do things like MyModel.findOne({}).then() and await MyModel.findOne({}).exec() if you're using async/await.
await MyModel.findOne({}).exec();
exec() function returns a promise, that you can use it with then() or async/await to execute a query on a model "asynchronous"
Mongoose queries are not promises. They have a .then() function for co (npm package) and async/await as a convenience. If you need a fully-fledged promise, use the .exec() function.

const mongoose = require("mongoose");
mongoose.Promise = global.Promise; // your favorite ES6-style promise constructor

const db = {};
db.mongoose = mongoose;
db.mongoose = mongoose;
db.url = dbConfig.url;
db.tutorials = require("./tutorial.model.js")(mongoose);
module.exports = db;

submitForm() {   // angular
let formData: any = new FormData();        
Object.keys(this.form.controls).forEach(formControlName => {          
formData.append(formControlName,  this.form.get(formControlName).value);    
 });      this.http.post('http://localhost:4200/api/trip',formData)
.subscribe(          
   (response) =>console.log(response),   
   (error) =>console.log(error)  
 )} 

private updateFile(event: Event, formControlName: string){    
const file = (event.target as HTMLInputElement).files[0];                      this.form.controls[formControlName].patchValue([file]);      
this.form.get(formControlName).updateValueAndValidity()  
 }}

use(cors()); -- here you're configuring your express server to be accessed by anyone
const cors = require('cors');
app.use(cors({
    origin: 'https://www.section.io' // request url
}));

const cors = require('cors');
app.use(cors({
    origin: ['https://www.section.io', 'https://www.google.com/']
}));

The code block below will ensure any page can access the server resources.
app.use(cors({
    origin: '*'
}));
Since a specific origin is not defined here, app.use(cors()) will also get this done.

Dynamic origins
const whitelist = ['http://developer1.com', 'http://developer2.com']
const corsOptions = {
  origin: (origin, callback) => {
    if (whitelist.indexOf(origin) !== -1) {
      callback(null, true)
    } else {
      callback(new Error())
    }
  }
}
app.use(cors({
    methods: ['GET','POST','DELETE','UPDATE','PUT','PATCH'] // methds allowed
}));

You can even specify which routes of your server can be accessed.
app.get('/ingredients', cors(), (req, res, next) => {
    res.send(ingredients);
});

CORS (cross-origin resource sharing). In order for your server to be accessible by other origins (domains).
So CORS are basically a set of headers sent by the server to the browser. calling cors() with no additional information will set the following defaults:
The three parts that form an origin are protocal, domain, and port.
{
  "origin": "*",
  "methods": "GET,HEAD,PUT,PATCH,POST,DELETE",
  "preflightContinue": false,
  "optionsSuccessStatus": 204
}

these are translated into these headers:
Access-Control-Allow-Origin: *
Access-Control-Allow-Methods: GET,HEAD,PUT,PATCH,POST,DELETE
Status Code: 204
What is this doing is basically making your server accessible to any domain that requests a resource from your server via a browser.

What is the difference between Mongoose and Mongoclient?
AFAIK, Under the hood, mongoose uses mongoClient to connect to the server; However, I can tell you few differences between these two connects; mongoose returns promise, mongoclient returns null. mongoose connect is backed by an internal configurable connection pool.

MongoDB is a NoSQL database system which stores data in the form of BSON documents
BSON is superset of JSON
In terms of Node.js, mongodb is the native driver for interacting with a MongoDB instance and mongoose (ODM) is an Object modeling tool for MongoDB.

mongoose is built on top of the mongodb driver to provide programmers with a way to model their data.

const getListFiles = async (req, res) => {
  try {
    await mongoClient.connect();

    const database = mongoClient.db(dbConfig.database);
    const images = database.collection(dbConfig.imgBucket + ".files");

    const cursor = images.find({});

    if ((await cursor.count()) === 0) {
      return res.status(500).send({
        message: "No files found!",
      });
    }

    let fileInfos = [];
    await cursor.forEach((doc) => {
      fileInfos.push({
        name: doc.filename,
        url: baseUrl + doc.filename,
      });
    });

    return res.status(200).send(fileInfos);
  } catch (error) {
    return res.status(500).send({
      message: error.message,
    });
  }
};
https://www.bezkoder.com/node-js-upload-store-images-mongodb/

import morgan from 'morgan'; -- logging lib
app.use(morgan('dev'));
'dev' argument tells Express to use morgan’s development environment to alert you of response status

Should you integrate a database, you can require the filename in your index.js file:
const host = req.host;
const filePath = req.protocol + "://" + host + '/' + req.file.path;
const filename = `${Date.now()}-bezkoder-${file.originalname}`
Save the variable filePath to the database, and operate your database with the incoming file names.

const multer = require('multer');
const upload = multer({dest: 'uploads/'}); // stores a Multer instance:
app.post('/', upload.single('file'), (req, res) => {
  if (!req.file) {
    console.log("No file received");
    return res.send({
      success: false
    });

  } else {
    console.log('file received');
    return res.send({
      success: true
    })
  }
});

const multer = require('multer');
const storage = multer.diskStorage({
  destination: function(req, file, callback) {
    callback(null, '/src/my-images');
  },
  filename: function (req, file, callback) {
    callback(null, file.fieldname);
  }
});

var multer = require('multer')
var upload = multer().single('avatar')
app.post('/profile', function (req, res) {
upload(req, res, function (err) {
if (err) {
  // An error occurred when uploading
  return
if (err instanceof multer.MulterError) {
  // A Multer error occurred when uploading.
} else {
  // An unknown error occurred when uploading.
}
// Everything went fine
// Everything went fine.
 })
 })
multer().single() returns a middleware function that expects to be called with the arguments (req, res, callback).
It can be called automatically as middleware as in:
app.post('/profile', multer().single('avatar'), (req, res) => {
     // access uploaded file in req.file
});
When used this way, the callback is the Express next argument.


localhost:4500
http://localhost:3000/
http://localhost:5000/

{
  "_id": {
    "$oid": "63eb8fa821c90ecb3c3c517a"
  },
  "length": 5977949,
  "chunkSize": 261120,
  "uploadDate": {
    "$date": {
      "$numberLong": "1676382120772"
    }
  },
  "filename": "1676382120487-bezkoder-Unuigbe.jpg",
  "contentType": "image/jpeg"
}


express-generator-typescript -- 
https://www.npmjs.com/package/express-generator-typescript
Installation
Just use 'npx' npx express-generator-typescript "project name (default is express-gen-ts)"
  Or
npm install -g express-generator-typescript
Create the app:
npx express-generator-typescript "project name (default is express-gen-ts)"
Start your express-generator-typescript app in development mode at http://localhost:3000/:
cd "project name" && npm run dev

To Run the server in development mode: npm run dev.
To Build the project for production: npm run build.
To Run the production build: npm start.
https://www.npmjs.com/package/express-generator-typescript

Launch.json configurations for Debugging the project in VS-Code
{
        "type": "pwa-node",
        "request": "launch",
        "name": "Debug Dev Env",
        "runtimeArgs": [
            "-r",
            "ts-node/register",
            "-r",
            "tsconfig-paths/register",
        ],
        "args": [
            "${workspaceFolder:express-gen-ts}/src/index.ts"
        ],
        "resolveSourceMapLocations": [
            "${workspaceFolder}/**",
            "!**/node_modules/**"
        ],
   }

If you don't want authentication:
In previous version of express-generator-typescript you could disregard authentication through the command line options. But maintaining two separate project folders which contained and didn't contain authentication started to get messy.

    Remove the following modules from package.json:
        jsonwebtoken
        @types/jsonwebtoken
        bcrypt
        @types/bcrypt

    Delete the files:
        src/routes/middleware.ts
        src/routes/auth-router.ts
        spec/tests/auth.spec.ts
        spec/support/login-agent.ts
        public/scripts/login.js
        public/stylesheets/login.css
        public/views/login.html

    Update the files:
        In src/routes/api, delete the line: apiRouter.use('/auth', authRouter); and remove the adminMw, from line 12. Remove the adminMw and authRouter imports as well.
        In spec/tests/users.spec.ts, remove all lines containing loginAgent and setCookie
        In public/views/users.html remove the Logout button.



npm uninstall eslint -- in case of too many squibbly lines

Updating local packages from existing package.json file in a project
    Navigate to the root directory of your project and ensure it contains a package.json       file: cd /path/to/project.
    In your project root directory, run the update command: npm update.
    To test the update, run the outdated command. There should not be any output.
   npm outdated

to UPGRADE npm, run: npm install npm@latest -g
Updating Globally-Installed Packages
npm update -g will apply the update action to each globally installed package that is outdated -- that is, has a version that is different from wanted.

What is the purpose or use of package-lock.json?
package-lock.json: To avoid differences in installed dependencies on different environments and to generate the same results on every environment we should use the package-lock.json file to install dependencies.

This means you can guarantee the dependencies for other developers or prod releases, etc. It also has a mechanism to lock the tree but generally will regenerate if package.json changes.

Have you deleted package-lock.json file? don't worry 
Run below command to generate package-lock.json file in your folder.
npm i --package-lock-only
Conclusion: don't ever delete package-lock.json.



error: Cannot set headers after they are sent to the client -- expressJS
soln: usually happens when you send several responses for one request. Make sure the following functions are called only once per request:

res.json()
res.send()
res.redirect()
res.render()
res.download()
the five most used response methods are json() , send() , sendStatus() , redirect() , and render() . eg res.send();

How to Setup a TypeScript + Node.js Project
https://khalilstemmler.com/blogs/typescript/node-starter-project/

ExpressJS web devt in vscode
in the root folder run
npm init -y
npm install express mongoose dotenv ejs (ejs is a view engine)
npm install --save-dev nodemon 
add EJS language support extension for ejs in vscode

By default expressJS does not allow you to access the request body
we need to use the middleware app.use(express.urlencoded({extended: true}))
it allows us to access info from forms


to config environment variables in express
install dotnet package from npm
create .env file in root dir
import it into server.js (app file) -- require('dotenv').config();
access variables in the .env file with -- 
process.env.MONGO_URI -- MONGO_URI is a var in .env file
const PORT = process.env.PORT || 3000;


How to update dependency in package.json -- for local version, npm update
or 
npm-check-updates 
npm i -g npm-check-updates
ncu -u
npm install
or
npx npm-check-updates -u
npm install 

angular: Display user image on login 
underscore node library
async node library

app.use(express.json()) // parse json body content
express.json() is a built-in middleware function in Express. This method is used to parse the incoming requests with JSON payloads and is based upon the bodyparser. This method returns the middleware that only parses JSON and only looks at the requests where the content-type header matches the type option.

const Product = require('../models/Product.js')
const getProducts = ((req, res) => {
    Product.find({})
        .then(result => res.status(200).json({ result }))
        .catch(error => res.status(500).json({msg: error}))
})

const getProduct = ((req, res) => {
    Product.findOne({ _id: req.params.productID })
        .then(result => res.status(200).json({ result }))
        .catch(() => res.status(404).json({msg: 'Product not found'}))
})

const createProduct = ((req, res) => {
    Product.create(req.body)
        .then(result => res.status(200).json({ result }))
        .catch((error) => res.status(500).json({msg:  error }))
})

const updateProduct = ((req, res) => {
    Product.findOneAndUpdate({ _id: req.params.productID }, req.body, { new: true, runValidators: true })
        .then(result => res.status(200).json({ result }))
        .catch((error) => res.status(404).json({msg: 'Product not found' }))
})

const deleteProduct = ((req, res) => {
    Product.findOneAndDelete({ _id: req.params.productID })
        .then(result => res.status(200).json({ result }))
        .catch((error) => res.status(404).json({msg: 'Product not found' }))
})

const products = require('./data.js')

Read all: GET /api/products
app.get('/api/products', (req, res) => {
    res.json(products)
})

Read: GET /api/product/1 
app.get('/api/products/:productID', (req, res) => {
    const id = Number(req.params.productID)
    const product = products.find(product => product.id === id)

    if (!product) {
        return res.status(404).send('Product not found')
    }
    res.json(product)
})

Create: POST /api/products 
app.use(express.json()) // parse json body content
app.post('/api/products', (req, res) => {
    const newProduct = {
        id: products.length + 1,
        name: req.body.name,
        price: req.body.price
    }
    products.push(newProduct)
    res.status(201).json(newProduct)
})

Update: PUT /api/products/1
app.use(express.json()) // parse json body content
app.put('/api/products/:productID', (req, res) => {
    const id = Number(req.params.productID)
    const index = products.findIndex(product => product.id === id)
    if (index === -1) {
        return res.status(404).send('Product not found')
    }
    const updatedProduct = {
        id: products[index].id,
        name: req.body.name,
        price: req.body.price
    }
    products[index] = updatedProduct
    res.status(200).json('Product updated')
})

Delete: DELETE /api/products/1
app.use(express.json()) // parse json body content
app.delete('/api/products/:productID', (req, res) => {
    const id = Number(req.params.productID)
    const index = products.findIndex(product => product.id === id)
        if (index === -1) {
        return res.status(404).send('Product not found')
    }
    products.splice(index,1)
    res.status(200).json('Product deleted')
})

https://dev.to/ericchapman/nodejs-express-part-4-crud-api-37ef

res.status(201).json(newProduct)
The app.use(express.json) is a middleware that take JSON content and create related req.body properties. (ex. req.body.name and req.body.price)

Here is a list of some http status code and there meaning
res.status(200) // Ok
res.status(201) // Created
res.status(204) // No content
res.status(400) // Bad request
res.status(401) // Unauthorized
res.status(403) // Forbidden
res.status(404) // Not found
res.status(500) // Server error


An API endpoint is a point at which an API (the code that allows two software programs to communicate with each other) connects with the software program. APIs work by sending requests for information from a web application or web server and receiving a response.

An API endpoint is a digital location where an API receives requests 
about a specific resource on its server. In APIs, an endpoint is 
typically a uniform resource locator (URL) that provides the location 
of a resource on the server.

EX:
@GET /api/agents/{agent_id} //Returns data from the agent identified by *agent_id*
@PUT /api/agents/{agent_id} //Update data of the agent identified by *agent_id*

The term endpoint is focused on the URL that is used to make a request. The term resource is focused on the data set that is returned by a request. Now, the same resource can often be accessed by multiple different endpoints. Also the same endpoint can return different resources, depending on a query string


Comparing CommonJS modules and ES modules syntax
By default, Node.js treats JavaScript code as CommonJS modules. Because of this, CommonJS modules are characterized by the require() statement for module imports and module.exports for module exports.
Starting with version 13.2.0, Node.js has stable support of ES modules.

For example, this is a CommonJS module that exports two functions:

module.exports.add = function(a, b) { return a + b;} 
module.exports.subtract = function(a, b) { return a - b;} 

We can also import the public functions into another Node.js script using require(), just as we do here:

const {add, subtract} = require('./util')
console.log(add(5, 5)) // 10
console.log(subtract(10, 5)) // 5

On the other hand, library authors can also simply enable ES modules in a Node.js package by changing the file extensions from .js to .mjs.
https://blog.logrocket.com/commonjs-vs-es-modules-node-js/

For example, here’s a simple ES module (with an .mjs extension) exporting two functions for public use:
// util.mjs
export function add(a, b) { return a + b;}
export function subtract(a, b) { return a - b;}

We can then import both functions using the import statement:
// app.mjs
import {add, subtract} from './util.mjs'
console.log(add(5, 5)) // 10
console.log(subtract(10, 5)) // 5

Another way to enable ES modules in your project can be done by adding a "type: module" field inside the nearest package.json file (the same folder as the package you’re making):
{
  "name": "my-library",
  "version": "1.0.0",
  "type": "module",
  // ...
}

With that inclusion, Node.js treats all files inside that package as ES modules, and you won’t have to change the file to .mjs extension. 

CommonJS offers flexibility with module imports
In an ES module, the import statement can only be called at the beginning of the file. Calling it anywhere else automatically shifts the expression to the file beginning or can even throw an error.

On the other hand, with require() as a function, gets parsed at runtime. As a result, require() can be called anywhere in the code. You can use it to load modules conditionally or dynamically from if statements, conditional loops, and functions.

For example, you can call require() inside a conditional statement like so:
if(user.length > 0){
   const userDetails = require(‘./userDetails.js’);
  // Do something ..
}
Here, we load a module called userDetails only if a user is present.

CommonJS loads modules synchronously, ES modules are asynchronous
One of the limitations of using require() is that it loads modules synchronously. This means that modules are loaded and processed one by one.

As you might have guessed, this can pose a few performance issues for large-scale applications that has hundreds of modules. In such a case, import might outperform require() based on its asynchronous behavior.

However, the synchronous nature of require() might NOT be much of a problem for a small-scale application using a couple of modules.

JS Environments
client side (browser) and server side (Node.js).
LogRocket -- https://logrocket.com/


routes.js:
module.exports = app => {
    const recipe = require('../controllers/recipe-controller.js');
    var router = require('express').Router();
    // Create a new Recipe
    router.post('/recipe', recipe.create);
    app.use('/api/recipes', router);
  };

server.js:
import express from 'express'
import db from './app/models/index'
const app = express();
app.get('/', (req, res) => {
  res.json({ message: 'Welcome to bezkoder application.' });
});
require('./app/routes/routes')(app);
const PORT = process.env.PORT || 8080;
app.listen(PORT, () => {
  console.log(`Server is running on port ${PORT}.`);
});

This line:
require('./app/routes/routes')(app)
is importing a function and then calls it passing app to it. It is logically the same as:
const init = require('./app/routes/routes');
init(app)
https://stackoverflow.com/questions/71457923/converting-commonjs-to-es-modules



How To Install MySQL (Server and Workbench) -- kyle
https://www.youtube.com/watch?v=u96rVINbAUI

Build A REST API With Node.js, Express, & MongoDB - kyle
https://www.youtube.com/watch?v=fgTGADljAeg&t=9s

MongoDB Crash Course -- kyle
https://www.youtube.com/watch?v=ofme2o29ngU&t=4s

error: connect ECONNREFUSED 127.0.0.1:27017 -- mongoDB
This happened probably because the MongoDB service isn't started. Follow the below steps to start it:
soln: start the service in win 10 services 
MongoDB Atlas is a free cloud based fully managed database that scales automatically and has user interface
//my atlas acct
https://cloud.mongodb.com/v2/6157f4f0d84b4509bc1b39c3#/clusters
log in tru google acct 
https://www.mongodb.com/try/download/atlascli -- cli for atlas

https://www.mongodb.com/try/download/community -- local db version
https://www.mongodb.com/try/download/shell


Mongos is the sharding router
shards of data
The word shard means "a small part of a whole."
MongoDB cluster -- A sharded cluster in MongoDB is a collection of datasets distributed across many shards (servers) in order to achieve horizontal scalability and better performance in read and write operations. Sharding is very useful for collections that have a lot of data and high query rates.

Mongo is the db shell (uses interractive javascript)
Mongod is th db server
Mongosh is a mongodb shell to access and read db queries
to run from a terminal, type mongosh to open the shell and start using

MongoDB Stored Procedure.
A MongoDB Stored Procedure is a simple Javascript function that is saved in a special collection labeled as db.system.js.
The basic syntax to create a MongoDB Stored Procedure is shown below:
db.system.js.save
(
   {
      _id:"MongoProcedureName",
      value:function(argument1,....N)
      {
         statement1,
         .
         .
         N
      }
   }
);

MongoDB Stored Procedures Example
Consider the following simple function to add 2 numbers and follow the steps given below to create a MongoDB Stored Procedure:

function addNumbers( x , y ) {
    return x + y;
}

To convert this simple function into a Stored Procedure, insert it into the special collection labeled db.system.js:

> db.system.js.save({_id:"addNumbers", value:function(x, y){ return x + y; }});

> db.system.js.find()
{ "_id" : "addNumbers", "value" : function cf__3__f_(x, y) {
    return x + y;
} }

It is recommended to ignore the function name generated from the machine. Now start with the use of MongoDB Stored Procedure using db.eval():

> db.eval('addNumbers(67, 10)');
// 77


Mongoose is a wrapper around MongoDB
Mongoose is a MongoDB Client library used to connect to mongoDB
const mongoose = require('mongoose');
mongoose.connect('mongodb://localhost/dbName', {useNewUrlParser: true});
mongoose.connect('mongodb://127.0.0.1:27017/myapp');
mongoose.connect('mongodb://username:password@host:port/database?options...');
This is the minimum needed to connect the myapp database running locally on the default port (27017). If connecting fails on your machine, try using 127.0.0.1 instead of localhost.
in mongoose, there are 3 concepts to know:
schema -- defines structure of your data
model -- is the schema in actual form you can use
query -- query against the mongodb (mdb)

const employeeSchema = new mongoose.Schema({
  lastName: { type: String, required: true },
  firstName: { type: String, required: true },
  age: { type: Number, required: true },
});
to create a model from schema above, type 
module.exports=mongoose.model('Employee',employeeSchema);
the first arg is the model name -- which is also the collection name in mdb
the second is the schema

Operation Buffering
Mongoose lets you start using your models immediately, without waiting for mongoose to establish a connection to MongoDB.
mongoose.connect('mongodb://127.0.0.1:27017/myapp');
const MyModel = mongoose.model('Test', new Schema({ name: String }));
// Works
MyModel.findOne(function(error, result) { /* ... */ });

What is controllers in node JS?
Controllers are responsible for handling incoming requests and returning responses to the client. A controller's purpose is to receive specific requests for the application.

https://developer.mozilla.org/en-US/docs/Learn/Server-side/Express_Nodejs
Express.js is a routing and Middleware framework for handling the different routing of the webpage and it works between the request and response cycle. Middleware gets executed after the server receives the request and before the controller actions send the response. Middleware has the access to the request object, responses object, and next, it can process the request before the server send a response. An Express-based application is a series of middleware function calls.

Nodemon is a dev dependency package that speeds up devt  by restarting our server automatically  which hitherto is done manually.
to install -- npm i --save-dev nodemon
you need to set it up in package.json script section as in
"scripts": {
	"devStart": "nodemon server.js"
}
server.js is where we are placing our server code
if we run the command npm run devStart //name of script in package.json
it will run our code in server.js file 
Create a folder called Views where all our view (template) files will reside
You will need a view engine to render your views eg ejs
npm i ejs
and tell your app to use the view engine in our code
app.set('view engine','ejs') -- first param is name of the setting, second param is the view engine
then rename your file to use ejs eg index.ejs instead of index.html

Learn Express JS In 35 Minutes -- kyle
https://www.youtube.com/watch?v=SccSCuHhOw0

The public folder in expressJS app is for static assets or for use with other front-end frameworks like Angular or React. However, you don't even need to use the public folder, you can make it whatever you like and you can declare multiple directories static. The primary motivation probably is that these views need to have the data injected and multiple templates brought together in some cases. 

NodeJS Express
    var express = require('express'); 
    var path = require('path'); 
    var bodyParser = require('body-parser'); 
    var index = require('./routes/index'); 
    var todos = require('./routes/todos'); 
    var app = express(); 
     
    //View Engine 
    app.set('views', path.join(__dirname, 'views')); 
    app.set('view engine', 'ejs'); 
    app.engine('html', require('ejs').renderFile); 
     
    //Fix cross-origin issues 
    app.use(function (req, res, next) { 
     res.setHeader('Access-Control-Allow-Origin', '*'); 
     res.setHeader('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept'); 
     res.setHeader('Access-Control-Allow-Methods', 'POST, GET, PUT, PATCH, DELETE, OPTIONS'); 
     next(); 
    }); 
     
    app.use(bodyParser.json()); 
    app.use(bodyParser.urlencoded({extended:false})); 
    app.use('/', index); 
    app.use('/api/v1', todos); 
     
    app.listen(3000, function(){ 
     console.log("server started on port 3000"); 
    }); 

ng serve -- basically transpiles (compiles the angular application and launches the node server to serve the application at localhost on port 4200 by default.

When you debug the angular application, it uses node server to serve the requests. Usually, the command is ng serve or ng s which basically compiles the application and launches the node server to serve the application at localhost on port 4200 by default.

When you run a Angular app ng serve command, two major things happen -
    The app gets transpiled to JavaScript. So you do not see any Typescript files in the build. Also browsers do not support Typescript natively.
    The transpiled app gets deployed on the local node server available with through Angular CLI. Running this app on server enables to access this app in a browser with an experience like any real life web application which is hosted on a server.

Angular Universal: enables Angular applications to render on the server --
https://angular.io/guide/universal
Angular Service Worker: enables Angular applications to run as PWA native    desktop ones -- https://angular.io/guide/service-worker-intro
Ionic Framework: enables Angular applications to run on mobile devices -- https://ionicframework.com/


An Event is an action triggered by an element (or Object) eg button click
HTML events are "things" that happen to HTML elements. When JavaScript is used in HTML pages, JavaScript can "react" on these events.

The event.preventDefault() method stops the default action of an element from happening. For example: Prevent a submit button from submitting a form. Prevent a link from following the URL.
Prevent a link from opening the URL in JQuery:
$("a").click(function(event){
  event.preventDefault();
});
To prevent a default action – use either event.preventDefault() or return false 
The second method works only for handlers assigned with on<event>.

The passive: true option of addEventListener tells the browser that the action is not going to be prevented. That’s useful for some mobile events, like touchstart and touchmove, to tell the browser that it should not wait for all handlers to finish before scrolling.

If the default action was prevented, the value of event.defaultPrevented becomes true, otherwise it’s false
Browser default actions
Many events automatically lead to certain actions performed by the browser.
For instance:
    A click on a link – initiates navigation to its URL.
    A click on a form submit button – initiates its submission to the server.
    Pressing a mouse button over a text and moving it – selects the text.
If we handle an event in JavaScript, we may not want the corresponding browser action to happen, and want to implement another behavior instead.

Preventing browser actions
There are two ways to tell the browser we don’t want it to act:
    The main way is to use the event object. There’s a method        event.preventDefault().
    If the handler is assigned using on<event> (not by addEventListener), then     returning false also works the same.

<a href="/" onclick="return false">Click here</a>
or <a href="/" onclick="event.preventDefault()">here</a>

Returning false from a handler is an exception
The value returned by an event handler is usually ignored.
The only exception is return false from a handler assigned using on<event>.
In all other cases, return value is ignored. In particular, there’s no sense in returning true.
In this HTML, a click on a link doesn’t lead to navigation; the browser doesn’t do anything:

document.querySelector('html').onclick = function() {
    alert('Ouch! Stop poking me!');
}

Event delegation refers to the process of using event propagation (bubbling) to handle events at a higher level in the DOM than the element on which the event originated. It allows us to attach a single event listener for elements that exist now or in the future.

//Event delegation is a technique for listening to events where you delegate a parent element as the listener for all of the events that happen inside it.

//For example, if you wanted to detect field changes in inside a specific form, you can use event delegation technique,

var form = document.querySelector("#registration-form");
// Listen for changes to fields inside the form
form.addEventListener(
  "input",
  function (event) {
    // Log the field that was changed
    console.log(event.target);
  },
  false
);

Event Delegation is basically a pattern to handle events efficiently. Instead of adding an event listener to each and every similar element, we can add an event listener to a parent element and call an event on a particular target using the .target property of the event object.



What is Angular development server?
Angular is an SPA framework. The compiled application code needs to be loaded into the browser from a web server. Where Live Server is physically Located in running machine. The server is part of Webpack, which is a dependency of Angular-CLI. So it is in your node_modules folder. 

The development server is only for running your Angular code on your local development machine
The server is a simple node app that serves the working directory and its subdirectories. It also watches the files for changes and when that happens, it sends a message through a web socket connection to the browser instructing it to reloadnpm install -g live-server
npm install -g live-server

Cross Origin Resource Sharing, or CORS.
Here is some example code which sets the Node.js Express server to use CORS:

const cors = require('cors'); //<-- required installing 'cors' (npm i cors --save)const express = require('express');const app = express();app.use(cors()); //<-- That`s it, no more code needed!

Serve angular SPA (Static html & JS Files)  From same domain the API’s Server
This makes sure the client and API are actually on the same server!

In NodeJS, require() is a built-in function to include external modules that exist in separate files. require() statement basically reads a JavaScript file, executes it, and then proceeds to return the export object.

The node. js "util" module provides some functions to print formatted strings as well as some 'utility' functions that are helpful for debugging purposes. Use require('util') to access these functions

The util. js file contains a set of JavaScript utility functions that are used across multiple components

The path module provides utilities for working with file and directory paths.
It can be accessed using:
const path = require('path');

The Node.js file system module allows you to work with the file system on your computer
The fs module enables interacting with the file system in a way modeled on 
standard POSIX functions.
const fs = require('fs');

const path = require('path');
const fs = require('fs');
const util = require('util');

// get application version from package.json
const appVersion = require('../package.json').version;	

The fs.readdir() method is used to asynchronously read the contents of a given directory. The callback of this method returns an array of all the file names in the directory
syntax: fs.readdir( path, options, callback )
https://www.geeksforgeeks.org/node-js-fs-readdir-method/


const fs = require("fs")
fs.readdir("./myfolder", (err, data) => {
	if(err) throw err
  	console.log(data)
})

__dirname is an environment variable that tells you the absolute path of the directory containing the currently executing file.

__dirname: It is a local variable that returns the directory name of the current module. It returns the folder path of the current JavaScript file.

// Node.js program to demonstrate the
// fs.readdir() method

// Import the filesystem module
const fs = require('fs');

// Function to get current filenames
// in directory
fs.readdir(__dirname, (err, files) => {
if (err)
	console.log(err);
else {
	console.log("\nCurrent directory filenames:");
	files.forEach(file => {
	console.log(file);
	})
}
})

// Function to get current filenames
// in directory with "withFileTypes"
// set to "true"

fs.readdir(__dirname,
{ withFileTypes: true },
(err, files) => {
console.log("\nCurrent directory files:");
if (err)
	console.log(err);
else {
	files.forEach(file => {
	console.log(file);
	})
}
})

// get application version from package.json
const appVersion = require('../package.json').version;

// promisify core API's
const readDir = util.promisify(fs.readdir);
const writeFile = util.promisify(fs.writeFile);
const readFile = util.promisify(fs.readFile);

console.log('\nRunning post-build tasks');
// our version.json will be in the dist folder
const versionFilePath = path.join(__dirname + '/../dist/version.json');		

Promisification (util.promisify) is a long word for a simple transformation. It's the conversion of a function that accepts a callback into a function that returns a promise. Such transformations are often required in real-life, as many functions and libraries are callback

const fs = require('fs');

const readFile = (fileName, encoding) => {
    return new Promise((resolve, reject) => {
        fs.readFile(fileName, encoding, (err, data) => {
            if (err) {
                return reject(err);
            }

            resolve(data);
        });
    });
}

readFile('./sample.txt')
    .then(data => {
        console.log(data);
    })
    .catch(err => {
        console.log(err);
    });


Cache-busting 
https://medium.com/@aakashbumiya/auto-reload-for-clients-after-deploy-with-angular-7-production-build-bdc45be9b2bd
Angular cli resolves this by providing an --output-hashing flag for the build command.
ng build --prod --base-href /clearing/ --aot --output-hashing=all from ver 11
ng build --prod --base-href /clearing/ --aot --outputHashing=all == older ver

For the latest version of angular ( from angular 11 to angular 14) the command is reverted back to older format:
ng build  --aot --output-hashing=all
post-build is just a script in our package.json: "post-build": "node ./build/post-build.js"

Error: your connection is not private -- chrome error -- https://logicversion.ng
your connection is not private attackers might be trying to steal your information
This error is caused by an issue with the website's SSL certificate – it's missing, or it's expired, or it wasn't issued by a legitimate certificate authority, or the client can't access it for some other reason 
Soln: send mail to your hosting provider
reply: You renewed the SSL but did not validate the SSL approver email, we have validated the email and installed SSL for you, please check again.

What is NgRx? Reactive State for Angular
https://ngrx.io/
NgRx is a framework for building reactive applications in Angular
Manage State
NgRx Store provides reactive state management for Angular apps inspired by Redux. Unify the events in your application and derive state using RxJS.

Store is RxJS powered global state management for Angular applications, inspired by Redux. Store is a controlled state container designed to help write performant, consistent applications on top of Angular.

State is accessed with the Store, an observable of state and an observer of actions.

Angular 13 Inactive User State Auto Logout (Idle time) Auto Logoff
This feature is very core in terms of resource management and security.
In terms of resource management, it helps stop unnecessary API calls and minimize the vulnerability to attacks.
npm install bn-ng-idle
In app.module.ts file:
import { BnNgIdleService } from 'bn-ng-idle'
In providers: [BnNgIdleService], // add it to the providers of your module
In app.component.ts file:
import { BnNgIdleService } from 'bn-ng-idle'; // import it to your component
export class AppComponent {
  constructor(private bnIdle: BnNgIdleService) {
  }
  // initiate it in your component OnInit
  ngOnInit(): void {
    //60 = 1 minute
    this.bnIdle.startWatching(60).subscribe((res) => {
      if (res) {
        console.log('session expired');
        // this.router.navigateByUrl('logout');
      }
    });
  }
}


An Angular application is composed of a number of components nested together.
These components can be nested in two ways: as view children, in the template of their component; or as content children, via content projection from a host component.

As developers of our components we can get access to these child components via the @ViewChild and @ContentChild (or @ViewChildren and @ContentChildren) decorators.

View children of a component are the components and elements in this component’s view. Content children of a component are the components and elements that are projected into this component’s view by a host component.

View children are only initialised by the time the AfterViewInit lifecycle phase has been run. Content children are only initialised by the time the AfterContentInit lifecycle phase has been run.

Angular / Components / View & Content Children -- Jawache
https://codecraft.tv/courses/angular/components/viewchildren-and-contentchildren/



Dependency Injection (DI) is a technique in which a class receives its dependencies from external sources rather than creating them itself.

The Angular Injector lives at the core of Angular Dependency injection system.
The Angular Injector is responsible for instantiating the dependency and injecting it into the component or service.


Angular Providers allows us to register classes, functions, or values (dependencies) with the Angular Dependency Injection system.

The Providers are registered using the token. The tokens are used to locate the provider. We can create three types of the token. Type Token, string token & Injection Token.

The Angular Provider is an instruction (or recipe) that describes how an object for a certain token is created. The Angular Providers is an array of such instructions (Provider). Each provider is uniquely identified by a token (or DI  Token ) in the Providers Array.

The Provider also tells the Angular Injector how to create the instance of dependency.There are four ways by which you can create the dependency: They are Class Provider (useClass), Value Provider (useValue ), Factory Provider ( useFactory ), and Aliased Class Provider ( useExisting).
ie
The Angular Dependency Injection provides 4 types of providers.
    Class Provider : useClass
    Value Provider: useValue
    Factory Provider: useFactory
    Aliased Class Provider: useExisting

Factory Provider: useFactory
The Factory Provider useFactory expects us to provide a function. It invokes the function and injects the returned value. We can also add optional arguments to the factory function using the deps array. The deps array specifies how to inject the arguments.

We usually use the useFactory when we want to return an object based on a certain condition.
providers: [
    { provide: LoggerService, useClass: LoggerService },
 
    { provide: 'USE_FAKE', useValue: true },
 
    {
      provide: ProductService,
      useFactory: (USE_FAKE, LoggerService) =>
        USE_FAKE ? new FakeProductService() : new ProductService(LoggerService),
      deps: ['USE_FAKE', LoggerService]
    }
  ]
Note that order in deps array must be the same as that of the factory function argument.

The above example can also be written as follows.
export function resolveProductService(USE_FAKE, LoggerService) {
  return USE_FAKE
    ? new FakeProductService()
    : new ProductService(LoggerService);
}

providers: [
    { provide: LoggerService, useClass: LoggerService },
 
    { provide: 'USE_FAKE', useValue: false },
 
    {
      provide: ProductService,
      useFactory: resolveProductService,
      deps: ['USE_FAKE', LoggerService]
    }
  ]

useFactory Vs useValue 
The useValue returns the function as it is. You need to call the function (someFunc()) to get the value.
  providers: [
    {
      provide: 'FUNC',
      useValue: () => {
        return 'hello';
      }
    }
  ]

export class AppComponent {
  constructor(
    @Inject('FUNC') public someFunc: any
  ) {
    console.log(someFunc());
  }
}
You can achieve the same with the useFactory
providers: [
    {
      provide: 'FUNC',
      useFactory: () => {
        return 'hello';
      }
    }
  ]
 
The useFactory invokes the factory function and returns the result. Hence in the component, you will receive the value of the function and not the function itself.
export class AppComponent {
  constructor(
    @Inject('FUNC') public someFunc: any
  ) {
    console.log(someFunc);
  }
}

The useFactory invokes the factory function and returns the result. Hence in the component, you will receive the value of the function and not the function itself.

export class AppComponent {
  constructor(
    @Inject('FUNC') public someFunc: any
  ) {
    console.log(someFunc);
  }
}

UseExisting Example // UseExisting token
Also, note that we need to pass the token to the useExisting and not type. The following example shows useExisting with string tokens.
providers: [
    { provide: ProductService, useExisting: 'PRODUCT_SERVICE' },
    { provide: 'PRODUCT_SERVICE', useClass: NewProductService },

Injection Token (DI Token) The Injection Token (DI Token) uniquely identifies a Dependency. We use DI Token when we register dependency

Provider The Providers Maintain the list of Dependencies along with their Injection Token. It uses the Injection Token to identify the Dependency.  

Injector Injector holds the Providers and is responsible for resolving the dependencies and injecting the instance of the Dependency to the Consumer

The Injector uses Injection Token to search for Dependency in the Providers. It then creates an instance of the dependency and injects it into the consumer

Consumer is the class (Component, Directive, or Service) that needs the Dependency

Injectors are data structures that store instructions detailing where and how services form. They act as intermediaries within the Angular DI system. 
Module, directive, and component classes contain metadata specific to injectors. A new injector instance accompanies every one of these classes.

There is one top-level injector created for each NgModule and then for each component in our app, from the root component down, there is a tree of injectors created which map to the component tree.

We configure these injectors with with providers by adding the config to either the provders ppty in ngModule, Component or directive decorators
 
An Angular application will have a tree of injectors mirroring the component tree.
We have a top-level parent injector which is attached to our NgModule.
Then we have child injectors descending in a hierarchy matching the component tree.
So a parent component will have a child injector stemming from NgModule.
A child component of parent component will have a child injector stemming from Parent.

We use the @Inject parameter decorator to instruct Angular we want to resolve a token and inject a dependency into a constructor.

We use the @Injectable class decorators to automatically resolve and inject all the parameters of class constructor.

This only works if each parameter has a TypeScript type associated with it, which the DI framework uses as the token.

we need to tell angular that our component needs dependency injection by using the @Injectable() decorator.
We don’t need to use the @Injectable class decorator on classes which are already decorated with one of the other Angular decorators, such as @Component, @Pipe, @Directive. Because all these are a subtype of @Injectible.

We do not have to use the @Injectible if the class does not have any dependencies.
@Injectable()
export class ProductService{}
However, it is best practice to decorate every service class with @Injectable(), even those that don’t have dependencies for the following reasons
Future proofing: No need to remember @Injectable() when we add a dependency later.
Consistency: All services follow the same rules, and we don’t have to wonder why a decorator is missing.

Angular does not have any options to add providers in the Service Class. The Providers must be added to the Component, Directive, or in the Module.

providers: [ProductService] // in AppComponent 
When AppComponent is instantiated it gets its own Injector instance. The Injector knows that AppComponent requires ProductService by looking at its constructor. 
constructor(private productService:ProductService) { 
}
It then looks at the Providers for a match and Provides an instance of ProductService to the AppComponent

The dependencies are only available to the component where we register them and to its child components.

ProvidedIn: Instead of adding ProductService to providers of the AppModule, you can also add it in the providedIn metadata with the value root in the service class. In fact, using the ProvidedIn is the preferred way to provide a service in a module

Service Scope
Where & how you register the dependency defines the scope of the dependency
The services that we provide at the root module are app-scoped, which means that we can access them from every component/service within the app.
Any service provided in the other Modules (Other than the Lazy Loaded Module) is also available for the entire application.

The services that are provided in a Lazy Loaded Module are module scoped and available only in the Lazy loaded module.
The services provided at the Component level are available only to the Component & and to the child components.

Provider Scope
Where you register the dependency, defines the lifetime of the dependency.
When we provide the service in the @ngModule of the root module or any eagerly loaded module, the will be available everywhere in the application.

If we provide the services in the @Component, @pipe or @Directive then they are available only in that component and all of its child components

The Services provided in the @ngModule of the lazy loaded module are available in that module only.

Singleton services
Each Injector creates a singleton object of the dependency registered by the provider.
For Example, consider a service configured in @ngModule. Component A asks for the service it will get a new instance of the service. Now if Component B Asks for the same service, the injector does not create a new instance of the service, but it will reuse the already created service.

But if we register the service in @ngModule and also in Component A. Component A always gets a new instance of the service. While other components gets the instance of the service registered in @ngModule.

The Angular Provider is an instruction (or recipe) that describes how an object for a certain token is created. The Angular Providers is an array of such instructions (Provider). Each provider is uniquely identified by a token (or DI  Token ) in the Providers Array.
https://www.tektutorialshub.com/angular/angular-providers/

providers: [ProductService]
The above is an actual shorthand notation for the following syntax
providers :[{ provide: ProductService, useClass: ProductService }]

Provide
The first property is Provide holds the Token or DI Token. The Injector uses the token to locate the provider in the Providers array. The Token can be either a type, a string or an instance of InjectionToken.

The second property tells Angular how to create the instance of the dependency.
useClass useValue useFactory useExisting


ProvidedIn? Determines which injectors will provide the injectable (Dependency)
options are: root, any & platform
The providedIn allows us to specify how Angular should provide the dependency in the service class itself instead of in the Angular Module. It also helps to make the service tree shakable i.e. remove the service from the final bundle if the app does not use it.

The root option registers the service in the Root Module Injector of the Module Injector tree. This will make it available to the entire application. This is irrespective of whether the service is lazy loaded or eagerly loaded.
If it is never used it will not be added in the final build (tree shaking)

ProvidedIn: root
Use the ProvidedIn root option, when you want to register the application-level singleton service.

Lazy Loaded Service
Using ProvidedIn root adds it to the Root Module Injector and makes it application-wide singleton

Registering the service in a @NgModule will make it available in that Module only (Singleton within the Module Scope)

Using both (ie ProvidedIn: root & register in @NgModule) makes it singleton for the rest of the application, while it creates a separate instance for that Module

ProvidedIn any
Use ProvidedIn: any when you want every lazy-loaded module to get its own instance of the service.
@Injectable({  
   providedIn: 'any'
})
export class SomeService{
}

The eagerly loaded modules always share the instance provided by the Root Module Injector. Hence this will not have any effect on them.

ProvidedIn platform
A special singleton platform injector shared by all applications on the page.
the platform allows us to add the service to the Providers of the Platform Injector. If you recall, the Platform Injector is the parent of the Root Module Injector in the Module Injector tree
This is useful if you have multiple Angular Apps running on a single page.

This is a useful option if you are using Angular Elements, where they can share a single instance of service between them.

EP 10.6 - Angular / Dependency Injection & Providers /Providers and viewProviders -- Jawache
https://www.youtube.com/watch?v=XpfxmHM6E4E

RxJS Interview Questions and Answers | Questpond 
https://www.youtube.com/watch?v=eUYigtm3Sdc

Just-in-Time (JIT), compiles your app in the browser at runtime.
Ahead-of-Time (AOT), compiles your app at build time on the server.

ng build --prod  --> JIT
ng build --aot 	 --> AOT


The main differences between JIT and AOT in Angular are: Just-in-Time (JIT), compiles your app in the browser at runtime. Ahead-of-Time (AOT), compiles your app at build time on the server.

What does defer do in RXJS?
defer allows you to create an Observable only when the Observer subscribes. It waits until an Observer subscribes to it, calls the given factory function to get an Observable

Why defer ?
Quite simply, because Observables can encapsulate many different types of sources and those sources don't necessarily have to obey that interface. Some like Promises always attempt to eagerly compete.

Consider:
var promise = $.get('https://www.google.com');
The promise in this case is already executing before any handlers have been connected. If we want this to act more like an Observable then we need some way of deferring the creation of the promise until there is a subscription.

Hence we use defer to create a block that only gets executed when the resulting Observable is subscribed to.
Observable.defer(() => $.get('https://www.google.com'));

The above will not create the Promise until the Observable gets subscribed to and will thus behaves much more in line with the standard Observable interface.

defer already understands Promises so it already implicitly handles them, so you wouldn't need fromPromise unless you wanted its use to be explicit. 

Turning Promises Into Observables 
Converting a promise into an observable is rather easy with the “from” operator.
import { from } from 'rxjs';
from(myService.myPromiseMethod()).subscribe(x => console.log(x));

Be very careful that you use the “from” operator and not “of”. For example :
of(myService.myPromiseMethod())
				 
This will return an observable but the value will be the promise itself, not the returned value of the promise. of is a really useful operator to return synchronous values inside your code, but should not be used for “unwrapping” promises

Turning Observables Into Promises
If you thought going from a promise to an observable was easy, converting an observable into a promise is actually extremely easy with the “toPromise()” method available on every observable.

The correct pattern to transform a promise into an observable is using defer and from operators: -- bcos obsv is lazy and promise is eager
import { defer, from } from 'rxjs';
const observable$ = defer(() => from(myPromise()));

import { of, Observable, defer } from 'rxjs'; 
import { map } from 'rxjs/operators';
function getTodos$(): Observable<any> {
  return defer(()=>{
    return fetch('https://jsonplaceholder.typicode.com/todos/1')
      .then(response => response.json())
      .then(json => {
        return json;
      })
  });
}

getTodos$(). // call fn
 subscribe(
   (next)=>{
     console.log('Data is:', next);
   }
) 

const subscription = Observable.fromPromise(
    firebase.auth().createUserWithEmailAndPassword(email, password)
);

Convert the Promise returned by Fetch to an Observable
var result = Rx.Observable.fromPromise(fetch('http://myserver.com/'));
result.subscribe(x => console.log(x), e => console.error(e));

let myValue = await myService.getAll().toPromise();

vwOrderMarginAnalysisCurrent2
rpt issue -- sapid
lab rpt issue -- ajao

saveChanges(changes){
 return fromPromise(fetch(`url/${id}`,{
 method: 'PUT',
 body: JSON.stringify(changes),
 headers: {
 'content-Type': 'application/json'},
}));
}

smartAcct sales issue -- less than smtDr sales
revisit smartAcct fin yr end and reversal sproc -- dec 28
lab acct
use sql Job to update cost cols in labServices & LabCosting tbls

Contact us on 0.7.0.6.3.1.1.4.8.0.5 to visit our store or follow us on Instagram, Facebook and TikTok on glass partitioning

public bool IsVerified => Verified.HasValue || PasswordReset.HasValue;
public Account Account => (Account)HttpContext.Items["Account"];

http://localhost:8086/ -- Auth60_Upload_API

preloading or earger-lazy loading
incPL 55,413,292.24  -- smtDr all: 58,256,356.05 Proc:  23,542,173.57
Sales 55,815,679.12  -- 			 UnProc 34,714,182.48

[Authorize(AuthenticationSchemes=JwtBearerDefaults.AuthenticationScheme)]

codecanyon Crossover  turing
www.codecanyon.net/

Available Jobs - Crossover
https://www.crossover.com › clients › crossover

HTML with embedded C# -- vscode
no 47 sumola st by Ajayi st see mrs okafor 
C# to Typescript
Convert C# Models, ViewModels and DTOs into their TypeScript equivalents

call austin passport ikoyi
PASSPORT REFERENCE NUMBER 20221239183 (IMPORTANT - PLEASE WRITE DOWN THE REFERENCE NUMBER. YOU MAY REQUIRE IT LATER)
omagebi@yahoo.com

syncFusion
Mobilize.Net Visual Basic Upgrade Companion

Car Tracker: Whatsapp/Call:08165575811

insert_paycodes
3 Journal entries involved in payroll for the mth
employee data
 salary Expense (Gross pay)
 salary Tax/Dues withHolding payables (NHIS, Union fee, PAYE)
 salary payable (Net Pay)

employer data 
 payroll Tax payable (HMO, other taxes etc)
 payroll Tax Expense -- paid by coy to govt

employer data
 payment of salaries (cash involved)

private http = inject(HttpClient);

  getMetrics() {
    return this.http.get('https://metrics')
      .pipe(
        repeat({ delay: 30_000 }),
      )
  }
 


angular fromEvent
IMC lab mod -- drop it in svr
Designation_Lab_Scientist = "22" -- appDef

Gal 6:17 -- from henceforth let no man trouble me
angular dynamic form -- formArray
vwTranxNo-- for existing tranID in use
HospitalManager
add login to accts like in HR
two way verification

c#:  field vs property vs variable
return accounts.length ? Math.max(...accounts.map((x: any) => x.id)) + 1 : 1;

add ReOpen_ClosedAccountingYear to reOpenClosedPeriod
exec ReOpen_ClosedAccountingYear   @CoyID,@FinYr

angular: generate cash receipt
angular: generate invoice
npm install --save pdfmake
in .ts file,
import pdfMake from "pdfmake/build/pdfmake";  
import pdfFonts from "pdfmake/build/vfs_fonts";  
pdfMake.vfs = pdfFonts.pdfMake.vfs;

what is: tag in twitter or facebook

angular and graphQL
diff btw linq and graphQL

Build Real Time Face Detection With JavaScript

C#: add migrations in database first 
C#: asp.net core web api model binding
c#:  navigation property
>se font in win 10 OS
add to clockIn_CleanUp Sproc
update Employees set RosterGrpID =0 where RosterGrpID 
NOT in (select rosterGrpID from rosterGroup)
also delete from rosterGroup where RosterGrpName =lastname -- on resignation


link clockIn deduction to payroll
link payroll items to accts
add IsApprv cond to authenticate in auth60
Using program.cs file to seed data 
Machine Learning using SQL -- Mindsdb
Clickatell’s WhatsApp Business API
update clockIn  add numOfHrs to rpt
base href -- venkat
SwaggerEndpoint location
Angular: captcha -- i am not a robot

pull-right float-right -- btstrp class
(CONVERT([bit],(0))) -- mssql

create idx for empID/Date for roster tbl
make rosterID pri key

google meet
angular: reactive forms validity
angular: console.clear -- console.clear()
angular: form values validity -- log to console to verify b4 post -- err 400 
http://localhost:8096/reports.aspx
http://localhost:8096/reportsPDF.aspx
http://localhost:8096/hp_print.aspx

turn clockIn to win service
cloud native app

check confirm password --clearing

turing test
vizitor app -- melvin
Name: Finelib Technologies Ltd 

behen hogi teri -- gatu -- ragu

[PayslipDetails] sproc
UpdateWopayrec
trtable sproc
close peiod 12/2021 -- ajao
Install WatchDog.NET from the nuget store using by searching 
registeram -- renewal  +234-8033620641 
https://my.registeram.com/index.php?/clientarea/

vwRosterClockInOrOut @newRosterID 12169
AssetDepreciation_Insert sproc

-----------------------------------------------------------------

var A = array.flatMap(function callback(current_value, index, Array)) {
// It returns the new array's elements.
}

Callback function is a fn that is passed as an argument to another fn, which is then called (invoked) inside the host to complete some task
Synchronous callbacks are executed immed
Asynchronous callbacks are executed later in the host fn eg metwork requests

angular unicast vs  multicast
A subject is like an observable. but it can multicast to many observers
observable by default has unicast behavior

Unicast means each subscribed observer owns an independent execution of the observable. ie each subscriber may not receive the same value
Multicast means one observable execution is shared among multiple subscribers ie they all receive the same value

A Subject is a special type of Observable that allows values to be multicasted to many Observers. The subjects are also observers because they can subscribe to another observable and get value from it, which it will multicast to all of its subscribers.

An Observer can subscribe to the Subject and receive value from it. Subject adds them to its collection observers. Whenever there is a value in the stream it notifies all of its Observers.

The Subject also implements the next, error & complete methods. Hence it can subscribe to another observable and receive values from it.

Basically, a subject can act as both observable & an observer.
Subjects implement both subscribe method and next, error & complete methods. It also maintains a collection of observers[]

Subject is a special type of observable. It is like an EventEmitter, they maintain a registry of many listerners
const subject = new Subject(); // no param
subject.next(Math.Random()); // subject as data provider
A behaviorSubject holds one value -- initial value
when it is subscribed, it emits the value immeditely
A Subject does not hold value

subject.subscribe(d => console.log(d)); //subscriber 1 subject as data consumer
subject.subscribe(d => console.log(d)); //subscriber 2 
both subscribers receive the same value
for observ -- they are diff values

The 3 variants of Subject
BehaviorSubject -- emits at least a value (initial or last value) b4 	subscription and subsequent values after subscribe mtd is called and 	stops emitting when complete mtd is called
ReplaySubject -- Emit/buffer old values and emit the  last buffered value 	and subsequent new values to new subscribers
	const replaySub$ = new ReplaySubject();
	it can take a val as arg to specify last values to pick
	const replaySub$ = new ReplaySubject(bufferSize?);
	0 shows all values while 2 shows last two vals in buffer
AsyncSubject -- last value emitted is the one sent to subscriber and only when   	complte() is called

we use angle brackets to typecast from one type to another in angular
you can typecast from interface to specific class or array
eg typecasting the returned value of get mtd (ie AbstractControl) to FormArray
 (<FormArray>this.empFormGp.get('skills'))
This gives an array (FormArray) and with it allows you to use array push() mtd
  

function matchEmails(group: AbstractControl): { [key: string]: any } | null {
  const emailControl = group.get('email');
  const confirmEmailControl = group.get('confirmEmail');

  if (emailControl.value === confirmEmailControl.value || confirmEmailControl.pristine) {
    return null;
  } else {
    return { 'emailMismatch': true };
  }
}
ng add @angular/material
Online fake REST API -- venkat
https://www.youtube.com/watch?v=C9soEIBDZMA&list=PL6n9fhu94yhXwcl3a6rIfAI7QmGYIkfK5&index=63

When a browser issues a request, its mapped to a route which in return calls the associated component if any.


rest operator -- coverts parameters to an array (...args)
spread operator -- spreads out an existing array into indiv parts.
used only in arguments to a fn or array literal

How to make pipe pure or impure 
@Pipe({
  name: 'sort',
  pure: false //true makes it pure and false makes it impure
})
export class myPipe implements PipeTransform {

  transform(value: any, args?: any): any {
     //your logic here and return the result
  }

}

win 10: 22H2 -- backup registry and restore
https://support.microsoft.com/en-us/topic/how-to-back-up-and-restore-the-registry-in-windows-855140ad-e318-2a13-2829-d428a2ab0692

Good Morning
I need a 2 bedroom appartment in 
Akoka - Fola Agoro - Abule Oja axis
Please direct me to estate Agents in these areas
Rent Budget: 800k/annum
Tel: 08033452113

GlobalUsings.cs file
For example, if you frequently use methods from the System.IO namespace in your code throughout the project, you could add a global using System.IO; statement to the GlobalUsings.cs file. This would allow you to use methods from the System.IO namespace without having to fully qualify them every time, like this:

global using System.IO;

If you have a solution with many projects, you can add your project namespaces to the GlobalUsings.cs. Here is an example:


// vendor, 3th party namespaces
global using System.IO;
global using Microsoft.AspNetCore.Builder;
global using Microsoft.AspNetCore.Hosting;
global using Microsoft.Extensions.DependencyInjection;
global using Microsoft.Extensions.Hosting;

// your project namesapces 
global using MyMultiProjecsSolution.Application;
global using MyMultiProjecsSolution.Infrastructure.Persistence;
global using MyMultiProjecsSolution.Infrastructure.Persistence.Contexts;
global using MyMultiProjecsSolution.Infrastructure.Shared;
global using MultiProjecsSolution.WebApi.Extensions;



Hewlett Packard Enterprise ProLiant DL360 Gen10 server Rack (1U) IntelÂ® XeonÂ® Gold 2.1 GHz 32 GB DDR4-SDRAM 800 W Part 
Number : P40408-B21 -- ₦3,719,242.21

Hewlett Packard Enterprise ProLiant DL380 Gen10 server Rack (2U) IntelÂ® XeonÂ® Gold 3.9 GHz 32 GB DDR4-SDRAM 800 W
Part Number : P40427-B21 -- ₦15,635,576.00 
https://www.chert.ng/computing/servers.html?manufacturer=Hewlett+Packard+Enterprise&gclid=Cj0KCQiAiJSeBhCCARIsAHnAzT9HLEVcV7OAIEEUUC-Ff6WytxvWyPjohTkEasdcKnAhVrHkC8lq60YaAsaREALw_wcB

node -v v16.17.1
https://portal.azure.com/#home
325mg aspirin -- heart attack first aid
template onionapi
saromi 08033709124, 08097301446

StatusCode is set only on the response and not on request object

In my angular 4 app, I have a string like
comment: string;
comment = "<p><em><strong>abc</strong></em></p>";
When I serve this text in my html, like
{{comment}}
Then it displays:
<p><em><strong>abc</strong></em></p>
But I need to display the text "abc" in bold and italic form, like abc

Angular recognizes the value as unsafe and automatically sanitizes it, which removes the <script> tag but keeps safe content such as the <b> element.

Rendering in HTML?
I would like to provide a general meaning to this query.
Rendering in programming refers to processing any piece of code that we have written and showing the result of it.
In simple words: rendering means taking your code and processing it to show on the browser, as an HTML file.

In simple words: rendering in the browser means taking your code and processing it to show on the browser, as an HTML file.
Rendering of a web page means different for web server and browser.
Rendering by a Server
in terms of web server, your code will be rendered and give you an HTML output by your web server.
something like this
<img src="cat.png">

Rendering by a Browser
in terms of web browser, taking the HTML code and show it in the browser, is called rendering by a browser.
something like
** image of the cat **
		
Rendering is the process of gathering data (if any) and load the associated templates (or just send the output directly). Then apply the gathered data to the associated templates. The final output is sent to the user. This concept is quite the same for both client and server.

Server-side rendering Converts HTML files on the server into a fully rendered HTML page for the client. 
Server-side rendering is better for SEO than client-side rendering. 
This is because server-side rendering can speed up page load times,improving 
user experience,  When rendering server-side, search engines can easily index
and crawl content because the content can be rendered before the page is loaded 
and thus the site ranks better in Google search results.

Client-side rendering manages the routing dynamically without refreshing the page every time a user requests a different route. But server-side rendering is able to display a fully populated page on the first load for any route of the website, whereas client-side rendering displays a blank page first.

When feeling uneasy that cannot be explained, check for Malaria

Change detection is the process through which Angular checks to see whether your application state has changed, and if any DOM needs to be updated. At a high level, Angular walks your components from top to bottom, looking for changes.

The entire DOM tree structure is updated when a change is performed in Angular. Angular solves this drawback by using change detection to find components that require changes. On the other hand, React can make changes to a single element without having to update the entire tree structure by using a virtual DOM.


instead of putting JavaScript into HTML,
JSX allows us to put HTML into JavaScript.
JSX stands for JavaScript XML. 
It is simply a syntax extension of React. 
It allows us to directly write HTML in React.instead of putting JavaScript into HTML,
JSX allows us to put HTML into JavaScript.
JSX stands for JavaScript XML. 
It is simply a syntax extension of React. 
It allows us to directly write HTML in React.
It is called JSX, and it is a syntax extension to JavaScript

React JS is commonly used to create user interfaces for single-page applications from isolated components.


Angular life cycle hooks (ALCH) -- eight of them
Constructor -- not part of ALCH -- its a typescript method auto called when       class is init (object creation)
ngOnchanges -- called when any input ppty changes  (@input() in child comp)
ngOnInit -- called ONLY once when the comp is finally initialzed (created)
ngDoCheck -- called when angular misses any change detection during ngOnInit
  the next 4 hooks runs ONLY for child comp
ngAfterContentInit -- 
ngAfterContentChecked --
ngAfterViewInit --
ngAfterViewChecked -- 
noOnDestroy -- called when comp is destroyed

Type Annotation means assigning variable a type
eg let abc=''; -- in JS
eg let abc: string =''; -- Typescript

A tuple allows mixed vals eg in arrays
let x: [number,string];
    x = [1,'hi'];
enums are nothing but names constants
enum direction{
 North,
 South,
 East,
 West
}
assessed as:
dir=Direction.East;


In JS, we use Promises & Observables to achieve asynchronous operations
Observables emit data over a period of time (streaming data/in chunks)
Promises emit data only once (whole chunk of data)

rxjs -- reactive extensions for javascript 
is a js lib that allows us to work with async data streams with the help of observables
observables => publisher (emits data)
observer (subscriber) => recipient (receives data)

string[] -> string -- C#
return String.Join(" ", myStringArray);

string -> string[]
return new []{ myString };

mtd that req array as parameter
var myString = "Test";
MethodThatRequiresStringArrayAsParameter( new[]{myString} );

String myString = "My String";
String[] myString.Cast<char>().Cast<string>().ToArray();

Int32.TryParse returns a bool
int x = 0;
Int32.TryParse(TextBoxD1.Text, out x);

Dog myDog = new Dog();
if (myDog.GetType() == typeof(Dog))  // myDog is Dog
{
}

Explicit conversions are done for value types using casting. Casting is the term used in C# to describe converting one data type to another. 
this is Not applicable to reference types like classes

Use the GetNumericValue methods to convert a Char object that represents a number to a numeric value type. Use Parse and TryParse to convert a character in a string into a Char object. Use ToString to convert a Char object to a String object.

int bar = int.Parse(foo.ToString());
char v = '1';
int vv = (int)char.GetNumericValue(v); 

First convert the character to a string and then convert to integer.
var character = '1';
var integerValue = int.Parse(character.ToString());

In C#, string is immutable
Use stringBuilder to make it mutable
if(lstNum[i] is int)
char[] vowels = {'a','e','i','o','u','A','E','I','O','U'};
List<char> lst = vowels.OfType<char>().ToList();

NewLine is a platform-independent and language-independent way
to represent a line break.
Alternatives are \n in C# and vbCrLf in Visual Basic.
The dollar sign ($) in front of a string lets you put
expressions such as variable names in curly braces in
the string. The expression value is inserted into the
string in place of the expression.
This syntax is referred to as interpolated strings.
// Console.Write($"{Environment.NewLine}Press any Key to exit... ");


A method group is the name for a set of methods (that might be just one) - i.e. in theory the ToString method may have multiple overloads (plus any extension methods): ToString(), ToString(string format), etc - hence ToString by itself is a "method group".
A method group is a compile-time construct.
If you are using LINQ, you can apparently do something like 
myList.Select(methodGroup).
Instead of explicitly stating the variable to be used like this:
return something.getStringsFromSomewhere.Select(str => DoSomethingToMyString(str));
I can just omit the name of the variable as below:
return something.getStringsFromSomewhere.Select(DoSomethingToMyString);

You can cast a method group into a delegate.
The delegate signature selects 1 method out of the group.
This example picks the ToString() overload which takes a string parameter:
Func<string,string> fn = 123.ToString;
Console.WriteLine(fn("00000000"));

This example picks the ToString() overload which takes no parameters:
Func<string> fn = 123.ToString;
Console.WriteLine(fn);

VS Code Create C# Project
The folder name becomes the project Name
dotnet new console --framework net6.0 --use-program-main
https://learn.microsoft.com/en-us/dotnet/core/tutorials/with-visual-studio-code?pivots=dotnet-6-0
https://learn.microsoft.com/en-us/dotnet/core/tutorials/debugging-with-visual-studio-code?pivots=dotnet-6-0
https://learn.microsoft.com/en-us/dotnet/core/tutorials/debugging-with-visual-studio-code?pivots=dotnet-6-0#start-debugging-1

Run the app from the terminal
dotnet run
https://learn.microsoft.com/en-us/dotnet/core/tutorials/with-visual-studio-code?pivots=dotnet-6-0

https://www.youtube.com/watch?v=rlG6fx4OL_8
Working with Automapper in ASP.NET Core Web API | ASP.NET Core Web API Tutorial
Nitish Kaushik

https://www.youtube.com/watch?v=tWXuOBNQh4o&t=13s
What is AutoMapper and using it in ASP NET Core -- kudvenkat


https://fuji-nguyen.medium.com/
https://medium.com/knowledge-pills/what-is-startup-cs-in-asp-net-core-68f118c5e982

The Configure method is used to configure the application's middleware. Middleware is software that sits between the application and the web server, and is responsible for handling incoming HTTP requests and responses 
app.UseRouting() middleware maps the url to endpoints in the controllers

The Entity Framework tools version '6.0.2' is older than that of the runtime '6.0.9'. Update the tools for the latest features and bug fixes. See https://aka.ms/AAc1fbw for more information.
To undo this action, use Remove-Migration.

for loop req starting expr,condtion and increment (for (let i=0;i<10;i++)
for..in loop allows you to loop thru ppty of an object
for..of loop allows you to loop thru iterable objects eg array, node list
forEach loop is used directly with array, node list 
// YOU CAN USE ( FOR-IN )  LOOP FOR ITERATION OVER OBJECTS
for (let person in testScore) {...} 
const testScore = {
femi: 89,
Audu: 91,
Semiu: 80,
Sam: 89
}
// WE CAN'T DIRECTLY USE ( FOR-OF ) LOOP IN OBJECTS BUT WE CAN DO Like THIS:
for(let score of Object.values(testScore)){
  	console.log(score)  // 89 91 80 89

const removeDuplicate = () => {
  const keys = arr.map((o) => o.id);
  const filtered = arr.filter(({ id }, index) => !keys.includes(id, index + 1));
  return filtered;
}
console.log(removeDuplicate());

const array = ['🐑', 1, 2, '🐑', '🐑', 3];
// 1: "Set"
[...new Set(array)];

https://www.samanthaming.com/tidbits/43-3-ways-to-remove-array-duplicates/

Set is a new data object introduced in ES6.
Set only lets you store unique values. When you pass in an array, it will remove any duplicate values. Now lets see what's happening. There are 2 things going on:
First, we are creating a new Set by passing an array. Because Set only allows unique values, all duplicates will be removed.
Now the duplicates are gone, we're going to convert it back to an array by using the spread operator ...
const uniqueSet = new Set(array);
const backToArray = [...uniqueSet];

const array = ['🐑', 1, 2, '🐑', '🐑', 3,2,2];
 array.filter((item, index) => {
   console.log(
     // a. Item
     item,
     // b. Index
     index,
     // c. indexOf
     array.indexOf(item),
     // d. Condition
     array.indexOf(item) === index
   );

   return array.indexOf(item) === index;
 });

JS Array.includes() mtd Syntax
array.(element, start)

Regular Expression Patterns
RegEx Syntax
/pattern/modifiers;
Example
/w3schools/i;
Example explained:
/w3schools/i  is a regular expression.
w3schools  is a pattern (to be used in a search).
i  is a modifier (modifies the search to be case-insensitive).
https://www.w3schools.com/js/js_regexp.asp

//RegEx -- var re = new RegExp("a|b", "i");
// g = global search, which searches all instances
// i = case insensitive, which will match 'a' with 'A'

Brackets are used to find a range of characters:
[abc] 	Find any of the characters between the brackets 	
[0-9] 	Find any of the digits between the brackets 	
(x|y) 	Find any of the alternatives separated with |

//var re = new RegExp("a|b", "i");
// same as var re = /a|b/i;

https://www.sourcecodester.com/
https://www.sourcecodester.com/

on a page
<script> 
const fruits = ["Banana", "Orange", "Apple", "Mango"];
let fLen = fruits.length;

let text = "<ul>";
for (let i = 0; i < fLen; i++) {
  text += "<li>" + fruits[i] + "</li>";
}
text += "</ul>";

document.getElementById("demo").innerHTML = text;
</script>
or
let text = "<ul>";
fruits.forEach(myFunction);
text += "</ul>";

function myFunction(value) {
  text += "<li>" + value + "</li>";
} 


HTC Desire
Top 10 RxJs Operators in Angular [Angular Series]
https://www.youtube.com/watch?v=5TnWFaI49aw

To make a component child (nested) to another comp (Parent) in angular, 
add the child comp selector to the parent comp template

The instanceof operator returns true if an object is created by a given constructor:
const fruits = ["Banana", "Orange", "Apple"];
fruits instanceof Array; //true

index is The position to add/remove items.
Negative value defines the position from the end of the array.
howmany Optional. Number of items to be removed.
item1, ..., itemX Optional. New elements(s) to be added.

At position 2, add 2 elements:
const fruits = ["Banana", "Orange", "Apple", "Mango"];
fruits.splice(2, 0, "Lemon", "Kiwi");
Ans: Banana,Orange,Lemon,Kiwi,Apple,Mango

At position 2, remove 2 items:
const fruits = ["Banana", "Orange", "Apple", "Mango", "Kiwi"];
fruits.splice(2, 2); 
Ans: Banana,Orange,Kiwi

At position 2, add new items, and remove 1 item:
const fruits = ["Banana", "Orange", "Apple", "Mango"];
fruits.splice(2, 1, "Lemon", "Kiwi");
Ans: Banana,Orange,Lemon,Kiwi,Mango

Negative index counts back from the end of the array — if start < 0, start + array.length is used.
    If start < -array.length or start is omitted, 0 is used.
    If start >= array.length, nothing is extracted.

Returns a new array (shallow copy) containing the extracted elements.


//To convert an object to an array you use one of three methods:
// Object.keys() , 
//Object.values() , and 
//Object.entries() . 
JSPerf tool
Use window.atob() to get around it (in frontEnd dev) if atob() is giving error
If you are using nodejs just replace atob and btoa with Buffer
//With NodeJS

export const encodeBase64 = (data) => {
    return Buffer.from(data).toString('base64');
}
export const decodeBase64 = (data) => {
    return Buffer.from(data, 'base64').toString('ascii');
}

const encodedData = btoa('Hello, world'); // encode a string
const decodedData = atob(encodedData); // decode the string

Source: https://developer.mozilla.org/en-US/docs/Web/API/btoa
2
atob javascript
Javascript By Santino on Mar 11 2021 DonateThankComment

The atob() and btoa() methods allow authors to transform content to and from the base64 encoding.

In these APIs, for mnemonic purposes, the "b" can be considered to stand for "binary", and the "a" for "ASCII". In practice, though, for primarily historical reasons, both the input and output of these functions are Unicode strings.

From : http://www.w3.org/TR/html/webappapis.html#atob

to encode : window.btoa('test') 
result: dGVzdA==
to decode : window.atob('dGVzdA==')
result: test

Array at() mtd
[3, 5, 7, 8].at(-2); // 7

// This function counts instances of elements in an array
// the return object has the array elements as keys
// and number of occurrences as it's value
const arrToInstanceCountObj = arr => arr.reduce((obj, e) => {
  obj[e] = (obj[e] || 0) + 1;
  return obj;
}, {});

Convert an Array to Object (Atob) using
Array.forEach()
Array.Reduce mtd  
Spread operator (...), 
Object.Assign mtd
Object.fromEntries() method.

https://bobbyhadz.com/blog/javascript-convert-array-to-object

For Array.forEach() mtd, This approach is a bit more manual, however it allows you to name the keys of the new object.
const obj3 = {};
arr.forEach((element, index) => {
  obj3['key' + index] = element;
});

You can also add a function to Array's prototype and call it whenever you want to convert an array into an object:

Array.prototype.toObject = function () {
  const obj = {}
  this.forEach((elem, i) => {
    obj[i] = elem
  })
  return obj
}

const newObj = ['Alex', 'Bob', 'Johny', 'Atta'].toObject()
console.log(newObj)
// { '0': 'Alex', '1': 'Bob', '2': 'Johny', '3': 'Atta' }

Use the Object.assign() method to convert an array to an object, 
e.g. const obj = Object.assign({}, arr). 
The Object.assign method takes a target and source objects as parameters, applies the properties from the sources to the target and returns the result.

const arr = ['zero', 'one', 'two'];
const obj1 = Object.assign({}, arr);
console.log(obj1); // 👉️ {0: 'zero', 1: 'one', 2: 'two'}

Convert an Array to Object using Spread #
The (...) syntax can be used with any iterable, such as an array, string, Set, etc.
Use the spread syntax (...) to convert an array to an object, e.g. const obj = {...arr}. The spread syntax will unpack the values of the array into a new object, where the indexes of the array are the object's keys and the elements in the array - the object's values.

Convert an Array to Object using reduce #
To convert an array to an object, use the reduce() method to iterate over the array, passing it an empty object as the initial value. On each iteration, assign a new key-value pair to the accumulated object and return the result.
for the accumulator variable.
const arr = ['zero', 'one', 'two'];
const obj4 = arr.reduce((accumulator, value, index) => {
  return {...accumulator, [key + index]: value};
}, {});
// 👇️️ {'key0': 'zero', 'key1': 'one', 'key2': 'two'}
console.log(obj4);

This approach also allows you to assign any key name that your use case requires. We used the string "key" + the index, however you can adjust this as needed.

The reduce() mtd Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.

@param1 callbackfn — A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.

@param2 initialValue — If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.


In Object.entries() mtd, Target object @param - the object to which we apply the sources' properties
source object(s) - objects containing the properties we want to apply
convert object to array
// Object.entries returns an Array of [key,value] Arrays
const object1 = {
  a: 'somestring',
  b: 42
}
Object.entries(object1) // Array(2) [["a", "something"], ["b", 42]]
  .forEach(([key, value]) => console.log(`${key}: ${value}`))
// "a: somestring"
// "b: 42"

/// OBJECT Methods IN JAVASCRIPT
const testScore = {
  damon: 89,
  shawn: 91,
  keenan: 80,
  kim: 89,
};

Object.keys(testScore);  // gives array of all keys
Object.values(testScore); // gives array of all values
Object.entries(testScore); // gives nested arrays of key-value pairs
Object.assign(); // makes a copy of an object 

const obj = Object.assign({}, testScore); // makes a copy of an object 

const names = ['Alex', 'Bob', 'Johny', 'Atta'];
Object.assign({}, names);

// YOU CAN USE ( FOR-IN )  LOOP FOR ITERATION OVER OBJECTS
for (let person in testScore) {...} 

// WE CAN'T DIRECTLY USE ( FOR-OF ) LOOP IN OBJECTS BUT WE CAN DO Like THIS:
for(let score of Object.values(testScore)){
  	console.log(score)  // 89 91 80 89 
}

public void MyMethod(Microsoft.AspNetCore.Http.HttpContext context)
    var host = $"{context.Request.Scheme}://{context.Request.Host}";
HttpContext encapsulates all information about an individual HTTP request and response. An HttpContext instance is initialized when an HTTP
 
Token-Based Authentication is an example of Authentication scheme
The most popular format for tokens is Json Web Tokens (JWT). The fields of the token are key/value pairs. The keys are called claims. The claims essentially tell the API what the values are supposed to mean

Here is an example of the JWT claims set. The aud field is the audience claim and tells the server that it contains the client ID. If this is missing then this token will get rejected.

{   
"iss": "http://www.mysite.com",   
"aud": "Client Secret",   
"name": "first last",   
"email": "firstlast@mysite.com",   
}

Thou power of plygamous withcraft die ijn
Goliath of my father's and mother's house die
My Head arise and shine this year 2023
I recover 10 fold of my wasted years IJN 
Ocean divider, way maker, change my story
Every good door closed against me, be opened by fire
Power to reach my goal fall upon my life
Haters of my helpers your time is up die IJN
every monster from marine kingdom harassing my destiny die ijn
every prophetic jinx upon my life break ijn
every battle assigned to kill my glory expire
where is the altar of my problems scatter by fire
Any curse upon my financial life break ijn
Thou power of jinxes i am not your candidate, die ijn
No more embargo, no evil carry over in my life by the power in the blood of Jesus
Every thing stolen from me by the powers of the night, i repossess you by fire
Satanic powerhouse troublimg my destiny die
Owners of evil load, hear the word of the lord carry your load

powers wearing rags to rep me in the spirit realm die ijn
powers polluting my dreams and vision, i bind you ijn
o God arise and be the glory and lifter of my head ijn
blood of jesus gather all the good things scattered in my life for me
powers assigned to paralyse my glory with sickness die ijn
axe of heaven cut down the roots of my problems
every incantation against my career die ijn
any joseph's pit limiting my advancement release me by fire ijn
my destiny sitting by the roadside get up move into the highway
my father rollaway my shame ijn

O God of favor appear in my life ijn
every charm working against my life catch fire
strong man that wants me to go down where im supposed to go up die ijn
i refuse to carry any ancestral burden on my head ijn
every agenda of the enemy for my life be scatterd ijn
anything planted in my life to disgrace me die ijn
chains upon my hands break
cobwebs in my hands break
curses upon my hands break
evil magnets upon my hands catch fire
my hands receive deliverance ijn
I plug myself into the socket of divine favor by the power in the boj
every chain upon my hands, upon my legs break

every power hindering my greatness die ijn
oh God of elijah appear in my dream
Jesus great physician go deep into my life ijn
any fetish power assigned against me i bury you in the body of the sender ijn
oh God arise waste every power assigned to waste my life ijn
every root of hardship in my life ,die 
you root of my problems dry up
every curse of badluck break
every curse of financial failure break
my father give me a miracle to forget my past troubles ijn
my wealth has come ijn
holy ghost incubate my spirit man ijn
unconscious curses affecting my destiny break ijn

battles at the edge of my breakthrough scatter ijn
powers assigned to make me cry, sick or fail die ijn
opprtunuty wasters blessing wasters my life is not your candidate die
every dark covenant covering my glory break ijn
powers assigned to detain my testimony die by fire
oh heavens baptize my destiny with success ijn
every power hindering my progress die ijn
dark powers in my habitation ytiu die ijn
powers attacking my star ytiu die ijn
every demonic mirror monitoring my life break ijn 
glory killers opprtunity killers die ijn
every agent of death buried in my body come out and die ijn
every power hindering my greatness die ijn
power of discernment incubate my life ijn
strong man assigned against my next level i pull u down ijn

O God arise deliver me
witchcraft embargo on my financies die
my original self appear
witchcraft sponsored infirmity in my body die
coven agenda for my progress die
where is the lord God of Elijah arise and let my story change
every power that does not want me to lift up my head i bury you now
My star manifest by fire ijn
O God arise advertise yur riches in my life ijn
generational poverty im not yur candi die ijn
road of backw stagnacy and badluck in my life close ijn
my glory in the valley of witchcraft jump out now ijn
every power mocking God in my life die ytiu ijn
destiny robbers i am not yur candi die ijn
my days of affliction xpire
my time of favor appear ijn
voice of the Lord announce my promotion ijn 
my sturbbrn problems fall down and die
every power eating my flesh shall be buried alive

patterns of darkness affecting my destiny die
O God raise a voice for me
Every withcraft embargo on my business die
Anointing for turn around breakthrough, upon my life ijn
All my blessings in the custody of withcraft, be released by fire
Every withcraft covenant formed against my finances, career, health... break
Babafemi Omage hear the word of the Lord, wake up and GO
O God arise, bring back the real me stolen by the enemy
I recover myself by fire ijn

when faced with daunting situation, first aknowledge Gods blessings as Jesus did at Lazarus tomb and when feeding 5000 men
the source of faith is the word of God. as you pay attention to it, hearing and studying it , faith will grow in your heart
The unit of destiny is time
if God does not bless you, he does not owe you
To Archievers, Faith is spelt as R-I-S-K
https://www.youtube.com/watch?v=YjOLkTx3BZM
...Apostle Selman

C# Parallelism => goal is perfornance. utilize the hardware
C# Concurrency => non blocking, usable app. not about performance

https://localhost:44318/Upload2
http://localhost:4200/photo/upload

material file upload module
curiositystream.com documentaries
chromecast

<File>files[0]
files[0] returns a File object at the index 0 
$(this).get(0) returns the first element of the jQuery object
remember that every jQuery object is also an array

https://code-maze.com/upload-files-dot-net-core-angular/

One interesting thing to pay attention to is the use of the Array.from() function. Even though the files variable contains all the selected files, it is not an array. So, in order to use the map function, we are using the Array.from() syntax, which will convert the array-like object into the new array copy. 

------------------
For JS/TS:
instanceof checks the proptype chain and typeof compares against string literal labels.
- use instanceof for custom types
- use typeof for simple built in types
- Use instanceof for complex built in types
if in doubt go with instanceof, tbh

Differences. The typeof operator checks if a value has type of primitive type which can be one of boolean , function , object , number , string , undefined and symbol (ES6). The instanceof operator checks if a value is an instance of a class or constructor function.

How can I prevent sudden heart attacks?
Sudden heart attacks can be prevented by keeping the ticker healthy. People who have heart attacks generally have a poor diet, lack of exercise, high levels of stress and smoke. So, you should start exercising, reduce stress and stop smoking to ensure that you don't get heart disease. If you're not sure if you're on the right path, you should visit a cardiologist.

Function generally perform something only when it is called, not when it is defined
After a function is executed, its lexical environment (dictionary) is destroyed, and the memory occupied by it is freed.

Scope means “area where components are available.”
The scope of any component (variable, function etc) is determined by the location of this component within the code. And nested blocks have access to their external scopes. This is called a lexical scope. 

avoid global scope, keep things where they belong
const multiplier = num => {
  const x=10;
  return num * x
}
console.log(x); // referenceError: x is not defined -- not available

console.log Called in the global environment, and x not specified in this global environment. Therefore, we get Reference Error.
We do not have access to the x outside, as if it does not exist there

Any code block surrounded by curly brackets turns into a local environment. Here is an example with a block if:

let a = 0;
if (a===0) {
  const local = 10;
}
console.log(local); // referenceError: local is not defined -- not available

The same works for cycles (loop) while and for.
Ok, local is not visible outside. But the global is visible everywhere. Even inside something? Yes!

Currying is the process of turning a function from an nargument into a chain of nested n functions from a single argument.
a curried function is a set of functions from a single argument.
Suppose we have a function const sum = (a, b, c) => a + b + c that adds three numbers. Then her curried version will look like const sum2 = a => b => c => a + b + c, and the use of such: sum2(5)(10)(-2).



JavaScript Functions → First Class Objects
https://medium.com/@jakepintu/part-4-javascript-functions-first-class-objects-f8ab4229730a
Objects of the first class in the context of a specific programming language are elements that can be passed as a parameter, returned from a function, or assigned to a variable. In other words, it is about everything that can be data. The simplest data types are numbers and strings. As you will see later, all other data types are also first class objects.

A function call is an expression bcos it returns a value
f(f1(f2(n3, f3(n1, n2))), f4())contains two expressions in the arguments:
    f4()
    f1(f2(n3, f3(n1, n2)))
This call includes an argument — function call: f2(n3, f3(n1, n2)), which in turn contains two arguments: n3 and a function call f3(n1, n2).

f1(f2(f4(),f5()), f3(f6()))
sequence of fn calls (Function Execution) above
called f4 -- innermost first
called f5
called f2
called f6
called f3
called f1 -- last
As you can see, the calculation goes from the deepest level from left to right.

The minimum definition of a function, which is only possible, as follows: 
() => {}. 
This is an empty function with an empty body that does nothing.

    Create function: () => console.log('hey')
    Creating a constant with value as a function: const x =
From the examples above, we can conclude that the function is also data, because it can be assigned to a constant

the definition of a function (not a call!) Is an expression (ie () => {}), which means it returns a value, namely, a function.
since the definition of a function is an expression that returns a function, we can try to call it immediately without creating an intermediate constant:
(v => v)('run') // => run

The brackets around the definition of a function above are not some special syntax. Here they are used with the same purpose as in arithmetic operations — for grouping. Without them, the expression v => v('run') acquires a completely different meaning. In this case, v => v('run') creates a function that takes another function as input v and calls it inside with an argument 'run'.

const identity = v => v; -- input = output
The above defined function, which is usually called identity. It returns the value that was transferred to it. In practice, this function is rarely needed

identity(v => v)('run') // => run
same as (v => v)(v => v)('run') // => run
const sqrt = idetity(Math.sqrt); // true
console.log(sqrt === Math.sqrt); // => 4
console.log(sqrt(4)); // => 4

Functions that take other functions as input or return other functions are called higher order functions 
JavaScript in this sense behaves like a functional prog language


The function that was returned from generateDouble is called a closure . A closure is a function that “remembers” the part of the environment where it was specified. The function closes in itself the identifiers (everything that we define) from the lexical scope.
A closure is just a fancy name for a function that remembers the external things used inside. A closure is a combination of a function and the environment where it was specified. The function "closed" in itself some information from the scope.

Debuggers extensions in the VS Code Marketplace or select Install Additional Debuggers in the top-level Run menu.

VS Code debuggers typically support launching a program in debug mode or attaching to an already running program in debug mode. Depending on the request (attach or launch), different attributes are required, and VS Code's launch.json validation and suggestions should help with that

The best way to explain the difference between launch and attach is to think of a launch configuration as a recipe for how to start your app in debug mode before VS Code attaches to it, while an attach configuration is a recipe for how to connect VS Code's debugger to an app or process that's already running.

Functions within Function
https://medium.com/@iampika/part-6-javascript-functions-returning-functions-from-functions-429a3d9a55d1
const generateSumFinder = () => {
  const sum = (a,b) => a+b;
  return sum;
}
//same as
const generateSumFinder2 = () => (a, b) => a + b; // fn within fn
Everything that is to the right of => it is considered the function body 

const sum = x => y => z => x+y+z;
//put brackets to see how the fns are nested
const sum2 = x => (y => (z => x + y + z));
console.log('sum is ' + sum2(1)(3)(5)) // sum is 9

The same function can be represented in a different way, by taking out each function in its own constant. This method is useful as a thought experiment, to understand where one ends and another function begins, but by itself it will not work, because the closure is lost.

const innerMost= z => x+y+z
const inner = y => innerMost
const sum2= y => inner 


if the user isn't logged in they're redirected to the /login page with the returnUrl in the query parameters,
// not logged in so redirect to login page with the return url 
this.router.navigate(['/account/login'], { queryParams: { returnUrl: state.url }});
return false;

This na the best place to get your logo Designs oh for 2k only.
You'll also get your own version of this christmas card crested with your own logo and details.
Hit me up on whatsapp: 09054555418

Ivy is Angular's rendering engine (compilation and rendering pipeline).
CommonJS is a module system used to structure 
and organize JavaScript code.
import function is asynchronous and returns a Promise.
https://www.youtube.com/watch?v=ddVm53j80vc -- kyle on dynamic import function

var x = 'someplace';
import(x).then((a) => {
  // `a` is imported and can be used here
});

Or using async/await:

async function run(x) {
  const a = await import(x);
  // `a` is imported and can be used here
}

import Button from "@kenaz/button";

const buttonModule = await import("@kenaz/button");
const Button = buttonModule.default;

The first above imports the module statically at build-time, whereas the second imports the module dynamically at run-time. 

const dynamicImport = await import('path-to-import')
const typedDefaultImport = dynamicImport.default

“To stop unsolicited messages, use our do not disturb code of 2442 by typing ‘STOP’ and sending to 2442, to stop all unsolicited messages, or send ‘HELP’ to same code and follow the prompt to choose the options of the types of messages you want to receive.

“You can also send ‘STATUS’ to 2442 to see if your choices have been implemented,” Mr Ugama advised.
https://www.nairaland.com/7476667/ncc-releases-short-code-ending


ngx-image-cropper plugin
npm install ngx-image-cropper
Register ImageCropperModule in App Module
https://www.positronx.io/angular-image-upload-preview-crop-zoom-and-scale-example/
https://www.npmjs.com/package/ngx-image-cropper
https://stackblitz.com/edit/image-cropper?file=app%2Fapp.component.ts

ngx-webcam package
npm install --save ngx-webcam
https://www.npmjs.com/package/ngx-webcam
https://github.com/basst314/ngx-webcam
https://www.positronx.io/angular-capture-images-from-system-webcam-tutorial/

Import the WebcamModule into your Angular module:
import {WebcamModule} from 'ngx-webcam';
Use the WebcamComponent on your pages:
<webcam></webcam>
As simple as that.

Bind Select Element to Object in Angular using ngValue
<select [(ngModel)]="chosenObj" class="form-control">
    <option *ngFor="let data of Data" [ngValue]="data">
      {{ data.name }}
    </option>
</select>
  <div class="d-flex mt-5">
    {{ chosenObj | json }}
  </div>

Property ‘xxxName’ comes from an index signature, so it must be accessed with [‘xxxName’]
Make sure to set noPropertyAccessFromIndexSignature property to false as given:
"compilerOptions": {
// ...
// ...
   "noPropertyAccessFromIndexSignature": false,
// ...
// ...
}

The below helper class will be used to extract a unique filename from the provided file, by appending the 4 characters of a newly generated Guid:
 public class FileHelper
    {
       public static string GetUniqueFileName(string fileName)
       {
         fileName = Path.GetFileName(fileName);
         return string.Concat(Path.GetFileNameWithoutExtension(fileName)
  , "_", Guid.NewGuid().ToString().AsSpan(0, 4), Path.GetExtension(fileName));


        }
    }


A data transfer object (DTO) is an object that carries data between processes. You can use this technique to facilitate communication between two systems (like an API and your server) without potentially exposing sensitive information.

[JsonIgnore(Condition = JsonIgnoreCondition.Always)]
public string? ImagePath { get; set; }


[FromForm] is compulsory to use with StudentBody parameter for saving image Files along with JSON Data in web api.
var filePath = Path.Combine("wwwroot/images", image.FileName);
return BadRequest(new PostResponse { Success = false, ErrorCode = "S02", Error = "Invalid post header" });
content type: Multipart/form-data 
Content-Disposition: form-data;
Content-Type: application/json
<button class="btn btn-danger btn-block btn-lg">Create</button>

public sendFormData(formData) {    
      return this.httpClient.post<any>(this.serverUrl, formData, {
      reportProgress: true,
      observe: 'events'
    });
}

private sendFiles() {
    this.fileUpload.nativeElement.value = '';
    this.files.forEach(file => {
      this.sendFile(file);
    });
}


  {
    path: 'gallery',
    component: GalleryComponent,
    children: [
      { path: 'upload', component: PhotoComponent },
      { path: 'photoList', component: PhotoListComponent },
    ],
  },

https://csharp-video-tutorials.blogspot.com/2019/04/bootstrap-navigation-menu-in-aspnet.html
https://csharp-video-tutorials.blogspot.com/2019/05/file-upload-in-aspnet-core-mvc.html

public countryList: {name:string, code:string}[] = countries;

@ngneat/until-destroy -- npm install @ngneat/until-destroy
https://github.com/ngneat/until-destroy
https://www.npmjs.com/package/@ngneat/until-destroy

@UntilDestroy()
@Component(...)
export class MyComponent implements OnInit {
  ...  public ngOnInit() {
    this.userService.getUser()
      .pipe(untilDestroyed(this))
      .subscribe();
  }  // ngOnDestroy is not needed here (Angular 9+ only)!
}

interval(1000).
pipe(untilDestroyed(this)).
subscribe(val => console.log(val));

ngx-auto-unsubscribe -- npm i ngx-auto-unsubscribe-decorator

firebase explorer in vs code
ng new newApp --routing
ng g module lazy --flat --> to keep it in root folder
ng g c lazy-parent --module lazy --> to assign it to lazy module
ng g c lazy-child --module lazy --> to assign it to lazy module
https://www.youtube.com/watch?v=8tBQI5grhbE -- lazy loading -- fireship

Modules (Root feature Core Shared)
https://www.youtube.com/watch?v=oqZ4-ULwfbc -- Module types
https://www.youtube.com/watch?v=Np3ULAMqwNo -- routing/lazy loading
Routing mod shld have no declarations section
may have providers in form of guards
shld always export the routerModule

feature (Custom) Mod 
Angular handles lazyLoading via feature modules
Just as you load Componenets via routing (routes), you also load modules lazily tru routinng using loadchildren ppty of route object
eg {path: Product, loadchildren: './product-dashboard/product-dashboard.module#ProductDashboardModule'}
it consists of declarations and possibly a provider
they shld NEVER export anything bcos
their primary purpose (of the mod) is to organize
business logic related to a specific feature.
import the ang common mod that gives common features like ngFor etc

shared mod (widget mod)
Similar to feature mod except thay add ALL Declarations to exports as well
so other modules can see it
common use cases include socialMediaIcons loading spiners etc

core (service) module
No declarations, only focuses on services for DI
eg AuthService, toast message service
anything that provides services globally in the app
Remember, “the core module should be imported solely into your root Angular module”.
Your core module should contain the code that is specific to your application


root path in routing -- has '' as its name
{path: '',component: homeComponenet}



What do return -1, 1, and 0 mean in this Javascript code?
function compare (value1, value2) {
    if(value1 < value2) {
        return -1;
    } else if (value1 > value2) {
        return 1;
    } else {
        return 0;
    }
}

var values = [0, 6, 8, 5];
values.sort(compare);
alert(values); // 0,5,6,8

does -1 return the last argument? Like when using -1 in an array?
No, -1, 0, and 1 in a comparison function are used to tell the caller how the first value should be sorted in relation to the second one. -1 means the first goes before the second, 1 means it goes after, and 0 means they're equivalent.

The sort function uses the comparisons in the function you pass it to sort the function. For instance, if you wanted to sort in reverse order, you could make line 3 return 1; and line 5 return -1.

The sort method takes an optional comparison function that determines the resulting sort order based on the following:

    if its return value is less than zero, then sort value1 to a lower index than value2
    if its return value is zero, then leave the indices of value1 and value2 unchanged with respect to each other
    if its return value is greater than zero, then sort value1 to a higher index than value2
Note that given these rules, it's possible to shorten your comparison function to the following:
function compare(value1, value2) {
    return value1 - value2;
}

-1 means that value1 is less than value2
0 means that value1 is equal to value2
1 means that value1 is greater than value2


How To Use APP_INITIALIZER
To add some custom logic before application starts
What is APP_INITIALIZER
APP_INITIALIZER is a Dependency Injection token that you can use to provide one or more initialization functions. The provided functions are injected at application startup and executed during app initialization. If any of these functions returns a Promise or an Observable, initialization does not complete until the Promise is resolved or the Observable is completed. This gives us an opportunity to hook into the initialization process and run some of our own logic before the app actually loads. There are a lot of things we can do during this process, loading a custom config from backend or overwitting an environment constant and etc.

In this article we will explore together how to make an http call and get the response before the app loads using APP_INITIALIZER.

export class TestService {
  private httpClient: HttpClient;

  constructor( handler: HttpBackend) { 
     this.httpClient = new HttpClient(handler);
  }
....

In this way the service is not intercepted by AuthInterceptor.

Dynamic import() expressions
An import(specifier) expression is a special syntactic form for loading a module
The syntax is reminiscent of a function call that passes a specifier string. That specifier string can be dynamically computed — something that isn't possible with static import declarations.

Since fetching an ECMAScript module on demand is an asynchronous operation, an import() expression always returns a promise. That promise resolves once the widget module and all its dependencies have feen fetched, instantiated, and evaluated successfully.

function renderWidget() {
  const container = document.getElementById("widget");
  if (container !== null) {
    import("./widget").then(widget => {
      widget.render(container);
    });
  }
}

OR
async function renderWidget() {
  const container = document.getElementById("widget");
  if (container !== null) {
    const widget = await import("./widget");
    widget.render(container);
  }
}

renderWidget();

renderWidget();



// 👇️ named export
export function sum(a: number, b: number) {
  return a + b;
}
// (arrow function)
// export const sum = (a: number, b: number) => {
//   return a + b;
// };

In order to be able to import a function from a different file, it has to be exported using a named or default export.
import { sum } from './another-file';
console.log(sum(50, 10)); // 👉️ 60
We wrap the name of the function (sum) in curly braces when importing it - this is called a named import.

// 👇️ default export
export default function sum(a: number, b: number) {
  return a + b;
}

//  (arrow function)
// const sum = (a: number, b: number) => {
//   return a + b;
// };
And here is how we would import the function using a default import.
index.ts
// 👇️ default import
import sum from './another-file';
console.log(sum(50, 10)); // 👉️ 60
import sum, { multiply } from './another-file';

Hello Madam
The cost implication
for your HMO ERP
has been sent.

Peter Adeyemi 08035257749
Curacel Solns HMO

Obinna OSUJI 08063383789 HMO
Medismarts Proposal_October_2022 (1).pdf

<ng-select [items]="productData" [searchable]="true" bindLabel="productName" [formControlName]="prodCode" [ngClass]="{ 'is-invalid': submitted && f.prodCode.errors }"
  placeholder="Select Product" required>
</ng-select>

get f() {
    return this.productForm.controls;
}

<form [formGroup]="productForm" (submit)="submit()">
  <ng-select [items]="productData"
      [searchable]="true" 
      bindLabel="name"
      formControlName="prodCode">
  </ng-select>
  <span *ngIf="!productForm.get('prodCode').valid && productForm.get('prodCode').touched">
    <span *ngIf = "productForm.get('prodCode').errors['required']">is required</span>
  </span>
  <button class="btn btn-primary" type="submit">Submit</button> 
</form>

<pre>{{productForm.value|json}}</pre>

validateAllFormFields(formGroup: FormGroup) {
        Object.keys(formGroup.controls).forEach(field => {
            const control = formGroup.get(field);
            if (control instanceof FormControl) {
                control.markAsTouched({onlySelf: true});
            } else if (control instanceof FormGroup) {
                this.validateAllFormFields(control);
            }
        });
    }


' An array defined in a BAS module (with Private scope)
Dim Customers() As String
...
Sub Main()
' Here you create the array.
ReDim Customer(1000) As String
End Sub

If you're creating an array that's local to a procedure, you can do everything with a single ReDim statement:

Sub PrintReport()
' This array is visible only to the procedure.
ReDim Customers(1000) As String
' ...
End Sub

If you don't specify the lower index of an array, Visual Basic assumes it to be 0, unless an Option Base 1 statement is placed at the beginning of the module. My suggestion is this: Never use an Option Base statement because it makes code reuse more difficult. (You can't cut and paste routines without worrying about the current Option Base.) If you want to explicitly use a lower index different from 0, use this syntax instead:

ReDim Customers(1 To 1000) As String

To call the PrintTemps sub, pass the array name, with or without a set of empty parentheses. The following statements are all valid calls to this sub:

      PrintTemps aintTemps

      PrintTemps aintTemps()

      Call PrintTemps(aintTemps)

      Call PrintTemps(aintTemps())

Private Sub cmdTryIt_Click()
    Dim aintTemps(1 To 7)   As Integer

    Dim intX                As Integer

    For intX = 1 To 7

        aintTemps(intX) = Val(InputBox("Enter temperature #" & intX & ":"))

    Next

    PrintTemps aintTemps

End Sub

Private Sub PrintTemps(paintTemps() As Integer)

 

    Dim intX As Integer

    For intX = LBound(paintTemps) To UBound(paintTemps)

        Print paintTemps(intX)

    Next
End Sub

IQueryable<Customer> customers = _context.Customers.Where(c => c.IsActive);
IEnumerable<Customer> customers = _context.Customers.AsEnumerable().Where(c => c.IsActive);
How to cast IEnumerable to IQueryable?
To cast IEnumerable to IQueryable? use the AsQueryable method.

IEnumerable doesn’t move between items, it is forward only collection.

Good day Sir,
This is to remind you of 8mths (Mar - oct 2022) of
unpaid SmartDoctor Support / Maint for VI
totalling =N=400,000
its long overdue
Pls pay into my Acct below:
GTBank 
Logic Version 
Acct No: 0010822550
Amount: =N=400,000
thanks as always
... Omage Babafemi

Good day Sir
This is femi (your software man)
futher to our discussion yesterday,
I checked Scotts records on my Itenary,
All your software modules are working fine
and running smoothly in your factory premises
(Sales, Stock and Factory module)
The Reports are okay.
Please send me those items that are still missing
so we can work on them and meet your expections
.. sorry for any inconveniences

Omage Babafemi
Logic Version


rx.net c#
import 'rxjs/Rx'; -- all rxjs operators -- same as  rx.all.js file 
angular queryselector
angular renderer
horizontal scaling
vetical scaling

The Angular directives help us to extend or manipulate the DOM
We attach the attribute directive to an element, which we call the parent element. To change the properties of the parent element, we need to get the reference. Angular injects the parent element when we ask for the instance of the ElementRef in its constructor.
 
  @Input() ttClass: string;
constructor(private el: ElementRef) {
}

ngOnInit() {
  this.el.nativeElement.classList.add(this.ttClass);
}

In the app.component.css add the CSS class blue
.blue {
  background-color: lightblue;
}
Finally in the component template attach our custom directive ttClass to the button element.
<button [ttClass]="'blue'">Click Me</button>

ElementRef is a wrapper for the Parent DOM element. We can access the DOM element via the property nativeElement. The classList method allows us to add the class to the element.

https://www.tektutorialshub.com/angular/custom-directive-in-angular/

streams are a sequence of values over time
we link streams together using operators
observable is NOT a stream but defines a set of streams and how they are connected toge via operatons (operators) 
ie obs is a wrapper around async streams

reactive programming rp = stream + operations (functions)
with rp, we dont call functions, we just define how our app is plumbed together and then start pushing values onto streams and let the plumbing and operations handle the rest

The HostBinding & HostListener are decorators in Angular. HostListener listens to host events, while HostBinding allows us to bind to a property of the host element. The host is an element on which we attach our component or directive. This feature allows us to manipulate the host styles or take some action whenever the user performs some action on the host element.

HostBinding
Host Binding binds a Host element property to a variable in the directive or component

@HostBinding('style.border') border: string;
  ngOnInit() {
  }
 
  @HostListener('mouseover') 
  onMouseOver() {
    this.border = '5px solid green';
    console.log("Mouse over")
  }
 
  @HostListener('mouseleave') 
  onMouseLeave() {
    this.border = '';
    console.log("Mouse Leave")
  }

@HostListener is a function decorator that accepts an event name as an argument. When that event gets fired on the host element it calls the associated function.

@HostListener is Angular’s decorator method that’s used for listening to DOM events on the host element of both component and attribute directives

@HostListener('mouseenter', ['$event'])
onMouseEnter(event: any) {      // Logs the id of the element 
  // where the event is originally invoked.     
  console.log(event.target.id);
}


All arguments you would like to access in the event handler method should be included in that array first. Note that, in the code snippet above, it’s still passing an object despite being wrapped inside quotes. But If you would like to pass an actual string directly as an argument, that should be inside nested quotes as shown below:

@HostListener('mouseenter', ['"hello!"', '$event']) onMouseEnter(greeting: string, event: any) {  // Logs the string argument, "hello!"
  console.log(greeting);  // Logs the id of the element 
  // where the event is originally invoked.    
  console.log(event.target.id);
}

All arguments you would like to access in the event handler method should be included in that array first. Note that, in the code snippet above, it’s still passing an object despite being wrapped inside quotes. But If you would like to pass an actual string directly as an argument, that should be inside nested quotes as shown below:

@HostListener('mouseenter', ['"hello!"', '$event']) onMouseEnter(greeting: string, event: any) {  // Logs the string argument, "hello!"
  console.log(greeting);  // Logs the id of the element 
  // where the event is originally invoked.    
  console.log(event.target.id);
}

You can also pass a specific property from an object. For instance, in the snippet below, it’s directly passing the target element’s id that the event is originated from by specifying the nested properties from the $event object:

@HostListener('mouseenter', ['$event.target.id']) 
onMouseEnter(id: string) {  // Logs the id of the element 
  // where the event is originally invoked.  
  console.log(id);
}

HostBinding
As well as listening to output events from the host element a directive can also bind to input properties in the host element with @HostBinding.

This directive can change the properties of the host element, such as the list of classes that are set on the host element as well as a number of other properties.

for loop req starting expr,condtion and increment (for (let i=0;i<10;i++)
for..in loop allows you to loop thru ppty of an object
for..of loop allows you to loop thru iterable objects eg array, node list
forEach loop is used directly with array, node list 


switch(expression) {
  case x:
    // code block
    break;
  case y:
    // code block
    break;
  default:
    // code block
}

i need the ip address of my mssql server
mssql 2016
userID: db_a66d0c_clearing_admin
208.118.63.220
SQL5090.site4now.net

Soln: You can use the below cmd command to get it, or other tools.
ping sql5090.site4now.net -t

To CALL a component within a parent, use its selector <app-home></app-home>
To display a component view, use <router-outlet></router-outlet> tag as placeholder

employee-details.component.css -- venkat ang crud tut chap 41 6:09 7:11
.imageClass{
    width:200px;
    height:200px;
}
.vertical-align{
    display: flex;
    align-items: center;
}

innerHTML ia a DOM propoerty in JS  eg 
var x = document.getElementById('divA').innerHTML
below, the innerHTML is all the HTML inside the div tag (p tag and the text)
<Div id='divA'> <p> hello world</p></Div>
document.getElementById(div_id).style.display = none;

// .innerHTML method is used to change the html contents of a DOM object
document.getElementById("demo").innerHTML = "Paragraph changed!";
<button onclick="this.innerHTML = Date()">The time is?</button>

<p id="demo"></p>
<p id="myList">This is my text</p>

// first way of accessing element
document.getElementById("demo").innerHTML = "I have changed!";

// second way of accessing element
var element=document.getElementById("demo");
element.innerHTML = "I have changed!";

// get text of id myList
let html = document.getElementById("myList").innerHTML;

Dim idNo As String
Using cnn As New SqlClient.SqlConnection(conStr)
 Using cmd As New SqlClient.SqlCommand("SELECT dbo.udf_getNextAcctID  (@GroupID)", cnn)
  cmd.Parameters.AddWithValue("@GroupID", cboDept.SelectedValue)
  cnn.Open()
  idNo = cmd.ExecuteScalar.ToString  'returns nextAcctID
 End Using
End Using



            Cursor.Current = Cursors.WaitCursor
            Dim ds As New DataSet
            Dim da As New SqlDataAdapter
            Dim conn As New SqlConnection(conStrPay)
            Dim cmd As New SqlCommand()
            cmd.Connection = conn
            cmd.CommandType = CommandType.StoredProcedure
            conn.Open()



            cmd.CommandText = "PayslipDetailsCrosstab"
            cmd.Parameters.AddWithValue("@division", strDivID)
            cmd.Parameters.AddWithValue("@Mth", CInt(mtH))
            cmd.Parameters.AddWithValue("@Yr", gYear) ' for comparative analysis
            cmd.ExecuteNonQuery()
            da.SelectCommand = cmd
            da.Fill(ds)

dipesh malvia - JS

Job Offer
Hello Ayo,
Further to our discussion,
we hereby notify you of our intent
to offer you a Job as Sales Manager
in our Firm.
Please send us a response to 
indicate your acceptance/rejection

Omage Babafemi (MD)
Logic Version

oncopadi.com

Observable in rxjs
Data stream 
A stream is a data, which arrives over a period of time. The stream of data can be anything. Like variables, user inputs, properties, caches, data structures, and even failures, etc

Value is not the only thing that stream emits.
At any point in time stream may emit any of the following three things
Value: i.e the next value in the stream
Complete: The stream has ended
Error: The error has stopped the stream.

The observable starts to emit values only when someone subscribes to it.
The Observable on its own is useless unless someone consumes the value emitted by the observable. We call them observers or subscribers.

The Subscribers communicate with the Observable using callbacks that make up the Observer
The Subscriber receives the data from the observable via the next() callback

The Subscribers must subscribe to the observable to receive the value from the observable. While subscribing it optionally passes the three callbacks. next(), error() & complete() that make up the observer
All three callbacks are optional

Observable is a function that converts the ordinary stream of data into an observable stream of data. You can think of Observable as a wrapper around the ordinary stream of data.

Observable stream or simple Observable emits the value from the stream asynchronously. It emits the complete signals when the stream completes or an error signal if the stream errors out.

Observable Creation
There are few ways in which you can create observable in angular. Simplest is to use the Observable constructor. The observable constructor takes observer (or subscriber) as its argument. The subscriber will run when this observable’s subscribe() method executes.

The following example creates observable of a stream of numbers 1, 2, 3, 4, 5
obs = new Observable((observer) => {
     console.log("Observable starts")
     observer.next("1")
     observer.next("2")
     observer.next("3")
     observer.next("4")
     observer.next("5")
   })
The variable obs is now of the type of observable.
The above example declares the obs as the observable but does not instantiate it. To make the observable to emit values, we need to subscribe to it.




Reactive Programming
The reactive programming is all about creating the stream, emitting value, error or complete signals, manipulate, transfer or do something useful with the data streams.

Reactive programming is about programming the stream. The RxJS library brings Reactive Programming into Angular. Using RxJs, we can create an observable, which can emit the next value, error, and complete signals to the subscriber of the observable.	



The ValueChanges is an event raised by the Angular forms whenever the value of the FormControl, FormGroup or FormArray changes. It returns an observable so that you can subscribe to it. The observable gets the latest value of the control. It allows us to track changes made to the value in real-time and respond to it. For example, we can use it to validate the value, calculate the computed fields, etc.

this.reactiveForm.get("firstname").valueChanges.subscribe(x => {
   console.log('firstname value changed')
   console.log(x)
})

You can also subscribe to the top-level form as shown below.
this.reactiveForm.valueChanges.subscribe(x => {
    console.log('form value changed')
    console.log(x)
})
https://www.tektutorialshub.com/angular/valuechanges-in-angular-forms/

Create a reactive form as shown below
reactiveForm = new FormGroup({
   firstname: new FormControl('', [Validators.required]),
   lastname: new FormControl(),
   address: new FormGroup({
     city: new FormControl(),
     street: new FormControl(),
     pincode: new FormControl()
   })
 })
console.log(this.reactiveForm.get("firstname").value)   //latest value of firstname

Tap RxJs operator returns an observable that is identical to the source. It does not modify the stream in any way. Tap operator is useful for logging the value, debugging the stream for the correct values, or perform any other side effects.
we can simply pass the console.log function to the tap operator
  of(1, 2, 3, 4, 5)
      .pipe(tap(console.log))
      .subscribe(val => console.log("at Subscriber " + val));
Tap does not modify the source observable in any way

Syntax
tap(nextOrObserver: function, error: function, complete: function): Observable
https://www.tektutorialshub.com/angular/tap-operator-in-angular-observable/
-------------------------

//using pipe method customOperator as standalone 
customOperator = pipe(
    tap(data => console.log('tap '+data)),
    filter(data => data > 2),
    tap(data => console.log('filter '+data)),
    map((val) => {
      return val as number * 2
    }),
    tap(data => console.log('final '+data)),
  );

ngOnInit() { //using pipe method customOperator as standalone  
    this.customOperator(this.obs).subscribe();
  }

Use_Receivable_Invoice_Value_For_Payment_Start_Date

rxjs: diff btw catchError and throwError
@ViewChild('button',{static:true}) button;

You can use the angular cli ng update command to automatically upgrade your current code base.

syncFusion
uername: omagebi@yahoo.com
pwd: omagefemi

https://localhost:44318/api/Upload
  uploadFile = (files) => {
    if (files.length === 0) {
      return;
    }

searchControl: FormControl=new FormControl();
cnt=0;
ngOnInit(){
  this.searchControl.valueChanges.pipe(
  decounceTime(1000),
  switchMap(() => interval(500))
  ).subscribe(val=> this.cnt=val);
  			

}

SwitchMap automatically subscribes to the innerObservable returned by the callback function. The innerObservable emits the values (A,B,C,D), and pushes it to the stream
Hence the subscribers will receive the values A, B, C, D four times. Once for each value of the srcObservable.
https://www.tektutorialshub.com/angular/using-switchmap-in-angular/

SwitchMap Vs Map
The map operator emits a value as an observable. The SwitchMap creates an inner observable for each value, subscribes to it and emits its resulting value as observable.

The map operator below maps the value coming from the source observable to a new value by multiplying it by 2. It then emits it into the observable stream. The subscribers will receive the values 2,4,6 & 8.
let obs= of(1,2,3,4)
 
//Using MAP
obs.pipe(
  map(val => {
    return val*2 //Returning Value
  })
)
.subscribe(ret=> {
  console.log('Recd from map : ' + ret);
})
 
//Output
Recd from map : 2
Recd from map : 4
Recd from map : 6
Recd from map : 8


 

source$.pipe(
  map((a: string) => changeAndReturnArray(a)),
  filter((b: string[]) => giveMeOnlySymbolsThatAreAfterNInAlphabet(b)),
  switchMap((c: string[]) => putToSomeObservable(c))
  ....
);
Multiple Step OLE DB operation errors ... no work was done
soln: check if db col is a computed field or data type incompatible

Microservices
Augury chrome ext for angular

C#
readonly vs const: 
const is a compile time constant. declared and initialized, then cannot be changed
readonly is runtime constant. can be declared, then initialized later, once initialized, it cannot be changed

var vs dynamic: for var, variable type is checked at compile time 
dynamic variable type is checked at runtime

npm install -g json-server -- json fake server -- eg add array of emps to it
create db.json file to act as the dbase in the root folder 
start the server: json-server --watch db.json
it will display the URIs 

source$.pipe(
  map((a: string) => changeAndReturnArray(a)),
  filter((b: string[]) => giveMeOnlySymbolsThatAreAfterNInAlphabet(b)),
  switchMap((c: string[]) => putToSomeObservable(c))
  ....
);
In above example you are not 'breaking' the stream, or jumping outside of it to do some external action. Jumping outside of stream is possible with 'tap' operator, where you can:
eg
debug your code -> console.log() but inside the stream.
call functions that will cause some side effect, that might be visible to end user
My personal opinion - use 'tap' only if you can't find any better solution
tap is replacement of do operator which returns observable identical to your source observable. for each value emitted perform a side-effect

rxjs tap operator
tap({
  next: x => { console.log(x); },
  error: err => { console.error(err); },
});


What is the use of next () in angular?
next() The subject next method is used to send messages to an observable which are then sent to all angular components that are subscribers (a.k.a. observers) of that observable.

There is no next() on Observable; only on Subject and BehaviorSubject, which extends Subject (and both extend Observable).

transaction in EF Core
using (var context = new AppDbContext())
            {
                using (IDbContextTransaction transaction = context.Database.BeginTransaction())
                {
                    try
                    {
                        context.Company.Add(new Company() { CompanyName = "Intel" });

                        context.SaveChanges();

                        context.Employee.Add(new Employee() { Name = "David" });
                        context.SaveChanges();

                        transaction.Commit();
                    }
                    catch (Exception ex)
                    {
                        transaction.Rollback();
                        Console.WriteLine(ex.Message);
                    }
                }
            }

JavaScript Promises
Promises are used to handle asynchronous tasks. For example,
// returns a promise
let countValue = new Promise(function (resolve, reject) {
  if (true)
  resolve('Promise fulfilled/resolved')
  else
  reject('Promise rejected -- from femi');
});

// executes when promise is resolved successfully
countValue.then(
    function successValue(result) {
        console.log(result); // Promise resolved
    },
 ).catch(err=>console.log(err) )


JavaScript Rest Parameter and Spread Operator
You can use the rest parameter to represent an indefinite number of arguments as an array. For example,

function show(a, b, ...args) {
  console.log(a); // one
  console.log(b); // two
  console.log(args); // ["three", "four", "five", "six"]
}
show('one', 'two', 'three', 'four', 'five', 'six')

You pass the remaining arguments using ... syntax. Hence, the name rest parameter.
You use the spread syntax ... to copy the items into a single array. For example,
let arr1 = ['one', 'two'];
let arr2 = [...arr1, 'three', 'four', 'five'];
console.log(arr2); // ["one", "two", "three", "four", "five"]

Both the rest parameter and the spread operator use the same syntax. However, the spread operator is used with arrays (iterable values).

A JS constructor is a special function that creates and initializes an object instance of a class. In JavaScript, a constructor gets called when an object is created using the new keyword. The purpose of a constructor is to create a new object and set values for any existing object properties.

In a constructor function 'this' does not have a value. It is a substitute for the new object. The value of this will become the new object when a new object is created.

In JavaScript, the this keyword refers to an object.

Which object depends on how this is being invoked (used or called).

The this keyword refers to different objects depending on how it is used:
In an object method, this refers to the object.
Alone, this refers to the global object.
In a function, this refers to the global object.
In a function, in strict mode, this is undefined.
In an event, this refers to the element that received the event.

Note
'this' is not a variable. It is a keyword. You cannot change the value of this.

class Person {
  constructor(name) {
    this.name = name;
  }
}

const person1 = new Person('John');

console.log(person1.name); // John 

Use object literals {} instead of new Object().
Use array literals [] instead of new Array().
Use pattern literals /()/ instead of new RegExp().
Use function expressions () {} instead of new Function().

const x4 = {};           // new Object object
const x5 = [];           // new Array object
const x6 = /()/          // new RegExp object
const x7 = function(){}; // new function 

//Constructor Function
function BellBoy (name, age, hasWorkPermit, languages) {
  this.name = name;
  this.age = age;
  this.hasWorkPermit = hasWorkPermit;
  this.languages = languages;
}

//Create New Object From Constructor Using Arguments
var Earl = new BellBoy('Earl E.Bird', 23, true, ['French', 'German'])

//Access the Properties and Their Values
console.log('Name : ', Earl.name)
console.log('Age : ', Earl.age)
console.log('Verified Work Permit : ', Earl.hasWorkPermit)
console.log('Languages : ', Earl.languages)

// constructor function
function Person () {
    this.name = 'John',
    this.age = 23,

     this.greet = function () {
        console.log('hello');
    }
}

Create Objects: Constructor Function Vs Object Literal
Object Literal is generally used to create a single object. The constructor function is useful if you want to create multiple objects. 



[ProducesResponseType] attribute explicitly for every possible return type for IActionResult type. This can be a limitation of using this type.

[HttpPost]
[ProducesResponseType(StatusCodes.Status201Created)]
[ProducesResponseType(StatusCodes.Status400BadRequest)]
public async Task<ActionResult<Employee>> CreateAsync(Employee employee)
{
    if (employee.Name.Length < 3 || employee.Name.Length > 30)
    {
        return BadRequest("Name should be between 3 and 30 characters.");
    }

    await _repository.AddEmployeeAsync(employee);

    return CreatedAtAction(nameof(GetById), new { id = employee.Id }, employee);
}

Automatic HTTP 400 Response
While using ASP.NET Core Web API, if we mark a controller with the [ApiController]  attribute, it will automatically trigger an HTTP 400 response if there is a model validation error.

await _repository.AddEmployeeAsync(employee);
return CreatedAtAction(nameof(GetById), new { id = employee.Id }, employee);
https://learn.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.mvc.controllerbase.createdataction?view=aspnetcore-7.0

[HttpGet]
public List<Employee> Get() =>
    _repository.GetEmployees();

    public Form1() //constructor for form1
    {
        InitializeComponent();
        button1.Click += button1_Click;
    }

Discards (_) in C# are placeholder variables that are intentionally unused in application code. Discards are equivalent to unassigned variables; they don't have a value. A discard communicates intent to the compiler and others that read your code: You intended to ignore the result of an expression

(_, _, area) = city.GetCityInformation(cityName);

Discards make the intent of your code clear. A discard indicates that our code never uses the variable. They enhance its readability and maintainability.

Action<string> greet = name =>
{
    string greeting = $"Hello {name}!";
    Console.WriteLine(greeting);
};
greet("World");
// Output:
// Hello World!

Func<double, double> cube = x => x * x * x;
the return types of action methods are embedded in the Web API response sent to the client. 

The Web API action method can have following return types.
    Void
    Primitive type or Complex type
    HttpResponseMessage
    IHttpActionResult
https://www.tutorialsteacher.com/webapi/action-method-return-type-in-web-api


    public Student GetStudent(int id) //return Primitive type or Complex type
    {
        var student = GetStudentFromDB(id);
    
        return student;
    }

public HttpResponseMessage Get(int id) // Example: Return HttpResponseMessage
{
    Student stud = GetStudentFromDB(id); 

    if (stud == null) {
        return Request.CreateResponse(HttpStatusCode.NotFound, id);
    }

    return Request.CreateResponse(HttpStatusCode.OK, stud);
}  

various methods of ApiController class (eg OK() mtd) returns an object that implement the IHttpActionResult. 
Example: Return IHttpActionResult Type using Ok() and NotFound() Methods
public IHttpActionResult Get(int id) // Example: Return IHttpActionResult 
{
    Student stud = GetStudentFromDB(id);
            
    if (stud == null)
    {
        return NotFound();
    }

    return Ok(stud);
}

In Web API Request Pipeline
Web API controller always returns an object of HttpResponseMessage to the hosting infrastructure who then returns http response to the client

var result = from a in authors
select new {
	Id = a.Id, Name = a.FirstName + "\t" + a.LastName
};
            foreach (var data in result)
                Console.WriteLine(data.Name);
            	Console.Read();

// select query showing result using anonymous type
	var anony_ob = from geek in g 
	select new {geek.A_no, geek.Aname, geek.language};
        foreach(var i in anony_ob)
anonymous type is a reference type and can be defined using the var keyword.	it can only have properties.
The Select clause in LINQ creates and returns an anonymous type as a result

C#: This is a field.  It is private to your class and stores the actual data.
    private string _myField;
 // A property when accessed uses the underlying field,
    // but only exposes the contract, which will not be affected by the underlying field

    public string MyProperty
    {
        get
        {
            return _myField;
        }
        set
        {
            _myField = value;
        }
    }

public class TimePeriod
{
    private double _seconds;

    public double Hours
    {
        get { return _seconds / 3600; }
        set
        {
            if (value < 0 || value > 24)
                throw new ArgumentOutOfRangeException(nameof(value),
                      "The valid range is between 0 and 24.");

            _seconds = value * 3600;
        }
    }
}

TimePeriod t = new TimePeriod();
// The property assignment causes the 'set' accessor to be called.
t.Hours = 24;

// Retrieving the property causes the 'get' accessor to be called.
Console.WriteLine($"Time in hours: {t.Hours}");
// The example displays the following output:
//    Time in hours: 24

Below is an AutoProperty (C# 3.0 and higher) - which is a shorthand syntax
    // used to generate a private field for you
    public int AnotherProperty { get; set; } 

Properties expose fields. Fields should (almost always) be kept private to a class and accessed via get and set properties. Properties provide a level of abstraction allowing you to change the fields while not affecting the external way they are accessed by the things that use your class. 

The compiler option "forceConsistentCasingInFileNames" should be enabled to reduce issues when working with different OSes. -- tsconfig.json

The compiler option "strict" should be enabled to reduce type errors
  "compilerOptions": {
    "forceConsistentCasingInFileNames" :true,
    "strict" : true,
    ....
  }	

Argument of type 'string | null' is not assignable to parameter of type 'string'.
Soln:
JSON.parse(localStorage.getItem('user') as string);
or
JSON.parse(localStorage.getItem('user') as any);

Type 'null' is not assignable to type 'string'.
  route.paramMap.get('id')

ANS-
route.paramMap.get('id')!


    You can trigger suggestions at any time by pressing Ctrl+Space.
    To improve the formatting of your HTML source code, you can use the Format Document command Ctrl+Shift+I to format the entire file or Format Selection Ctrl+K Ctrl+F to just format the selected text.
Angular Dev Server 
An unhandled exception occurred: Port 4200 is already in use. Use '--port' to specify a different port.

%systemroot%\Microsoft.NET\Framework -- mscorlib.dll

instanceof Operator
It returns true if an object is an instance of a class or constructor function and false otherwise.
For example, if we have:
class Foo {};
let foo = new Foo();
console.log(foo instanceof Foo);
function Bar (){};
let bar = new Bar();
console.log(bar instanceof Bar);

Object Literals
Object literals that aren’t created with the new operator are instances of Object .
So if we have:
console.log({} instanceof Object);
We get true outputted.
All objects are instances of Object in addition to being an instance of the constructor they’re created from. For example, if we have:

let date = new Date();
console.log(date instanceof Object);
console.log(date instanceof Date);

Both console.log outputs true since date is both an instance of the Date constructor and all non-primitive objects are instances of Object .


typeof Operator
The typeof operator is used for getting the type of primitive values mainly.
If we have numbers, strings, symbols, booleans, bigint and undefined values, we can use them to check for those.
For example, if we have:
console.log(typeof 1);
We get 'number' logged.
It’s more useful if we have variables:

let foo = 1;
console.log(typeof foo);

Then we can use the typeof operator to check the data type foo, which also gets us 'number'.
It’s important to note that it can’t be used to check for the null type. If we write:

console.log(typeof null);

We get 'object'. Instead, we should use the === operator to check for null as follows:
foo === null
We can check an expression for its type as follows:
let foo = 1;
let bar = '1';
console.log(typeof (foo + bar));
Then we get 'string' logged.

Anything that is created using the new operator is of type 'object', including String, Boolean, and Number :

typeof new String('foo') === 'object';
typeof new Number(1) === 'object';

Note that NaN and computations that return NaN like Number(‘foo’ ) are also of type 'number' . We should check for them with the Number.isNaN() method.
To check for BigInt, we can write:
typeof 2n === 'bigint';

If you want to check whether a value is a number or not, you should use typeof value === 'number'

isNaN() and Number.isNaN(), differ in terms of how they check if a value is NaN:
    Global isNaN() function first converts the argument to a number, and then returns true if the resulting value is NaN;
    Number.isNaN() returns true if and only if the argument is of type Number and the value equals to NaN.

The term "not a number" can be confusing, as it might come across as a means to check whether a non-numeric value is a number or not. However, this is not the case as both, isNaN() and Number.isNaN() are meant to check if a value equals to the special numeric value "NaN" (as defined in the IEEE-754 standard). If you want to check whether a value is a number or not, you should use typeof value === 'number' instead. 

How to get the first non-null/undefined argument in JavaScript ?const coalesceES6 = (...args) =>
  args.find(_ => ![null,undefined].includes(_)
);
console.log(coalesceES6(null, undefined, "Value One",1, 2, 3, null));


How to check empty/undefined/null string in JavaScript?
function checkempty(form) {
            if (form.name.value == null ||
                form.name.value == undefined ||
                form.name.value.length == 0) {
               
                alert("Name cannot be empty\n");
                return false;
            } else {
                alert("Your response has been recorded\n");
                return true;
            }
        }

// function to check string is empty or not
function checking(str)
{
  // checking the string using ! operator and length
  // will return true if empty string and false if string is not empty
    return (!str || str.length === 0 );
}

// function to check string is empty or not
function checking(str)
{
 if(str.replace(/\s/g,"") == ""){
     console.log("Empty String")
 }
 else
 {
     console.log("Not Empty String")
 }
}


Undefined: It occurs when a variable has been declared but has not been assigned with any value. Undefined is not a keyword.

By using typescript compiler tcs we transpile typescript code to javascript and then run the javascript file.
tcs name_of_the_typescript_file

run the javascript file in the terminal by using:
node name_of_the_js_file

in typescript unassigned values are termed undefined
We can use typeof or ‘==’ or ‘===’ to check if a variable is null or undefined in typescript.
JavaScript ‘===’ operator: Also known as strict equality operator, it compares both the value and the type that is why the name “strict equality”.

Null: It is the intentional absence of the value. It is one of the primitive values of JavaScript. Undefined: It means the value does not exist in the compiler. It is the global object.
Null: Object type
Undefined: undefined
 
 null == undefined // true
 null === undefined // false
undefined => variable does not exist
null => variable is empty

It means null is equal to undefined but not identical.

When we define a variable to undefined then we are trying to convey that the variable does not exist . When we define a variable to null then we are trying to convey that the variable is empty.

isNaN(2 +  null)      // false
isNaN(2 + undefined) // true
Examples:
Null:
null ? console.log("true") : console.log("false") // false
Null is also referred as false.
Undefined: 
When variable is not assigned a value
var temp;
if(temp === undefined)
console.log("true");
else
console.log("false");
    Output: true

Accessing values which does not exist
var temp=['a','b','c'];
if(temp[3] === undefined)
console.log("true");
else
console.log("false");
    Output: true

unknown and any in typescript TS
https://dmitripavlutin.com/typescript-unknown-vs-any/
unknown and any are 2 special types that can hold any value in typescript. unknown is recommended over any because it provides safer typing — you have to use type assertion or narrow to a specific type if you want to perform operations on unknown 
An unknown type variable, same as any, accepts any value. But when trying to use the unknown variable, TypeScript enforces a type check. Exactly what you need! -- reason why using TS in  the first place

Let's change the type of callback param from any to unknown, and see what happens:
function invokeAnything(callback: unknown) {
  callback(); -- red squibbly will show under  when fn is invoked

call invokeAnything(1);
error: Object is of type 'unknown'.

You need to perform type checking before using a variable of type unknown. In the example, you would simply need to check if callback is a function type:

function invokeAnything(callback: unknown) {
  if (typeof callback === 'function') {
    callback();
  }
}
 
	invokeAnything(1);
}

Anything is assignable to unknown, but unknown isn't assignable to anything but itself sounds like rhyme

Anyone coming from C# background, any is like dynamic and unknown is like object. I like unknown as it is just more type safe. Confusing names though

Observer
What is an Observer? An Observer is a consumer of values delivered by an Observable. Observers are simply a set of callbacks, one for each type of notification delivered by the Observable: next, error, and complete. The following is an example of a typical Observer object:
const observer = {
  next: x => console.log('Observer got a next value: ' + x),
  error: err => console.error('Observer got an error: ' + err),
  complete: () => console.log('Observer got a complete notification'),
};
To use the Observer, provide it to the subscribe mtd of an Observable:
	observable.subscribe(observer);

Observer : Any object that wishes to be notified when the state of another object changes. Observable : Any object whose state may be of interest, and in whom another object may register an interest.

RxJS (Reactive Extensions for JavaScript) is a library for reactive programming using observables that makes it easier to compose asynchronous or callback-based code.

Why observable is used in Angular?
Angular makes use of observables as an interface to handle a variety of common asynchronous operations. For example: The HTTP module uses observables to handle AJAX requests and responses. The Router and Forms modules use observables to listen for and respond to user-input events.

What is difference between observable and promise?
The biggest difference is that Promises won't change their value once they have been fulfilled. They can only emit (reject, resolve) a single value. On the other hand, observables can emit multiple results. The subscriber will be receiving results until the observer is completed or unsubscribed from.

in JS, specify null if you dont want to pass a value
every ctor fn has a prototype ppty
JavaScript is a single-threaded, non-blocking, asynchronous, concurrent programming language with lots of flexibility.

What is the difference between a callback function and an event listener?
https://www.quora.com/What-is-the-difference-between-a-callback-function-and-an-event-listener
A callback function is a function, in JavaScript. It is passed into another function as an argument, which is then invoked inside the outer function to complete some kind of routine or action.

An event listener is also a callback function, a special kind (see details at the bottom).

Callback function example:

    function greeting(msg) { 
        console.log(msg); 
    } 
    function sayHello(name, callback) { 
        const greet = 'Hello ' + name; 
        callback(greet); 
    } 
    sayHello('John', greeting); 

    Hello John

The callback function can also be passed as an anonymous or arrow function:

    sayHello( 'John', function(text) { console.log)); 

A callback is a piece of code which is called by some library or framework when an asynchronous event happens. An asynchronous event is one which happens at a potentially unpredictable time

Callbacks are typically used for asynchronous (aka, “runs in a different thread or process”) operations, but there is nothing special about them - they are just functions. The asynchronous code that does the work will always happen in a different thread or process - your callback is merely the reference to call when control is returned to your program calling thread).
For example:
    console.log(1) 
    doer.someLongRunningOperation(data, function(err, result){ 
         console.log('3'); 
         // this is the body of the callback
	} 
    ); 
In the above code segment, we call the someLongRunningOperation routine, and we pass it a callback. In the above code, typically 1 will run first, then 2, then 3.
for clarity, the doer implementation might look like:
      doer.someLongRunningOperation = function(data, cb){ 
      makeSomeHTTPRequest(data, function(err){ 
       if(err){ 
         return cb(err); 
       } 
     
       cb(null, foo.manipulateData(data)); 
       
      }); 
    }; 
Note that in Node.js, asynchronous operations are usually done in C++, your callback is passed to V8 (the Chrome engine). So your JS callback function will normally be invoked by some C/C++ code. This is also almost certainly what happens with AJAX in browsers.
https://www.quora.com/What-is-a-callback-1

Callbacks are used as unique re-entry points in your program that will be called when some longer-running operation completes. 

Note that it’s very common for callbacks to be anonymous functions - they are functions NOT methods - they are not properties of an object but simply freely floating unique functions in memory.

Express.js, or simply Express, is a back end web application framework for building RESTful APIs with Node.js

Event Listener is a callback attached or executed when an event occurs
	element.addEventListener(event, listener, useCapture);


function genEmpID(){
  return Math.floor(Math.random()*999);
}

in arrow fn, whatever is onthe rhs is implicitly returned if its one line of statment

navigate() accepts array where you construct the path and options object that can contain relativeTo ppty etc
eg navigate(['users',1],{relativeTo:}). 
navigateByUrl() accepts a string and is for absolute pathonly .
eg navigateByUrl('users/1')

undefined in JS
A variable declared without a value will have the value undefined.
JavaScript Dollar Sign $
Using the dollar sign as a variable is not very common in JavaScript, but professional programmers often use it as an alias for the main function in a JavaScript library.

In the JavaScript library jQuery, for instance, the main function $ is used to select HTML elements. In jQuery $("p"); means "select all p elements".

JavaScript Underscore (_)
Using the underscore is not very common in JavaScript, but a convention among professional programmers is to use it as an alias for "private (hidden)" variables.

var variable is fn scoped while const and let are block scoped

The for loop executes a statement or a block of statements repeatedly until a specified expression evaluates to false. 

The foreach statement repeats a group of embedded statements for each element in an array or an object collection. You do not need to specify the loop bounds minimum or maximum. The following code loops through all items of an array.

In EF Core
Classes become entities when they are included as DbSet<TEntity> properties in a context class (the class which derives from DbContext), as shown below.

public class SchoolContext : DbContext
{
    public SchoolContext()
    {

    }

    public DbSet<Student> Students { get; set; }
    public DbSet<Grade> Grades { get; set; }
}

A navigation property is an optional property on an entity type that allows for navigation from one end of an association to the other end. Unlike other properties, navigation properties do not carry data.

The navigation property represents a relationship to another entity. 
 There are two types of navigation properties: Reference Navigation and Collection Navigation 

If an entity includes a property of another entity type, it is called a Reference Navigation Property. It points to a single entity and represents multiplicity of one (1) in the entity relationships.

Collection Navigation Property
If an entity includes a property of generic collection of an entity type, it is called a collection navigation property. It represents multiplicity of many (*). 

https://www.entityframeworktutorial.net/basics/entity-in-entityframework.aspx

In relational databases, relationships (also called associations) between tables are defined through foreign keys. A foreign key (FK) is a column or combination of columns that is used to establish and enforce a link between the data in two tables. 

The many-to-many relationship involves defining a third table (called a junction or join table), whose primary key is composed of the foreign keys from both related tables. 

An entity in Entity Framework is a class that maps to a database table. This class must be included as a DbSet<TEntity> type property in the DbContext class. EF API maps each entity to a table and each property of an entity to a column in the database.

ClaimsPrincipal is same as LoggedIn User

https://flatuicolors.com/palette/defo

<div class="button-container">     
  <a href="#" class="btn">Click me</a>
     <p>.btn</p>   
</div>
.button-container { border: 1px solid black; text-align: center; padding: 20px; margin: 50px;}
.btn { color: inherit; text-decoration: none; border: 1px solid black; padding: 10px 20px; display: inline-block; font-family: sans-serif; transition: all 0.1s;}
.btn:hover { transform: translateY(-3px);}
.btn-round { border-radius: 80px;}
Create a new class and use those variables.
.btn-primary { background-color: var(--primary-color); color: var(--primary-button-text-color);}
Set up your variables in :root. I got these colors from Flat UI Colors.
:root { --primary-color: #3498db; --primary-button-text-color: white; 
--secondary-color: #2ecc71; --secondary-button-text-color: white;}
.btn-secondary { background-color: var(--secondary-color); color: var(--secondary-button-text-color);}
Create a new .btn with .btn-round and .btn-primary.
<div class="button-container">
     <a href="" class="btn btn-round btn-primary">Click me</a>
     <p>.btn .btn-round .btn-primary</p>   
</div>

button { border: none; font-size: inherit;}
<div class="button-container">
     <button href="" class="btn btn-round btn-secondary">Click me</button>     <p>button</p>   
</div>

Disabling strictPropertyInitialization
We’ll need to set the strictPropertyInitialization property in the tsconfig.json file to false.
We’re doing this because the strict mode is enabled by default in all new Angular apps starting from version 12, which means that TypeScript will complain if we declare any class properties without setting them in the constructor (a common practice in Angular). 

$firebaseArray()
Angularfire2 integrates RxJS observables and other reactive patterns with firebase. It gives you the possibility of working with firebase in a reactive way.

https://console.firebase.google.com/project/fireproject1-51b24/firestore/data/~2F

Angular New Project
ng new <projectName>
npm install bootstrap
@import "~bootstrap/dist/css/bootstrap.css"
 "styles": [
              "./node_modules/bootstrap/dist/css/bootstrap.css",
              "src/styles.css"              
    ],       
ng add @angular/material
ng add @angular/fire -- adds angularFire to a project
The Firebase CLI provides us with several tools for managing, viewing, and deploying to Firebase projects. We can use npm to install the CLI:
npm i -g firebase-tools
firebase login -- for login
firebase projects:list

Firebase is an app development platform backed by Google which provides developers with a series of tools to build applications
// https://firebase.google.com/docs/web/setup#available-libraries

Firebase CLI v11.14.1 is incompatible with Node.js v14.17.6 Please upgrade Node.js to version ^14.18.0 || >=16.4.0
soln:reinstall node.js from nodejs.org
-----------------------------------------------

Firebase Hosting
Angularfire: The official Angular library for Firebase.
AngularFire is the officially supported Angular binding for Firebase (a backend service that can provide storage, authentication, and deployment services to an Angular application).
To install AngularFire, run the following command in your project directory:
npm install firebase @angular/fire --save

Share Capital (an equity account) 



How about add salt to url:
const salt = (new Date()).getTime();
return this.httpClient.get(`${url}?${salt}`, { responseType: 'text' });

Same concept is used for static resource links in html (css or js) to trick the cache. Adding dynamic salt to url causes fresh loading of target each time because url is different every time, but in fact it is the same.

/static/some-file.css?{some-random-symbols}

I used date because it guarantee me unique number without using random and so on. We can just use incrementing integer for each call as well.

Disable caching
<meta http-equiv="Cache-Control" content="max-age=0, must-revalidate"/>
<meta http-equiv="Pragma" content="no-cache"/>
<meta http-equiv="Expires" content="0" />

OR

Use HTTP Interceptor to disable caching of data
To disable the caching of AJAX data, we can use HTTP Interceptor in Angular. Disabling Cache in Angular 5.

intercept(req: HttpRequest<any>, next: HttpHandler):
  Observable<HttpSentEvent | HttpHeaderResponse | HttpProgressEvent | HttpResponse<any> | HttpUserEvent<any>> {
  const nextReq = req.clone({
      headers: req.headers.set('Cache-Control', 'no-cache, no-store, must-revalidate')
      .set('Pragma', 'no-cache')
      .set('Expires', 'Sat, 01 Jan 2000 00:00:00 GMT')
      .set('If-Modified-Since', '0')
  });

  return next.handle(nextReq);
}

  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {
    
    request = request.clone({
      setHeaders: {
        Authorization: `Bearer ${this.auth.getToken()}`
      }
    });

    return next.handle(request);
  }
}

Periodval: (substring([period],(4),(4))+right('00'+CONVERT([varchar](2),substring([Period],(1),(2)),(0)),(2)))
vwTranxactionAndChartOfAccountsForRptSummary - generates reportSumm entries

angular: add pwa support
CSS Tabs Widget
https://voters.inecnigeria.org/dashboard/index
CSS Tabs Widget
add abs() fn to P&L -- inc stmt
rpts for P&L items -- ajao
css responsive tabs + bootstrap 5
add uniq idx to jobcode
export butt for xls only

new rec not showing on closed jobs
format price detls page	
add loading spinner to -- detls/expense list comp
angular external login providers + codAffection
angular confirm email
angular confirm phone no
angular matetial stepper + codAffection
https://github.com/CodAffection/Angular-Material-Popup-Dialog-Model.git

logging -- venkat
display table design + tsql
Angular 14 Admin Dashboard Template Free Download | Bootstrap 5 | Material Design Part 1
https://www.youtube.com/watch?v=jXqwfSID-Ws

Google Developer’s website.


typescript export function
export function name(params:type): returnType { }
typescript export variable
//Let's say you want to export the arr variable from file1.ts:
const arr = [1,2,3];
export { arr };
//Then you just have to import when you need it
import { arr } from "./file1";
console.log(arr.length);

Export Declare keyword -- export declare class Actions {...}
The class's real implementation is probably in somewhere else—maybe a .js file.
Typescript Declare keyword tells the compiler that the source exists in another file (third party libraries of JavaScript, jQuery, Node, etc.). 

the declare keyword directly integrate (imports) these libraries in our code and decrease the chance of error in our TypeScript code
Its used for the Ambient declaration of variables or methods

We use declare keyword only in Ambient file to use the libraries method and variables.

Declare vs. var
var creates a new variable. declare is used to tell TypeScript that the variable has been created elsewhere. If you use declare, nothing is added to the JavaScript that is generated - it is simply a hint to the compiler.

For example, if you use an external script that defines var externalModule, you would use 'declare var externalModule'
to hint the TypeScript compiler that externalModule has already been set up

The TypeScript declare keyword is used to declare variables that may not have originated from a TypeScript file

Export keyword -- https://www.educba.com/typescript-export-function/
In TypeScript we can almost export anything using the ‘export’ keyword. It is not a function rather it can be used to export several things in TypeScript. By the use of an export keyword, we can export class, function, file, interface, type, etc. in TypeScript. By default it comes up with all the classes or interfaces we create in TypeScript, after this we can easily import these files using the ‘import’ keyword. Export helps us to use the existing component in the while application at any number of times. 

NLog.web.aspnetcore nuget pkg
in asp.net core Logging
default category (in appsettings) is the project namespace
microsoft cat is logging for microsoft namespace

omagebi@yahoo.com
Email Server: Mail.sapidholdingsonline.com
From Email Address: info@sapidholdingsonline.com 
Email Password: sapids*s@***
Recipient Email Address: omagebi@yahoo.com
Test scripts are located in:  h:\root\home\omagebi-001\www\sapidholdings\smtptester 

error: MailKit.Net.Smtp.SmtpCommandException: 'From address must match authenticated address'
soln: From address must equal SmtpUser (registered or sender's email address in the mail server eg info@sapidholdingsonline.com

Error: ystem.ArgumentOutOfRangeException: 'IDX10653: The encryption algorithm 'http://www.w3.org/2001/04/xmldsig-more#hmac-sha256' requires a key size of at least '128' bits. Key '[PII of type 
soln: Ah, it was my mistake, a simple one. I was not providing enough characters for the secret key name.

https://www.guidgenerator.com/
2338802f-8be7-48f1-958a-947d3a7b1ab3
e9d268ff-3182-4d0f-a4c6-b5e537389743

.net 6 proj file
<nullable>enable</nullable> is the problem child.

https://www.guidgenerator.com/
	 
EF Core
in efcore: model classes (domain classes) is same as entity classes
for an extension mtd the class has to be static
By default, the migrations assembly is the assembly containing the DbContext

public bool IsVerified => Verified.HasValue || PasswordReset.HasValue;
public Account Account => (Account)HttpContext.Items["Account"];

c# lambda expression
https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/operators/lambda-expressions#code-try-2
if the functionality is small, you can replace a fn with Lambda expression

http://sapidholdingsonline.com/sapi/watchdog
BondedTerminal
How to Record Salary Payable
https://www.youtube.com/watch?v=Kkd5MStup7Y

https://github.com/cornflourblue/dotnet-6-signup-verification-api.git

watchdog
To view logs, requests, responses and exceptions that occur in your project, run your application and navigate to [YOUR BASE URL]/watchdog. For example, localhost:8081/watchdog
login -- uid: femi pwd: lo**c**s
http://sapidholdingsonline.com/sapi/watchdog

Refresh token
A refresh token just helps you re-validate a user without them having to re-enter their login credentials multiple times. The access token is re-issued, provided the refresh token is a valid one requesting permission to access confidential resources.

Run `ng serve` for a dev server 
how to stop ng dev server
Run `ng generate component component-name` to generate a new component. You can also use `ng generate directive|pipe|service|class|guard|interface|enum|module`.

ASP.NET Core runs on port 5000 by default 
The authorized redirect URIs are the locations where Google will redirect the user to when the login process finishes.
Finally you should get your Client Id and Client Secret during the google config.

Clear cache In Android Chrome app
    On your Android phone or tablet, open the Chrome app .
    At the top right, tap More .
    Tap History. Clear browsing data.
    At the top, choose a time range. To delete everything, select All time.
    Next to "Cookies and site data" and "Cached images and files," check the boxes.
    Tap Clear data.

the Angular router service only works with urls that are internal to the Angular application.

Material Angular now offers some variables to row indexes.
<mat-row *matRowDef="
              let row;
              let even = even; 
              columns: displayedColumns;" 
         [ngClass]="{gray: even}"></mat-row>
There are other properties like: index, count, first, last, even and odd
You can apply colors to rows based on condition as well.
For an instance if the cell value is equal to 100,then change the color of the row to red.
     <tr class="matheader-row" mat-row *matRowDef="let row; columns: displayColumns; 
      let i = index; let even = even;" [class.rowStyle]="row['myColumn']=='100'"
                [ngClass]="{rowcolor: even}">
        </tr>

css
.rowStyle{
background-color:red;
font-weight: bold;
}

Above scenario will work if your columns have myColumn as one of the columns. Also using even property you can apply the required color styling [ngClass]="{rowcolor: even}
if you use themes a transparent css looks nice:
.mat-row:nth-child(odd){
  background: rgba(0,0,0,0.025);
}

In you CSS file: .gray { background-color: #f5f5f5 }
.some-class-name {
    background-color: blue !important; 
}
https://stackoverflow.com/questions/47051235/alternate-row-colours-angular-material-table

Angular Material Drag Drop
VIT/08/22/04
https://localhost:7118/api/clearing/Invoices/search?id=VIT%2F08%2F22%2F04
https://localhost:7118/api/clearing/Invoices/search?id=OMA%2F09%2F22%2F01

What is connection URL in database?
A database connection URL is a string that your DBMS JDBC driver uses to connect to a database. It can contain information such as where to search for the database, the name of the database to connect to, and configuration properties. The exact syntax of a database connection URL is specified by your DBMS.

The general form of the connection URL is
jdbc:sqlserver://[serverName[\instanceName][:portNumber]][;property=value[;property=value]]

When specifying the location of the SQL Server instance, one normally provides serverName\instanceName or serverName:portNumber, not both. That is, either
jdbc:sqlserver://INNOWAVE-99\SQLEXPRESS01;databaseName=EDS
or
jdbc:sqlserver://localhost:1433;databaseName=EDS;

Connect by specifying a customized application name:
jdbc:sqlserver://localhost;databaseName=AdventureWorks;integratedSecurity=true;applicationName=MyApp;


https://learn.microsoft.com/en-us/sql/connect/jdbc/building-the-connection-url?view=sql-server-ver16


        private bool BillingExists(string id)
        {
            return _context.Billing.Any(e => e.billNO == id);
        }

Error:Can't bind to 'mat-dialog-close' since it isn't a known property of 'button'
soln: import -> MatDialogModule to the module, then add the component using it to declaration arr  and entryComponent if the component will be a dialog

Error: not all code paths (or Block) return a value
soln: either return; OR use throw if in catch block

ABS() function :
This function in SQL Server is used to return the absolute value of a specified number.

InvalidOperationException C# 
Try/Catch exception handling should always be used when committing or rolling back a SqlTransaction. Both Commit and Rollback generate an InvalidOperationException if the connection is terminated or if the transaction has already been rolled back on the server.

npm i --save exceljs file-saver
npm i xlsx --save
ngx datatable -- ngx rocket
<table class="table table-striped table-bordered table-sm row-border hover" datatable [dtOptions]="dtOptions">
visit datatables.net

The most common cause of a 403 Forbidden Error is simply inputting an incorrect URL
Invalid or corrupted Cookies can cause improper authentication for the server, leading to the 403 Error. This is due to the fact that the client is no longer authenticated to perform this particular request.

Angular Admin LTE
https://mledour.github.io/angular-admin-lte/branches/master/#/
npm install angular-admin-lte --save

http://localhost/clearing
add sapidLogo22.png to assets/images folder
read resume -- sales
renew finelib subscription
renew aceess bank acct
hr/0000129
hr/0000235
hr/0000223 -- ajayi -- on roster
stop SQLAgent - TSQL Job -- roster create
vwRosterClockInOrOut
vwRosterForRptCrosstab2
chnage signIn/Out values to datetime in sproc add duration col to vw -- 
remove auto roster rows from rpt view

ngx-file-drop
https://www.npmjs.com/package/ngx-file-drop

  setOptions() {
    setTimeout(() => {
      this.listOfOptions = this.options;
    }, 5000)
  }

<input list="browsers" name="browser">
  <datalist id="browsers">
    <option *ngFor="let opt of listOfOptions" [value]="opt">
  </datalist>


What is NGX admin?
ngx-admin is a front-end admin dashboard template based on Angular 9+, Bootstrap 4+ and Nebular. That means all the data you can see on graphs, charts and tables is mocked in Javascript so you can use the backend of your choice with no limitations.

What are the decorators in angular?
https://www.pluralsight.com/guides/defining-metadata-with-a-decorator-in-angular
There are four types of decorators in Angular:
    Class Decorators.
    Property Decorators.
    Method Decorators.
    Parameter Decorators.

The Key Admin Panel Features to Design
    User Profile Management. Everyone who uses the admin panel has a personal account, so you should always keep user profiles in mind when designing such panels. ...
    Content Management. ...
    User Authorization. ...
    Security and Permissions. ...
    Audit. ...
    Viewing Data. ...
    Editing Data. ...
    Easy Navigation.

Angular AdminLTE Dashboard Template
What is AdminLTE used for?
AdminLTE is a popular open source WebApp template for admin dashboards and control panels. It is a responsive HTML template that is based on the CSS framework Bootstrap 3.

  fruits = ["apple", "orange", "banana", "grapes"];
  <ng-select [items]="fruits" appendTo="body" formControlName="fruitNames" 	placeholder="Select Fruits">
 </ng-select>
"node_modules/@ng-select/ng-select/themes/default.theme.css"

firebase vs fireStore
Firestore is a NoSQL database that is part of the Firebase app
Firebase is a more compressive solution and incorporates multiple services like databases, notifications, analytics, ML, etc

Firebase, is a backend as a service owned by Google, and Firestore, is a NoSQL scalable realtime database. 
    Firebase – Comprehensive app development platform from Google
    Cloud Firestore – NoSQL scalable database that is part of Firebase
Both Realtime Database and Cloud Firestore are NoSQL Databases.https://blog.back4app.com/firebase-vs-firestore/

Cloud Firestore is Firebase's newest database for mobile app development. It builds on the successes of the Realtime Database with a new, more intuitive data model. Cloud Firestore also features richer, faster queries and scales further than the Realtime Database. Realtime Database is Firebase's original database.

Antonov An-225 Mriya

Exception handling
Exceptions are the errors that happen at runtime. Exception handling is the technique to handle this runtime error in our application code. 
If any error is thrown in web API that is caught, it is translated into an HTTP response with status code 500- "Internal Server Error".

M2SYS Technology 
How to Use Biometric Fingerprint Scanner in C#
https://www.m2sys.com/blog/fingerprint/how-to-use-biometric-fingerprint-scanner-in-c/

in angular, get router url without query params 
this.router.url.split('?')[0] 

to deploy angular to iis (prod)
remove root slash "/" from image url
save firebase config in env.ts
prefix used in base-hRef shld be used after the root slash "/" (like virt dir or application)
make sure the prefix also shows in web config url rewrite


html input background color
style="background-color: #e3f2fd;"

<input style="background-color: gold;" type="text" value="">

input[type="text"], textarea {
  background-color : #d1d1d1; 
}

use input[type="text"] instead of input. But also use border: none; rule to avoid default text input borders

input, textarea {
  background-color: #d1d1d1;
}

angular pdfViewer
https://www.npmjs.com/package/ngx-extended-pdf-viewer/v/2.0.0-alpha.3
[(zoom)]
[zoom]="undefined" (default value): use the zoom level "auto". If not undefined: Set the zoom level of the page, no matter which zoom level was previously configured. Legal values are [zoom]="'auto'", ="'page-actual'", ="'page-fit'", ="'page-width'", or ="50" (or any other percentage). Numbers are always considered percentages; the trailing "%" character is optional. This attribute supports two-way binding. 

You might also try to use the native PDF viewer of your browser. That's a valid approach. Actually, it's even the preferred approach

Using the ES5 version of the PDF viewer. Your PDF files show faster if you update your browser.

error: The height of the PDF viewer widget is zero pixels. Please check the height attribute. Is there a syntax error? Or are you using a percentage with a CSS framework that doesn't support this? The height is adjusted automatedly.

soln: As it turns out, the warning message is correct. It seems Ionic takes some time to render the page, so when ngx-extended-pdf-viewer is initialized, the height of the parent HTML element is still 0px. So ngx-extended-pdf-viewer enters a panic-mode, setting the height forcibly to 100 pixels.

You can workaround the bug with a lot of CSS, but the warning message doesn't go away. So I recommend using a timeout like so:

<ngx-extended-pdf-viewer *ngIf="visible" [src]="'/assets/dummy.pdf'" [zoom]="'page-fit'"></ngx-extended-pdf-viewer>

@Component({
  selector: 'app-tab1',
  templateUrl: 'tab1.page.html',
  styleUrls: ['tab1.page.scss']
})
export class Tab1Page implements AfterViewInit {

  public visible = false;

  public ngAfterViewInit(): void {
    setTimeout(() => {
      this.visible = true;
    });
  }
}

 <ngx-extended-pdf-viewer
     [src]="'/assets/pdfs/The Public Domain - Enclosing the Commons of the Mind.pdf'"
     [height]="'95%'" <!-- you can also use px and vh, or omit the attribute altogether -->
     [useBrowserLocale]="true" <!-- load i18n files from the assets folder -->
     [textLayer]="true" <!-- enable the find button -->
     [showHandToolButton]="true"> <!-- enable text selection -->
</ngx-extended-pdf-viewer>



How to fork a repo in GitHub Intro version control git

Color schemes
Theming the navbar has never been easier thanks to the combination of theming classes and background-color utilities. Choose from .navbar-light for use with light background colors, or .navbar-dark for dark background colors. Then, customize with .bg-* utilities.

<!-- Grey with black text -->
<nav class="navbar navbar-expand-sm bg-light navbar-light">..</nav>	

<!-- Black background with white text -->
<nav class="navbar navbar-expand-sm bg-dark navbar-dark">...</nav>

<!-- Blue background with white text -->
<nav class="navbar navbar-expand-sm bg-primary navbar-dark">...</nav>

<nav class="navbar navbar-light" style="background-color: #e3f2fd;">
  <!-- Navbar content -->
</nav>

<nav class="navbar navbar-expand-sm bg-light justify-content-center">
  ...
</nav>
<nav class="navbar navbar-expand-sm bg-dark navbar-dark fixed-top">
  ...
</nav>
https://www.w3schools.com/bootstrap5/bootstrap_navbar.php
----------------------------------------------------------------
queryParams: single & xple
let queryParams = new HttpParams().append("page",1);
Passing multiple parameters to Http get request
let queryParams = new HttpParams();
queryParams = queryParams.append("page",1);
queryParams = queryParams.append("per_page",1);

Or we can use chain of append methods as shown below.
let queryParams = new HttpParams().append("page",1)
                                  .append("per_page",1);

deploy Angular app in iis + codAffection

options: {
    headers?: HttpHeaders | {[header: string]: string | string[]},
    observe?: 'body' | 'events' | 'response',
    params?: HttpParams|{[param: string]: string | number | boolean | ReadonlyArray<string | number | boolean>},
    reportProgress?: boolean,
    responseType?: 'arraybuffer'|'blob'|'json'|'text',
    withCredentials?: boolean,
Using the params property we can pass parameters to the HTTP get request.

    const url = 'https://reqres.in/api/users?page=1';
    return this.http.get<UserInformation>(url,{params:queryParams});

Refactor the above code to use HttpParams object as shown below
public getUsers(): Observable<UserInformation> {
    const url = 'https://reqres.in/api/users';
 
    let queryParams = new HttpParams();
    queryParams = queryParams.append("page",1);
 
    return this.http.get<UserInformation>(url,{params:queryParams});
}
better still:
let queryParams = new HttpParams().append("page",1);

Passing multiple parameters to Http get request
let queryParams = new HttpParams();
queryParams = queryParams.append("page",1);
queryParams = queryParams.append("per_page",1);


The complete example
https://www.angularjswiki.com/httpclient/get-params/

public getUsers(): Observable<UserInformation> {
    const url = 'https://reqres.in/api/users';

    let queryParams = new HttpParams().append("page",1);

    return this.http.get<UserInformation>(url,{params:queryParams});
}

Passing parameters to Http get using simple parameters Object
The params property accepts simple json object as a parameter.
So instead of using HttpParams, we can create an object which consists of parameters and pass it to the HttpClient.get() method.
public getUsersMultipleParams(): Observable<UserInformation> {
    const url = 'https://reqres.in/api/users';
    let queryParams = {"page":1,"per_page":1};
    return this.http.get<UserInformation>(url,{params:queryParams});
}
This is the simple way to passing parameters to the http get request in Angular.
No need to worry about im-mutability of HttpParams object.

Pass Http get request parameters directly in URL
If you don’t want to create HttpParams object, we can always pass parameters directly in the URL.
public getUsersMultipleParams(): Observable<UserInformation> {
    const url = 'https://reqres.in/api/users?page=1&per_page=1';
    return this.http.get<UserInformation>(url);
}

filterWatches(): void {  
    this.router.navigate(['/orders'], { queryParams: { category: 'watches', type: 'analog' } });  
}

GET api/Reports/ClosedJob?coyID={coyID}&startDate={startDate}&endDate={endDate}&isLessDetls={isLessDetls}

URL Parameters or Query Parameters
he URL Parameters also are known by the name Query strings, Query Params, Get Params, etc.
The URL Parameters are also known as the GET params.
We add the URL parameters using the helper class HttpParams.  The HttpParams is passed as one of the arguments to HttpClient.get method.
To use HttpParams, you need to import it first as shown below.
import { HttpClient,HttpParams } from '@angular/common/http'; 
Then create an instance of the HttpParams class.
const params = new HttpParams()
  .set('page', PageNo)
  .set('sort', SortOn);
And then call the httpClient.get method passing the params as the argument. 
return this.httpClient.get<repos[]>(this.baseURL + 'users/' + userName + '/repos',{params})
eg https://api.github.com/users/tekTutorialsHub/repos?sort=description&page=2
HttpParams.set mtd
set(param: string, value: string): HttpParams
params = new HttpParams()
    .set('page', '2')
    .set('page', '3')
    .set('sort', 'name');
console.log(params.toString()); //Returns page=3&sort=name

src\app\@shared\http\api-prefix.interceptor.spec.ts
test for reEntry after clockOut
check total field in inv detls
point appURL to clearing api

saving.module.ts — has settings for the customer pdf viewer. See Figure 12.
saving.component.html — has code to display the pdf. See Figure 13.
saving.component.ts — has code to call report server WebAPI. See Figure 14.

GET api/Reports/Invoice?invNo={invNo}
GET api/Reports/ClosedJob?coyID={coyID}&startDate={startDate}&endDate={endDate}&isLessDetls={isLessDetls}

http://sapidholdingsonline.com/reports.aspx?coyID=coyID&startDate=startDate&endDate=endDate

http://localhost:8096/reports.aspx?coyID=(AL_SP)&startDate=01-aug-22&endDate=31-aug-22

http://localhost:8095/api/Reports/VersatileandPrecise/Invoice
http://localhost:8095/api/Reports/Invoice?invNo=000002544
http://localhost:8095/api/Reports/BillNo?billNo=000002544
http://localhost:8095/api/Reports/BillNo?billNo=000002544
https://localhost:44369/api/Reports/BillNo?billNo=000002544
https://localhost:44369/api/Reports/BillNo?billNo=000002544
http://localhost:8095/swagger/ui/index
https://localhost:44369/swagger/ui/index
https://localhost:44369/swagger/ui/index#!/Reports/Reports_ClosedJobAnalysis
failed to load database information -- crystal rpt
soln: go ahead and deploy, it will work. cant display in vs 2019 

The return type of an async method must be void, Task, Task<T>, a task-like type, IAsyncEnumerable<T>, or IAsyncEnumerator<T>	
  
var temp = new DataTable();
  await Task.Run(() => {
    using ( var conn = new System.Data.SqlClient.SqlConnection(ReportResources.ConnString) )
    {
      var DA = new SqlDataAdapter(string.Format(ReportResources.Instance.CureInfoQueries["WWQuery2"], A, B, C, D), conn);
      DA.Fill(temp)
    }
  });
  return temp;


    opt.WatchPageUsername = "femi"; //watchDog Logger
    opt.WatchPagePassword = "logicsys";
You can now log messages or events using
WatchLogger.Log("...WatchDog is awesome...");
To view logs, requests, responses and exceptions that occur in your project, run your application and navigate to [YOUR BASE URL]/watchdog. For example, localhost:7270/watchdog

add SHiftIDX col to smartHR ?
log errors to ClockInError tbl from ClockIn sproc

mvc : Model defines the data structure
      View displays the data
      Controller maps request to actions

'@consultDate', 

The following code creates an HTTP GET endpoint / which returns Hello World!:
app.MapGet("/", () => "Hello World!");

<button class="btn btn-primary" disabled>
  <span class="spinner-grow spinner-grow-sm"></span>
  Loading..
</button>

[appIsLoading]="loadingService.isLoading(this)"
[ngClass]="{'hide':!(service.dataSource!=null && service.dataSource.data.length==0)}"

enum LoadingIndicator {
  DOGS,
  CATS,
}
export class MyComponent {
  ...

  LoadingIndicator = LoadingIndicator;

  ...
  this.loadingService.doLoading(
    this.dogService.getDogs(),
    this,
    LoadingIndicator.DOGS
  ).pipe(
    untilDestroyed(this),
  ).subscribe(dogs => {
    this.dogs = dogs;
  });
 ...
  // similar code for CATS with catsService
}
...
<div [appIsLoading]="loadingService.isLoading(this, LoadingIndicator.DOGS)">
  ...
</div>
<div [appIsLoading]="loadingService.isLoading(this, LoadingIndicator.CATS)">
  ...
</div>

<CR:CrystalReportViewer ID="PackView" runat="server" AutoDataBind="true"
    Height="400" Width="600" BestFitPage="False" ToolPanelView="None" />

C#: Minimal API
<div class="spinner-border" role="status">
  <span class="visually-hidden">Loading...</span>
</div>

<div class="spinner-grow" role="status">
  <span class="visually-hidden">Loading...</span>
</div>

    <button class="btn btn-primary" type="button">
      <span class="d-none spinner-border spinner-border-sm" role="status" 	aria-hidden="true"></span>
      Click me...
    </button>


Add
.example-container {
  overflow-x: scroll;
}

To the app.component.css to fix the top bar. The bottom will need a similar styling. You can't use width:100% because it is technically outside the table. So it can not pick up the width automatically.

http://localhost/clearing
to move to prod db, point apiURL to prod db in env.ts (both devt/prod)

Touch N Go platform is a local web service that exposes both soap and rest end points. All programming languages that support these technologies can be used with Touch N Go platform.

add onDestroy hook to inv/details
http://sapidholdingsonline.com/testingclearing/index.html
http://sapidholdingsonline.com/clearing/testingclearing
http://sapidholdingsonline.com/clearing/index.html
http://sapidholdingsonline.com/testingapi/api/clearing/Invoices
http://sapidholdingsonline.com/testingapi/watchdog

CLI being a Node.js application

ERROR TypeError: n is null
This error occurs when you read a property or call a method on a null object . That's because the DOM API returns null for object references that are blank.

TypeError: null is not an object
This error occurs when you read a property or call a method on a null object . That's because the DOM API returns null for object references that are blank. An object is expected somewhere and wasn't provided. So, you will get null is not an object error if the DOM elements have not been created before loading the script. In JavaScript , null is not an object; and won't work. You must provide a proper object in the given situation.

http error 502.5 - ancm out-of-process startup failure 
soln: Enable logging the application process’ stdout messages in web.config
create folder "logs" under your site root folder if it does not exist
open the root web.config file of your site, set stdoutLogEnabled to true
reload the page again and the error will be looged to the logs folder.
open it to see the cause of the error

create folder name it logs in the root folder (eg testingapi folder)

asp.net core could not start, due to startup issues
as for me, it could not read the appsettings.json file.
corrected it and works fine now
https://www.smarterasp.net/support/kb/a1927/how-to-troubleshoot-http-error-502_5-process-failure-with-_net-core.aspx

web.config file
<aspNetCore processPath="dotnet" arguments=".\ClearingAPI.dll" stdoutLogEnabled="true" stdoutLogFile=".\logs\stdout" hostingModel="OutOfProcess" />

make sure hostingModel="OutOfProcess" -- very impt
-------------------------------------------

to create iis application/vir. dir 
go to  your control panel >> my websites (eg sapid)
click manage website (...)
in advanced section (down the page) 
click  Create  Virtual Directory 
Give it a name (apix), 
select folder , leave 'set as .net app' checked
click create then finished & go back

to get conn string to your db
go to db section >> MSSQL >> locate  your db , click <...>
and your conn str will be displayed
"Data Source=SQL5107.site4now.net;Initial Catalog=db_a66d0c_testing;User Id=db_a66d0c_testing_admin;Password=khide@123" 

Hi
1) Pls i cant find the backups i initiated
i checked the db folder, 
they are not there

2) how do i initiate auto backup (mssql)

Weight: ""
(blur)="updateTotal(+qty.value,+price.value,+VAT.value,+amtPaid.value,+markUp.value)"
Command Timeout=3600;
public static string srConnectionString = 
                "server=localhost;database=mydb;uid=sa;pwd=mypw;Max Pool Size=200;";

You can investigate how many connections with database your application use, by executing sp_who procedure in your database. In most cases default connection pool size will be enough.

What is the max pool size in connection pool?
A connection pool is created for each unique connection string. When a pool is created, multiple connection objects are created and added to the pool so that the minimum pool size requirement is satisfied. Connections are added to the pool as needed, up to the maximum pool size specified (100 is the default).2 Apr 2022

Do not call Close or Dispose on a Connection, a DataReader, or any other managed object in the Finalize method of your class. In a finalizer, only release unmanaged resources that your class owns directly. If your class does not own any unmanaged resources, do not include a Finalize method in your class definition. For more information, see Garbage Collection.

angular: object is possibly 'null'
soln: <input (change)="handleSlideChange($any($event.target).value) />
Object is possibly null
*ngIf="f.firstName.errors?.required"

Type 'null' is not assignable to type '{ [key: string]: any; }'
soln: You can put return null!; -- null as any
It worked for me

Object is possibly 'undefined'.
With the release of TypeScript 3.7, optional chaining (the ? operator) is now officially available.
As such, you can simplify your expression to the following:
const data = change?.after?.data();

The following will fail in strict TypeScript, as you are possibly comparing an undefined value with a number.
if (_?.childs?.length > 0) 
Instead, this is what you should be doing:
if (_?.childs && _.childs.length > 0) 



Hello Sir
Expecting Alert of   =N=730,000 today
breakdown:
migration Balance    =N=250,000
Annual Maint/Support =N=480,000
Acct No: 0010822550
Name: Logic Version Ventures
Bank: GTBank
Pls let it be possible

	declare @curr_Date Date={fn curdate()}
	declare @hasRec bit
	SELECT @hasRec=CAST (CASE WHEN EXISTS(SELECT 1 
	FROM DateMonitorForRoster) THEN 1 ELSE 0 END AS BIT) --AS hasRec
	 select @hasRec

	 select {fn curdate()}

hello Akan,
bring the vehicle to Maryland  
on saturday morning by 8am
come with the filled Agreement document 
having your signature on it
including your house address
it is very important
i hope you have done the engine seat
call me and let me know

ng build  --base-href /clearing/
add paging to invoice page
angular hide and show loading spinner on http request

    this.userService.isLoggedIn=false;
    this.userService.isLoggedIn=true;


  Logout() {
    localStorage.removeItem('userToken');
    this.service.isLoggedIn = false;
    this.router.navigate(['/login']);
  }

  Login() {
    // localStorage.removeItem('userToken');
    this.service.isLoggedIn = true;
    this.router.navigate(['/login']);

  }

<ul class="navbar-nav">
   <li class="nav-item active">
     <a class="nav-link" href="https://logicversion.ng"  	target="_blank">GitHub</a>
  </li>
</ul>

http://192.168.0.1/index.html -- 9mobile
@import "~bootstrap/dist/css/bootstrap.css"; -- style.css
if (localStorage.getItem('userToken') != null) {intercept

make crpt page responsive
<td width="100%" height="120"><img src="Images/sapidHol.jpg" width="800" height="120"></td>

sapid online link
http://sapidholdingsonline.com
username: user
password: user123

http://sapidholdingsonline.com/testingclearing/index.html
http://sapidholdingsonline.com/index.html
C:\Users\Administrator\source\repos\Maritime\Sapid\Clearing\src\assets\images\reactPage

http://sapidholdingsonline.com/index.html
http://sapidholdingsonline.com/clearing
http://localhost:8099/ClockIn/

alawaye timilehin billing HR/0000265
strRetRemarks = "Invalid Roster ID for Clock Out" 'err
sndFile = "InvalidRosterIDForClockOut"
1899-12-30 08:30:00.000
SYS2/9999
SYS/9999
000002547
000002545
000002544 -- 972,870.5
000002343
000002344
http://localhost:4200/index.html
http://sapidholdingsonline.com/clearing/home
vwOrderMarginAnalysisCurrent2
take sapidBilling bkup and add sproc/views from local db 
restore the db and add pri key cols 
take bkup then deployment online

vb6 upgrade companion
gt access code: 219836728110 - logivers 
acctNo: 21983672801
Dim combo As DataGridViewComboBoxEditingControl = TryCast(e.Control, DataGridViewComboBoxEditingControl)
Dim comboBox As ComboBox = CType(e.Control, ComboBox)
 
OnClientClick="target = '_blank';"
Add a HTML button (Print button) to the Webform, not asp:Button.
<input id="btnPrint" type="button" value="Print" onclick="Print()" /> 
onclick="Print()" 
ASP.NET detected invalid characters in the URL.
	  <sessionState mode="InProc" cookieless="true" timeout="3000" />
	  <pages enableSessionState="true" />
	  <!--<customErrors mode="Off" />-->
CrystalReportViewer PrintMode="Pdf" ActiveX



The state information is invalid for this page and might be corrupted.
soln: add state info to page directive -- asp.net classic

HTTP Error 500.30 - ASP.NET Core app failed to start 
soln: make hostingModel = OutOfProcess and enable stdoutLogEnabled to true in web.config file (to log errors) 

http://localhost:8096/reports.aspx -- crpt site
https://sapidholdingsonline.com/clearing
export report directly to PDF
myreport.PrintToPrinter(1, False, 0, 0); -- ok
crystalReport.PrintToPrinter(1, True, 0, 0)

report.ExportToHttpResponse(ExportFormatType.PortableDocFormat, Response, True, "ExportedReport")

turn off saved data in crpt
There are a couple of things you can check:
 1.  Turn OFF Save Data with Report!  This is on by default and you can turn it off on the File menu.  I highly recommend going to Options on the file menu and turning it off globally on the Reporting tab.
 
2.  Try to refresh the report in the viewer.  If it asks for a database login, you're not setting the table logins correctly in your code.  If the parameter value doesn't show the value from your application, it may not bei set correctly in your code.

crpt print dialog isues -- reports.aspx
add loading spinner to rpt and detls page

Fetch error response status is 500
soln: -- i forgot to uncommented the route attribute [HttpGet("search/{id}")]

IQueryable<Billing>' does not contain a definition for 'GetAwaiter' 
soln: add async label to the fn/mtd OR .ToListAsync
a mthd such as async Task<ActionResult<IEnumerable<Billing>>> shld ret a listAsync -- async/await 

<img src="someimage.png" alt="alternative text" style="position: relative;" /><span style="position: absolute; top: 50px; left: 50px;">Some text..</span>


(click)="onClose()" tabIndex="-1"

Modify search in tariff -- fch


Hello Sir (Mr Ayanlere [IT Manager, Emel]),
Please Send us Official letter 
of disengagement concerning 
SmartDoctor in Emel Hospital
This is for record purpose
...Logc Version

protected void Page_Load(object sender, EventArgs e)
{
  EmployeeDBDataContext db = new EmployeeDBDataContext();
  if (!Page.IsPostBack)
  {
    var result = from ed in db.EmployeeDetails where ed.EmpName.Contains("su")
                 select new
                 {
                   Name = ed.EmpName,
                   Location = ed.Location,
                   Gender = ed.Gender
                 };
    gvDetails.DataSource = result;
    gvDetails.DataBind();
  }
} 

<button mat-button *ngIf="item.value.view" matSuffix mat-icon-button aria-label="Clear" (click)="clear(i, j)">
     <mat-icon>close</mat-icon>
</button>
<mat-icon class="mat-icon-rtl-mirror" svgIcon="thumb-up"></mat-icon>
<mat-form-field >
<input type="tel" matInput placeholder="Search">
</mat-form-field>

<mat-icon >search</mat-icon>

<mat-form-field>
    <mat-icon matPrefix>search</mat-icon>
    <input matInput type="search" placeholder="search here" class="search-input">
</mat-form-field>

As you can see we have used ‘mat-form-field’ which will help us to add the default styling to the inner HTML tag that we have used inside it, here we have used ‘input’ tag.

.search-bar { background-color: #222; }
.search-bar * { color: white !important; }
.search-bar input { border-bottom-color: white; }
.md-errors-spacer { display:none; }

export class ReceiverComponent implements OnDestroy {
        messageReceived: any;
private subscriptionName: Subscription; //important to create a subscription
    
        constructor(private Service: CommonService) {
            // subscribe to sender component messages
            this.subscriptionName= this.Service.getUpdate().subscribe
             (message => { //message contains the data sent from service
             this.messageReceived = message;
             });
        }
    
ngOnDestroy() { // It's a good practice to unsubscribe to ensure no memory leaks
      this.subscriptionName.unsubscribe();
    }


-- Invalid Shift
--Unknown FingerPrint or Staff
--Unknown Shift Date
Invalid ClockIn -- wav file -- too early to resume
Good Night -- ClockOut
err wav file -- Go back to work
ok WelCome -- ClockOut

The class that derives DbContext is called context class in entity framework. DbContext is an important class in Entity Framework API

const amtPay = +AmtPaid;
const subTot = Qty * Price;
const pCentMargin = markUp / 100;
const Interest = (subTot * pCentMargin);
const vatVal = VAT / 100
const VAT2 = (subTot - amtPay) * vatVal; ;
const subTotal = subTot;
const Total=subTot + Interest + VAT2 //--'AmtBilled   VAT is included for now
const balance = (Total - amtPay).toFixed(2);

var result = purpose.replace(",", "");
@CoyID ='(ALL-SP)'

fetch => promise.then()=> response.json()=>promise.then(data) 
log(JSON.stringify(data)
gets access to the real data -- amigoscode -- 3:26:00 -- 2:12:21 - Spread Operators on Arrays
https://www.youtube.com/watch?v=dOnAC2Rr-6A&t=645s

---------------------------------------------------

const calcX=name=>{ 
	return 
	{name: name};
     }

async ngOnInit() {
    this.product$ = await this.reviewService.getReview(this.product.$key);
    this.key = Object.values(this.product.reviews);
}

What is the difference between async await and Promise?
Promise is an object representing intermediate state of operation which is guaranteed to complete its execution at some point in future. Async/Await is a syntactic sugar for promises, a wrapper making the code execute more synchronously.18 Apr 2022

The object destructuring can assign values to variables declared using const, let and var. Or even assign to an already existing variable.
For example, here's how to destructure using let statement:
// let
const hero = {
  name: 'Batman',
};
let { name } = hero;
name; // => 'Batman'

	fetch(url)
	.then((res)=> res.json())
	.then((json)=>console.log(json));
ConsigneeCode: this.itemList[this.idx - 1].ConsigneeName
Or we can use the rest parameter syntax and create a function that accepts any number of arguments.
function selectProps(...props){
  return function(obj){
    const newObj = {};
    props.forEach(name =>{
      newObj[name] = obj[name];
    });
    
    return newObj;
  }
}
call fn:
selectProps("id", "title");
//["id", "title"]

A function taking another function as an input or returning a function is called a higher-order function. selectProps is a higher-order function.

delete property from object
using the delete operator (mutable way) and object destructuring combined with object rest (immutable way).
mutates (aka alters, modifies) the original object
In case if the property name to remove is determined dynamically, then you can use the square brackets syntax:

If the property name to remove is determined dynamically, then you can use use the dynamic property name destructuring syntax:
const employee = {
  name: 'John Smith',
  position: 'Sales Manager'
};
const name = 'position';
const { [name]: removedProperty, ...employeeRest } = employee;
console.log(employeeRest); // { name: 'John Smith' }

const {property,...rest} = oldObj //...rest is the new obj
// delete formData.Balance;
// assign the key regex to the variable _ indicating it will be unused
const { Balance: _, ...formDataNew } = formData;

To remove a property from an object in TypeScript, mark the property as optional on the type and use the delete operator. You can only remove properties that have been marked optional from an object.
name?: string; // 👈️ marked optional
delete obj['name'];

In Typescript, If you try to remove a property that has not been marked as optional from the object, you'd get an error.


http://localhost:8081/api/clearing/invoices -- clearingAPI

Endeavor to pay the yearly renewal fee of #5,000 to finelib.com account
details that are given below:

Name: Finelib Technologies Ltd
A/C: 101 327 4198
Bank: Zenith Bank
admin@finelib.com
Amount: #5,000
https://www.finelib.com/listing/Logic-Version/85041/ will be due on
2/8/2022.
Local calls within Nigeria:
070-57728249
081-33802232

Public Property ID As String
The above format is called an Auto-Implemented property. 
You can access the backing field of an auto implemented property using the name:
_[PropertName]

 Private newPropertyValue As String
    Public Property ID() As String
        Get
            Return newPropertyValue
        End Get
        Set(ByVal value As String)
            newPropertyValue = value
        End Set
    End Property

Module Module1
    Sub Main()
        Dim item As Example = New Example()

        ' Step 1: set property.
        item.Number = 4

        ' Step 2: get property.
        Console.WriteLine("NUMBER: {0}", item.Number)
    End Sub
End Module

var adminApiConfiguration = Configuration.GetSection(nameof(AdminApiConfiguration)).Get<AdminApiConfiguration>();
services.AddSingleton(adminApiConfiguration);

TokenUrl = new Uri($"{adminApiConfiguration.IdentityServerBaseUrl}/connect/token"),

li{
   list-style: none;
   display: inline-block;
}

ASP.NET Core Web API Authentication and Authorization with JWT (Json Web Token) -- 6:30 , 23:10
https://www.youtube.com/watch?v=kM1fPt1BcLc&t=56s
--------------------------------------------------------------

var identity=HttpContext.User.Identity as ClaimsIdentity ;
if(identity!=null)
{
   var userClaims=identity.Claims;
}

return OK($"Hi {currentUser.userName}, how do you do");

vscode: how to move or nav to previous cursor position
On Windows:
Alt + ← // navigate back
Alt + → // navigate forward

subject (sub) in jwt is like userID

  valuesString: string='';
  valuesArray: number[] = [];

  PerformAddition() {
    var valuesStr = this.valuesString.split(' '); //split based on ' ' and store on a variable
    this.valuesArray = valuesStr.map((x) => parseInt(x)); //convert each item to int

    //perform your computation
    var results = this.valuesArray[0] - this.valuesArray[1];
    console.log(results);
  }

Audience  is the api
Audience (aud) - The "aud" (audience) claim identifies the recipients that the JWT is intended for. Each principal intended to process the JWT must identify itself with a value in the audience claim. If the principal processing the claim does not identify itself with a value in the aud claim when this claim is present, then the JWT must be rejected.

The audience of a token is the intended recipient of the token.
The audience value is a string -- typically, the base address of the resource being accessed, such as https://contoso.com.

The client_id in OAuth refers to the client application that will be requesting resources from the Resource Server.

url encoder/decoder -- meyerweb.com
1231440 = super saver => PRIVATE CLIENTS

Not all code paths return a value.
soln: 'return' keyword or function or block does not return value eg return false is wrong istead just 'return' is ok

var authSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(_configuration["JWT:Secret"]));


<div ng-class="[{true: 'class1'}[true], {true: 'class2 class3'}[true]]"></div>
<div ng-class="[class1, class2]"></div>
<div 
  [className]="isActive ? 'active' : 'inactive'">
</div>
<div [ngClass]="{'extra-sparkle': isDelightful}">
<div [class.extra-sparkle]="isDelightful">
<div [ngClass]="{'extra-sparkle': isDelightful}">

<div [ngStyle]="{'background-color':person.country === 'UK' ? 'green' : 'red' }"></<div>


<ul>
    <li *ngFor="let item of items; let i = index" [attr.data-index]="i">
        {{item}}
    </li>
</ul>

How to Remove Array Duplicates in ES6
const array = ['🐑', 1, 2, '🐑', '🐑', 3];
// 1: "Set"
[...new Set(array)]; //in es6, Set is a data object
or
// Step 1
const uniqueSet = new Set(array);
// Set { '🐑', 1, 2, 3 }
// Step 2
const backToArray = [...uniqueSet];
// ['🐑', 1, 2, 3]
you can use spread operator to convert an obj to array -- arr=[...{1,2,3}]
Convert Set to an Array using Array.from
Alternatively, you can also use Array.from to convert a Set into an array:
const array = ['🐑', 1, 2, '🐑', '🐑', 3];
Array.from(new Set(array));
// ['🐑', 1, 2, 3]

// 2: "Filter"
array.filter((item, index) => array.indexOf(item) === index);

Retrieve duplicate values from array
const array = ['🐑', 1, 2, '🐑', '🐑', 3];
array.filter((item, index) => array.indexOf(item) !== index);
//'🐑', '🐑'

listOfTags.filter((tag, index, array) => array.findIndex(t => t.color == tag.color && t.label == tag.label) == index);

https://localhost:44303/signin-oidc
http://localhost:8088/signout-oidc
http://localhost:8088/signin-oidc
http://localhost:8090/
JWT is a middleware
remove del butt from billing
remove edit butt from detls

Interceptor is a special Angular Service that can be used to intercept all the request and response calls and modify them to our requirement.
Interceptors allow us to intercept incoming or outgoing HTTP requests using the HttpClient. They can handle both HttpRequest as well as HttpResponse.

By intercepting the Http request, we can modify or change the value of the request, and by intercepting the response, we can do some predefined actions on a particular status code or message.

Most interceptors transform the outgoing request before passing it to the next interceptor in the chain(if there are multiple interceptors), by calling the next.handle(transformedReq).

We can transform the response stream by applying additional RxJS operators on the stream returned by the next.handle().

intercept(request: HttpRequest<any>, next: HttpHandler):Observable<HttpEvent<any>> {
        // add auth header with jwt if account is logged in and request is to the api url
        const account = this.accountService.accountValue;
        const isLoggedIn = account?.token;
        const isApiUrl = request.url.startsWith(environment.apiUrl);
        if (isLoggedIn && isApiUrl) {
            request = request.clone({
                setHeaders: { Authorization: `Bearer ${account.token}` }
            });
        }

        return next.handle(request);
    }

You can define more than one Interceptor. The Interceptors are called in the order they are defined in provider metadata.

intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>
The first argument is HttpRequest.
The HttpRequest is an outgoing HTTP request which is being intercepted. It contains URL, method, headers, body, and other request configuration.

The HttpRequest is an immutable class. Which means that we can’t modify the original request. To make changes we need to clone the Original request using the HttpRequest.clone method

The second argument is httpHandler
The HttpHandler dispatches the HttpRequest to the next Handler using the method HttpHandler.handle. The next handler could be another Interceptor in the chain or the Http Backend.

https://www.tektutorialshub.com/angular/angular-httpclient-http-interceptor/


In the method body, you can modify the HttpRequest object. Once done, you can call the HttpHandler.handle method of the HttpHandler with the HttpRequest object. The HttpHandler.handle method invokes the next interceptor or sends the request to the backend server.

intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {
    //Do whatever you want to do with the Request
    console.log(req);
    return next.handle(req);
}

from above, We are able to Intercept the request and log it to the console in the above example. Now we will modify the HTTP Headers and Custom Headers.

const listOfTags = [
    {id: 1, label: "Hello", color: "red", sorting: 0},
    {id: 2, label: "World", color: "green", sorting: 1},
    {id: 3, label: "Hello", color: "blue", sorting: 4},
    {id: 4, label: "Sunshine", color: "yellow", sorting: 5},
    {id: 5, label: "Hello", color: "red", sorting: 6},
]
const unique = [... new Set(listOfTags.map(tag => tag.label)]

Late one, but I don't know why nobody suggests something much simpler:
listOfTags.filter((tag, index, array) => array.findIndex(t => t.color == tag.color && t.label == tag.label) == index);


function getUnique(arr, comp) {

                    // store the comparison  values in array
   const unique =  arr.map(e => e[comp])

                  // store the indexes of the unique objects
                  .map((e, i, final) => final.indexOf(e) === i && i)

                  // eliminate the false indexes & return unique objects
                 .filter((e) => arr[e]).map(e => arr[e]);

   return unique;
}
console.log(getUnique(arr,'id'));

Xojo => vb6
€

RENEW DOMAIN:
DOMAIN:logicversion.ng WILL EXPIRE ON 2022-09-01 . 
https://my.registeram.com/index.php?/clientarea/

access token validation --  https://www.youtube.com/watch?v=rNqgxAqGZJ8&t=1331s --coding with julian (16th min)
add idsvr4 access token validation to web api tru nuget package
specify the authority and apiName (apiResource) as stated in the idsvr4 db
in the controller, add authorize attribute

buy tablet from konga
change env variables for prod
how to change environment variables at runtime in angular
handheld barcode scanner for warehouse
stacking/location module -- wms

angular: one or more validation errors occurred
soln: check your control validations are ok, values are valid based on their models. And in the web api, check POSTed object/values tallies with  the parameter model. eg an array param model in api expects an array of its type (not just an object) eg BillingDetails[] billingDetails api model

function executeListenerWithErrorHandling(lView, context, listenerFn, e) {
    try {
        profiler(6 /* OutputStart */, context, listenerFn);
        // Only explicitly returning false from a listener should preventDefault
        return listenerFn(e) !== false;
    }
    catch (error) {
        handleError(lView, error);
        return false;
    }
    finally {
        profiler(7 /* OutputEnd */, context, listenerFn);
    }
}

How to Troubleshoot JWT Token Authentication Errors in .NET Core Applications
http://andrewhalil.com/2020/08/15/troubleshooting-jwt-token-authentication-within-your-net-core-applications/
Issue: No authentication header populated in Request.Headers
Below we see an empty request header during debugging:
To fix this issue we will need to enable the JWT middleware by adding:
services.AddAuthentication(JwtBearerDefaults.AuthenticationScheme). 
to ConfigureServices() in startup.cs.

Issue: 401 Unauthorized : WWW-Authenticate: Bearer
For this issue we have two possibilities:
    1. The token is invalid or expired.
In this case we generate a new JWT bearer token and pass it into the HTTP GET or POST request Header collection.

    2. The authorization attribute is misconfigured.
We will get the above error when we declare our web API method as follows:
	
[HttpGet("api/[controller]/List")]
[Authorize]
public async Task<List<BookViewModel>> List()
{
}

To rectify the authentication problem, we declare the method as follows:

[HttpGet("api/[controller]/List")]
[Authorize(AuthenticationSchemes = JwtBearerDefaults.AuthenticationScheme)]
public async Task<List<BookViewModel>> List()
{}
Another resolution is to ensure that the issuer signing key set in the startup.cs method ConfigureServices() is converted from Base 64. This is mentioned in the next issue.

Issue: www-authenticate -> Bearer error=”invalid_token”, error_description=”The signature is invalid”
To resolve, we check we have set the issuer signing key:
	
services.AddAuthentication(JwtBearerDefaults.AuthenticationScheme)
.AddJwtBearer(
       options =>
       {
        options.TokenValidationParameters = new TokenValidationParameters
              {
                ValidateIssuerSigningKey = true,
                     IssuerSigningKey = new SymmetricSecurityKey(
                        Convert.FromBase64String(
                        Configuration.GetSection("AppSettings:Secret").Value)), 
                     ValidateIssuer = false,
                     ValidateAudience = false
            };
});

If we have used a string encoding different from our JWT identity provider then the token will be invalid.

Issue: www-authenticate ->Bearer error=”invalid_token”, error_description=”The token is expired”
With this error we know what the problem is: our token has expired.
In this case we just obtain a new access token by calling our authentication method on our identity service.

To debug and parse errors from HTTP responses in your C# code here are some handy tips:
Debug your client.SendAsync() or client.PostAsync() calls
Add breakpoints to your client.SendAsync() and  client.PostAsync() calls.

Add a watch for the property:
response.Headers.WwwAuthenticate.ToString()

var index = peoples.map(function(o) { return o.attr1; }).indexOf("john");
var index = peoples.findIndex(p => p.attr1 == "john"); //new way

issuer signing key  
apmt cal mfst and cost in xls files
add auth project to clearingAPI
asp.net core: debug model binding -- 
validate JWT token in startup.cs file -- 

sysDate = Format(getSysDateTime, "Short Date")
  
<span class="fill-remaining-space"></span>
class="form-group mb-3 float-end"

A web api contains one or more wndpoints
The example API has just three endpoints/routes

AuthGuard is used to protect the routes from unauthorized access in angular.

What is Route Guards. Angular route guards are interfaces provided by angular which when implemented allow us to control the accessibility of a route based on condition provided in class implementation of that interface. Five types of route guards are provided by angular : CanActivate. CanActivateChild.

if (error.status === 401) {
          // refresh token
        } 

Client-side errors
On the client-side, when something unexpected happens, a JavaScript Error is thrown. It has two important properties that we can use.
message — Human-readable description of the error.
stack — Error stack trace with a history (call stack) of what files were ‘responsible’ for causing that Error.
Typically, the message property is what we show the user if we don’t write our error messages.

    getClientMessage(error: Error): string {
        if (!navigator.onLine) {
            return 'No Internet Connection';
        }
        return error.message ? error.message : error.toString();
    }

//throw error;   //You can also throw the error to a global error handler
/forbidden
http://localhost:4200/forbidden
403 - ACCESS DENIED
You don't have the permission to access this resource.

https://www.tektutorialshub.com/angular/angular-resolve-guard/
   constructor(private route: ActivatedRoute){
   }
 
  ngOnInit() {
      this.products=this.route.snapshot.data['products'];
   }
Remember Resolve runs after all other guards are executed

Router
A service that provides navigation among views and URL manipulation capabilities.


  getRepos(userName: string): Observable<repos[]> {
    return this.http.get<repos[]>(this.baseURL + 'usersY/' + userName + '/repos')
      .pipe(
        catchError((err) => {
          console.log('error caught in service')
          console.error(err);
 
          //Handle the error here
 
          return throwError(err);    //Rethrow it back to component
        })
      )
  }

if (error instanceof HttpErrorResponse) {
    if (error.error instanceof ErrorEvent) {
        console.error("Error Event");
    } else {
        console.log(`error status : ${error.status} ${error.statusText}`);
        switch (error.status) {
            case 401:      //login
                this.router.navigateByUrl("/login");
                break;
            case 403:     //forbidden
                this.router.navigateByUrl("/unauthorized");
                break;
        }
    } 
} else {
    console.error("some thing else happened");
}
return throwError(error);
 

Catching Errors in HTTP Request
We can catch the HTTP Errors at three different places.

    Component
    Service
    Globally

    catch(Exception ex) C# api
    {
        return new HttpResponseMessage(HttpStatusCode.BadRequest);
    }

Whenever the error occurs in an HTTP operation, the Angular wraps it in an httpErrorResponse Object before throwing it back
We catch the httpErrorResponse either in our component class or in the data service class or globally. The Global HTTP error handling is done using the Angular HTTP Interceptor.

The error property of the HttpErrorResponse contains the underlying error object. It also provides additional context about the state of the HTTP layer when the error occurred.

The HTTP errors fall into two categories. The back end server may generate the error and send the error response. Or the client-side code may fail to generate the request and throw the error (ErrorEvent objects).

The server might reject the request for various reasons. Whenever it does it will return the error response with the HTTP Status Codes such as Unauthorized (401), Forbidden (403), Not found (404), internal Server Error (500), etc. The Angular assigns the error response to error property of the HttpErrorResponse.

The client-side code can also generate the error. The error may be due to a network error or an error while executing the HTTP request or an exception thrown in an RxJS operator. These errors produce JavaScript ErrorEvent objects. The Angular assigns the ErrorEvent object to error property of the HttpErrorResponse.

We will use the regular error handling approaches such as handling errors with RxJS operators catchError and throwError and managing errors with HttpClient and HttpInterceptor.

Handle Errors in Angular with HttpClient and RxJS
https://www.positronx.io/angular-error-handling-tutorial-with-examples/
The simplest way to handle errors in Angular is to use Angular’s HttpClient service along with RxJS operators throwError and catchError. Http request is made, and it returns the data with a response if anything wrong happens then it returns an error object with error status code.

Error Handling with HttpClient and HttpInterceptor
To handle errors properly, HttpInterceptor is the best way, and It intercepts Http request. It helps in converting http request before sending and after getting the response from the server. It is better used for updating data format, setting up headers, adding auth tokens, etc. HttpInterceptor service offers a better way to handle errors in an Angular app systematically.


CanActivate is a router guard that is executed to check if the router should navigate to the route and the Resolver is a data provider, ...

What is AuthGuard in Angular?
AuthGuard is used to protect the routes from unauthorized access in angular. How AuthGuard Works? Auth guard provide lifecycle event called canActivate. The canActivate is like a constructor. It will be called before accessing the routes.3 Nov 2021

What is Angular interceptor?
The Angular HTTP Interceptor is introduced along with the new HTTPClientModule. The Interceptor helps us to modify the HTTP Request by intercepting it before the Request is sent to the back end. The Interceptor can be useful for adding custom headers to the outgoing request, logging the incoming response, etc.

What are guards and resolvers in Angular?
The Angular Resolve Guard or Angular Resolvers allow us to load certain data before we navigate to a Route.19 Mar 2022

What is an Angular resolver?
So what is Angular Resolver? Angular Route Resolver is used for pre-fetching some of the data when the user is navigating from one route to another. It can be defined as a smooth approach for enhancing user experience by loading data before the user navigates to a particular component.29 Sept 2021

an angular guard is implemented as a service
	.pointerCursor
	{
	   cursor: pointer;
	}

	.headerLogo
	{
	   height: 50px;
	}
	
this will make the navbar color white -- in style.css
	.navbar a
	{ 
	  color: white!important
	} 
mapping of url to component is done tru routing
/authenticate

update SmartHR..AppDefaults set IDVal =1 where ID ='Roster_Exempt_GroupID' 

c#: how to validate jwt token in asp.net core web api

https://localhost:7118/.well-known/openid-configuration
  {
    path: 'adminPanel',
    component: AdminPanelComponent,
    canActivate: [AuthGuard],
    data: { roles: ['Admin'] },
  },

entropy => overview example formula etc
Validate signature of the token => ValidateIssuerSigningKey = true
using Microsoft.IdentityModel.Tokens;
using System.IdentityModel.Tokens.Jwt;
using System.Security.Claims;

[Authorize(Roles = "Manager,Admin")]

AllowAnonymous attribute
http://localhost:5000/swagger/index.html

The default asp.net core Identity templates require:
    Passwords must be at least 6 characters
    Passwords must have at least one lowercase ('a'-'z')
    Passwords must have at least one uppercase ('A'-'Z')
    Passwords must have at least one digit ('0'-'9')
    Passwords must have at least one non alphanumeric character

You can easily disable password rules in ASP.NET Core Identity by disabling the composition rules.
You can similarly set the minimum length in ASP.NET Core Identity using the options pattern, e.g. options.Password.RequiredLength = 10

sapid iis STATUS 	ON  
Server Name 	win5201.site4now.net
IIS Site Name 	omagebi-001-site2
Username 	omagebi-001
Password 	******** [Modify] 

firebase returns realtime stream
When you create an application in IIS, the application's path becomes part of the site's URL.
A virtual directory is a directory name (also referred to as path) that you specify in IIS and map to a physical directory on a local or remote server. The directory name then becomes part of the application's URL

ng --version
npm view @ng-select/ng-select versions
npm install express@4.16.1
npm install @ng-select/ng-select@8.3.0
npm uninstall @ng-select/ng-select@8.3.0

http://sapidholdingsonline.com/clearing/
http://sapidholdingsonline.com/reports.aspx
http://sapidholdingsonline.com/apix/api/authenticate/GetAllRoles
http://sapidholdingsonline.com/sapi/api/clearing/Invoices
http://sapidholdingsonline.com/testingapi/api/clearing/Invoices

https://www.smarterasp.net/support/kb/a2016/how-to-set-the-virtual-directory-from-your-hosting-account.aspx?KBSearchID=987587

http://localhost:8081/api/clearing/invoices
http://localhost:8099/reports.aspx
http://localhost:8082/ -- authAPI
http://192.168.95.156 -- nokia
https://192.168.0.169/ -- swiftNG 
http://192.168.0.169/
ipconfig/all

Virtual directories and applications are now separate objects, and they exist in a hierarchical relationship in the IIS configuration schema. Briefly, a site contains one or more applications, an application contains one or more virtual directories, and a virtual directory maps to a physical directory on a computer.14 May 2020

Uploading files from control panel and filezilla are the same. After you update files from filezilla, did you restart the application pool or clear your browser check before you check the update part. For the asp.net core applications, if you update the .json files, you will need to restart your site from Control Panel, to make your app read the new configurations from the updated .json file.

<input type="text" name="city" list="citynames">
<datalist id="citynames">
  <option value="Boston">
  <option value="Cambridge">
</datalist>

restart the application pool or clear your browser check before you check the update part. For the asp.net core applications, if you update the .json files, you will need to restart your site from Control Panel, to make your app read the new configurations from the updated .json file

DepartmentId int foreign key references Departments(Id)

In computer networking, host means a “server”. Just like you can put a website on the internet by hosting it on a server


CrystalReportViewer1.PDFOneClickPrinting = false;

Please try using the report object instead the viewer, you can use its PrintToPrinter property in other to print and using the viewer control for just viewing (maybe adding another print button for that matter).

So, if you want to print the content of your page (HTML) then using simple javascript window.print() and for other more advanced scenarios (like printing PDF, DOC, XLS, or raw printer commands) then you might need some help from an external tool.

You can programmatically invoke the print dialog through the CrystalReportViewer.PrintReport method. -- winform

Dim _rpt As CrystalDecisions.CrystalReports.Engine.ReportDocument = Nothing
                Try
                    _rpt = CrystalReportHelper.GetReport(HttpContext.Current.Server.MapPath("~/") & "Kitchen.rpt", Params)
                    Dim strFileName As String = IO.Path.GetTempPath & "Kitchen.pdf"
                    _rpt.ExportToDisk(CrystalDecisions.[Shared].ExportFormatType.PortableDocFormat, strFileName)
                    _rpt.PrintOptions.PrinterName = Database.GetLoookup("Value", "KITCHEN_1", "Description", "_Listings", True)
                    _rpt.PrintToPrinter(1, 1, 1, 1)
                    Msg.ShowMessage("ការកុម្មង់ត្រូវបានបញ្ជូនទៅផ្ទះបាយ!", MsgTitle)
                Catch ex As Exception
                    Msg.ShowMessage("ការកុម្មង់មិនត្រូវបានបញ្ជូនទៅផ្ទះបាយទេ!" & vbCrLf & ex.Message, MsgTitle)
                Finally
                    _rpt.Close()
                    _rpt.Dispose()
                End Try
  

<a href="https://www.google.com">Click Here to go google.com</a>
import { Router, ActivatedRoute } from '@angular/router';
constructor(private router: Router, private route: ActivatedRoute,) { }

<button class="btn btn-danger" (click)="onSubmit()">Click Here to submit form</button>
onSubmit() {
    this.router.navigate(['paymentmethod.htm'])
  }
when you click on the button , it goes to the resolver and then redirects from there.

Uploading files from control panel and filezilla are the same. After you update files from filezilla, did you restart the application pool or clear your browser check before you check the update part. For the asp.net core applications, if you update the .json files, you will need to restart your site from Control Panel, to make your app read the new configurations from the updated .json file.

how do i upload folders tru file manager in my cp
it only allows files onlyi have some nested folders to upload
soln: You can make a zip file of your local files then upload it via CP-->File manager.

Request.QueryString
logging in asp.net core web api
log4net
000002340
http://localhost:8099/reports.aspx
http://sapidholdingsonline.com/clearing/
http://sapidholdingsonline.com/api/clearing/
http://sapidholdingsonline.com/clearing/reports/margin.aspx
http://sapidholdingsonline.com/clearing/reports/reports.aspx

webDeploy
Service URL 	https://win5201.site4now.net:8172/MsDeploy.axd?site=omagebi-001-site2
Site Name 	omagebi-001-site2
Username 	omagebi-001
Password 	******** [Modify]
publish settings already downloaded: site2.PublishSettings in downl folder

Can I run multiple ASP.NET Core APPs?
Yes, you can do it as long as you use Out-of-process hosting model in all your core apps. 

db_a66d0c_clearing.bak
Data Source=SQL5090.site4now.net;Initial Catalog=db_a66d0c_clearing;User Id=db_a66d0c_clearing_admin;Password=khide@123
instance/server Name: sql5090.site4now.net => Logic

db_a66d0c_auth.bak
Data Source=SQL5057.site4now.net;Initial Catalog=db_a66d0c_auth;User Id=db_a66d0c_auth_admin;Password=khide@123
sql5057.site4now.net




pls I need to:
1)  deploy 3 web APIs (one in .net6 url: sapidholdingsonline.com/api/clearing, the other in .net5 url:  sapidholdingsonline.com/api/auth
 and the last in asp.net 4.72) url: sapidholdingsonline.com/api/reports
2) deploy angular 13 app (frontEnd)  eg url: sapidholdingsonline.com/clearing
3) deploy asp.net webform
pls help me create the necessary special folders for them so i can deploy from vs  2019 and filezilla

Cloudflare Login Info
Login Name: omagebi@smarterasp.net
Password: 101128744
URL: http://www.cloudflare.com


<ajaxtoolkit:FilteredTextBoxExtender  
   ID="fteDOB"    
   runat="server"    
   TargetControlID="txtDOB"    
   FilterMode="ValidChars"    
   ValidChars="0123456789-/:">    
</ajaxtoolkit:FilteredTextBoxExtender> 

C:\Users\Administrator\source\repos\WebSites\SmartDoctorVB\SmartDoctor\Images

You can use HttpContext.Request.Query directly (which is useful in many scenarios):
string name = HttpContext.Request.QueryString["name"];
Code language: C# (cs)

This can either return null (if the key is missing), a single string, or a comma-separated string (i.e. “Dune,Matrix”) if there are multiple values for the key.

adjust rpt for ebony -- cons & appt
send 3k for security
pass param to crpt project website ver 4.0 -- SprocName, Params,RptName
redirect crpt site from angular

changed AllowedOrigin b4 publish
publish to iis -- all APIs and angular+ crpt site
deploy on sat
Ignore X-Frame headers -- chrome and ff extensions


1. CTRL+SHIFT+ENTER from the RUN menu will run as ADMIN
2. START --> PROGRAMS --> ACCESSORIES --> Right-click on command prompt and "run as administrator"

data = new DataSet();
data.ReadXml(reader);

Cursor.Current = Cursors.WaitCursor
Cursor.Current = Cursors.Default

Hello Rajan,
Find as an attached file , the Terms of Reference (TOR) as required by the client . Kindly send a cost requirement for development .

GT bank *737*6*1# -- acct bal
string connectString = System.Configuration.ConfigurationManager.ConnectionStrings["LinqToSQLDBConnectionString"].ToString();

With LINQ, We can easily retrieve data from any object that implements the IEnumerable<T> interface and any provider that implements the IQueryable<T> interface.

<button type="button" class="btn btn-primary-outline pull-right" (click)="btnClick();"><i class="fa fa-plus"> 


<iframe src="https://stackoverflow.com" height="100%" width="100%"  target="_self"></iframe>
Use window.open(). It's pretty straightforward !
In your component.html file-
<a (click)="goToLink("www.example.com")">page link</a>
In your component.ts file-
goToLink(url: string){
window.open(url, "_blank");
}
Instead of using "_blank" used "_self"
window.open will open a new tab in the browser. But I want to add the page content in one of html element in my application

<div >
    <iframe id="companyFrame" [src]="sourceURL | safe" class="frame"> 
    </iframe>
  </div>
-----------------------------------------
  @Pipe({ name: "safe" })
  export class SafePipe implements PipeTransform {
  constructor(private sanitizer: DomSanitizer) {}
  transform(url) {
    return this.sanitizer.bypassSecurityTrustResourceUrl(url);
   }
  }

C:\Program Files (x86)\SAP BusinessObjects\Crystal Reports for .NET Framework 4.0\Common\SAP BusinessObjects Enterprise XI 4.0\win32_x86\dotnet\CrystalDecisions.CrystalReports.Design.dll
v4.0.30319 13.0.4000.0

<div class="card" style="width: 18rem;">
  <img src="..." class="card-img-top" alt="...">
  <div class="card-body">
    <h5 class="card-title">Card title</h5>
    <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
    <a href="#" class="btn btn-primary">Go somewhere</a>
  </div>
</div>

<div class="card">
  <div class="card-header">Header</div>
  <div class="card-body">Content</div>
  <div class="card-footer">Footer</div>
</div>

add logout
fetch AllowedOrigin from db or appSettings include 
https://logicversion.ng
http://sapidholdingsonline.com 

move nav bar to home comp and implement child route -- login and logout ang 5 -- codAffection
datatable, nav tabs -- codevolution
tabbed card bootstrap

Asp.Net Core Web API - Role Based Authorization in Angular 7 with Identity Role
Angular Authentication_ Role Based Authorization
http://schemas.microsoft.com/ws/2008/06/identity/claims/role
http://schemas.microsoft.com/ws/2008/06/identity/claims/role: [
    "Admin",
    "User"
  ],
http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name: "femi9"
atob(token.split('.')[1])
JSON.parse(atob(data.token.split('.')[1]))
 
                ValidIssuer = "https://www.jerriepelser.com",
                ValidAudience = "blog-readers",
                IssuerSigningKey = new SymmetricSecurityKey(keyAsBytes)

send prop to new smtDr client
GetAllRoles
GetUserClaims

To delete records with Linq2Sql
CustomerDataContext ctx = new CustomerDataContext("connection string");
var customers = ctx.Customers.Where(c => c.Name == "david");
ctx.Customers.DeleteAllOnSubmit(customers);
ctx.SubmitChanges();

LINQ to SQL
// There are a couple ways to add value to a list:
numbersList.Add(6); // Adds one value to the end of the list -> {1, 2, 3, 4, 5, 6}
numbersList.AddRange(numbersArr); // Adds a whole collection to the end of a list // -> {1, 2, 3, 4, 5, 1, 2, 3, 4, 5}

LINQ is not for deleting or modifying - it is for querying data. With LINQ you can select data which should be deleted, and then delete those data manually (e.g. in foreach loop or with ForEach list extension):
var query = dTable.AsEnumerable().Where(r => r.Field<string>("col1") == "ali");
foreach(var row in query.ToList())
   row.Delete();

c# delete rows from datatable linq
for(int i = dtPerson.Rows.Count-1; i >= 0; i--)
{
    DataRow dr = dtPerson.Rows[i];
    if (dr["name"] == "Joe")
        dr.Delete();
}
dtPerson.AcceptChanges();

delete all rows from table linq
context.Entity.RemoveRange(context.Entity.ToList());
context.SaveChanges();

            IdentityResult result = manager.Create(user, model.Password);
            manager.AddToRoles(user.Id, model.Roles);
            return result;

Subscription' is deprecated + angular
http://localhost:61955/api/Authenticate/registerAdmin
NB: All feature modules shld be in imports array b4 AppRoutingModule in the root module -- pt 33 Ang 6 tut venkat

circular dependency in di detected for authguard
Break this loop (or circle) of dependency to resolve this error. This most commonly means removing or refactoring the dependencies to not be reliant on one another
Soln: i simply created another gaurd and gave it to DataEntry Route

NullInjectorError: No provider for UserService!
You are trying to use a service that is not listed 
in providers of your AppModule. 
Add the service to a providers list to make it work.
To find which is missing run this command:
ng serve --prod --optimization=false

error: 'router-outlet' is not a known element:
ng g m auth/auth --flat  --routing --module=app
ng g g authMain --flat --module=app

http://localhost:61955/api/
implement auth using OWIN
OWIN acts as a middleware btw app and web server
install package: Microsoft asp.net identity OWIN
		 owin.host in nuget search
 		 owin.cors

Type 'null' is not assignable to type 'string'.
The "Type 'string | null' is not assignable to type string" 
soln: add non null assertion (!) b4 assigning to a var

Fix - Not all code paths return a value in TypeScript #// 
👉️ returning from forEach callback is a mistake //remark it

set noImplicitReturns to false in your tsconfig.json file.
{
  "compilerOptions": {
    "noImplicitReturns": false,
  }
}

Function lacks ending return statement and return type does not include 'undefined'
soln: add return stmt to end of fn

 bootstrap class ml-auto moves nav item to the right as shown below 
 <div class="collapse navbar-collapse" id="collapsibleNavbar">
    <ul class="navbar-nav">
        <li class="nav-item">
            <a class="nav-link" asp-controller="home" asp-action="index">List</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" asp-controller="home" asp-action="create">Create</a>
        </li>
    </ul>
    <ul class="navbar-nav ml-auto">
        <li class="nav-item">
            <a class="nav-link" asp-controller="account" asp-action="register">
                Register
            </a>
        </li>
    </ul>
</div>
to add asp.net core Identity tables, 
add identity and entityframeworkStores services in startup.cs 
and then run 
PM> add-migration <anyName> in console then apply it to the database,
PM> Update-Database


buy speakers for roster
update smartHR..AppDefaults set IDVal=43 where id='Roster_OFF_DUTY_ShiftID'
shiftName=(OFF_DUTY)
qryEmpForRoster

hi, good job
i tried to fetch data from my sql server database
its giving error at reportDoc.SetDatasouce;
error: failed to load database information in vs 2019
please what do i do

CrystalDecisions.CrystalReports.Engine
CrystalDecisions.ReportSource
CrystalDecisions.Shared
CrystalDecisions.Web
CrystalDecisions.ReportAppServer.ClientDoc

https://localhost:44344/api/Reports/Billing/000002341

http://localhost:8088/ -- AdminUI -- https://localhost:44303
http://localhost:8089/ -- API
http://localhost:8090/ -- STS
http://localhost:8090/connect/token

Content creators 
Dependent Assembly web api web.config
send roster to w/app
add print butt to roster page


remove offduty days from clockin qry 
vwRosterClockInOrOut
(Roster_OFF_DUTY_ShiftID) roster shift
(OFF_DUTY)
isMgtRole

C:\Users\Administrator\source\repos\Maritime\Sapid\Clearing\src\app\app.component.html
in vscode terminal, when folder path is too long, use 
prompt $$ to shorten it

card component with tab control --  materialize css
style="background-image: url('./assets/images/SapidInTheCloud2.png');"

<style>
body {
  background-image: url('img_girl.jpg');
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-size: cover;
}
</style>



routing guards and login -- security
render rdlc in angular
smartDoctor webform -- crystal rpt
look at webform -- sapid clearing
check rdlc files in smartScotts


  createEmployee(employee: Employee): Observable<Employee> {  
    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };  
    return this.http.post<Employee>(this.url + '/InsertEmployeeDetails/',  
    employee, httpOptions);  
  } 

Download a Nuget package for CORS
Add namespace  to WebApiConfig.cs class in App_Start folder in Web API project
    using System.Web.Http.Cors;  
    var cors = new EnableCorsAttribute("*","*","*");
   //origins,headers,methods   
    config.EnableCors(cors);  

C:\Program Files (x86)\SAP BusinessObjects\Crystal Reports for .NET Framework 4.0\Common\SAP BusinessObjects Enterprise XI 4.0\win64_x64

I have re-installed crystal report runtime with admin privilege crdb_adoplus.dll is installed. And report is opening perfectly.

In there is the install log, search for the file and see what it tells you.

If you have the 13.0400 version DLL of crystal reports in your project this will be the solution of your problem.

C:\Program Files (x86)\SAP BusinessObjects\Crystal Reports for .NET Framework 4.0\Common\SAP BusinessObjects Enterprise XI 4.0\win64_x64

<system.webServer>
    <modules runAllManagedModulesForAllRequests="true"/> 
</system.webServer>

https://localhost:44303/
https://localhost:44344/api/Reports/Billing/000002341
https://localhost:44344/Help/Api/GET-api-Reports-Billing-billNO

C:\Program Files (x86)\SAP BusinessObjects\Crystal Reports for .NET Framework 4.0\Common\SAP BusinessObjects Enterprise XI 4.0\win32_x86\dotnet\CrystalDecisions.ReportSource.dll
<HintPath>..\..\..\..\..\program files (x86)\sap businessobjects\crystal reports for .net framework 4.0\common\sap businessobjects enterprise xi 4.0\win32_x86\dotnet\CrystalDecisions.ReportAppServer.XmlSerialize.dll</HintPath>

CrystalDecisions.CrystalReports.Engine
Microsoft .NET Framework 4.7.2053.0

var teenStudentsName = from s in studentList
                       where s.age > 12 && s.age < 20
                       select new { StudentName = s.StudentName };
teenStudentsName.ToList().ForEach(s => Console.WriteLine(s.StudentName));

cr api
runtime ver :v4.0.30319
ver: 13.0.4000.0

parol
rt ver: v4.0.30319
ver: 13.0.4000.0

VwOrderDetail_Clone
SapidBillingEntities
vwOrderMarginAnalysisCurrent2
vwOrderDetails
https://localhost:44369/api/Reports/Billing/000002341 --crystalAPI

The clone is of the same Type as the original Array. The CopyTo() method copies the elements into another existing array. It copies the elements of one array to another pre-existing array starting from a given index (usually 0). Both perform a shallow copy .

Failed to load database information -- dotnetfx 4.72=>4.0 vs 2019
https://localhost:44369/api/Reports/Billing/000002341 --crystalAPI
https://www.c-sharpcorner.com/article/generating-crystal-report-in-web-api/

for ef6
Scaffold-DbContext 'Data Source=(localdb)\MSSQLLocalDB;Initial Catalog=Chinook' Microsoft.EntityFrameworkCore.SqlServer

call tracker app
KidsGuard Pro: Best For Android Monitoring.
formatNumber mtd -- invoice-detail-comp.ts

Total: this.service.InvoiceDetailsList.reduce((sum, curr) => {
  return sum + curr.subTotal; //sum=prev Value
}, 0),

diff btw ngClass and ngStyle
The ngClass directive allows you to dynamically set CSS classes on an HTML element by databinding an expression that represents all classes to be added.
The ngStyle attribute is used to change or style the multiple properties of Angular. You can change the value, color, and size etc.

NgClass & NgStyle are Angular Directives that allow us to conditionally apply one-to-many classes/styles to an element.21 Nov 2019

ng-style is used to interpolate javascript object into style attribute, not css class
Following directive will be translated to style="color:red"
ng-style="{color: 'red'}"

And ng-class directive translates your object into class attribute.
Following will be translated to class="deleted" when isDeleted variable is true.
ng-class="{'deleted': isDeleted}"

In ng-class you are loading a CSS class defined in some place, like Bootstrap. In ng-style you are setting the CSS style that you want that element has, example:

ng-style="{ 'background-color': person.email == selectedPerson.email ? 'lightgray' : ' '}" //background-color is a style

has-error is a class defined in somewhere that is composed by style(s):

ng-class="{ 'has-error’: !theForm.email.$valid, 'has-success':theForm.email.$valid}

These are different ways to use ngClass
<some-element [ngClass]="['first', 'second']">...</some-element>
<some-element [ngClass]="{'first': true, 'second': true, 'third': false}">...</some-element>
<some-element [ngClass]="stringExpr|arrayExpr|objExpr">...</some-element>
<some-element [ngClass]="{'class1 class2 class3' : true}">...</some-element>

2. Similarly with ngStyle you can do the following:
**< some-element [ngStyle]="{'font-style': styleExpr}">...</some-element>**

Your styleExpr can be anything that evaluates to a legal value for the attribute you are setting ,e.g. font-size in the example above

Alternatively,
****< some-element [ngStyle]="objExpr">...****
Where objExpr is an object containing key-value pairs of your style attributes e.g. { width: 40, margin: '2em' } etc.
Theoretically they both are different, but practically at some point they both become same
ngStyle is used to add style dynamically at run time and
ngClass is used to add some class dynamically at run time but class also holds some css content, so indirectly you are also adding css here dynamically

https://stackoverflow.com/questions/26919963/what-is-the-difference-between-ng-class-and-ng-style
-----------------------------------------

Get Flat Belly/Stomach In 7 Days - No Diet/No Exercise - 100% Natural Moringa Green Detox Diet Drink

npm i ngx-material-tools -- This is a set of custom directives lib for Angular Materials.
specify matInputCommified directive  in matInput elmt:
   <mat-form-field appearance="outline">
      <mat-label>Deposit Amount</mat-label>
      <input matInput
             matInputCommified
             formControlName="deposit"
             type="text"/>
    </mat-form-field>

https://www.npmjs.com/package/ngx-material-tools

xxx module does not appear to be an ngmodule class
soln: restart vsCode editor

ControlValueAccessor interface
<button [disabled]="myForm.invalid">
format numbers in input element -- angular
DecimalPipe {{pi | number:'4.1-5'}}  <!--output: '0,003.14159'-->
formatNumber(value, locale, digitsInfo) returns a string
import { LOCALE_ID, NgModule } from '@angular/core'; -- appModule
    In app.component.ts import formatNumber and LOCALE_ID
    inject LOCALE_ID as a public variable.
    In app.component.html show the local variable using string interpolation
    Serve the angular app using ng serve to see the output.


One or more validation errors occurred
soln: check if form is valid, then also default values saved back to db have no [] around them

formControlName="dtDate"
000002341

Therichpost -- friends

  dataSource : DataSource;
  displayedColumns = [
    "COLUMN1",
    "COLUMN2",
  ];

  columnClick(colName: string) {
    const colIndex = this.displayedColumns.findIndex(col => col === colName);
    
    if (colIndex >= 0) {
      this.displayedColumns.splice(colIndex, 1);
    } else {
      this.displayedColumns.push(colName);
    }
  }

Thank you for placing an order on Jumia!
Order Nº 1646356842 -- dp reader
Order nº 318795281-- projector delvd 14th jul 21
000002341
comp interaction within a component: @viewChild 
@viewChild Decorator helps to access dom element from the comp class
declare a ppty of type ElementRef and tell it which DOM element it has to ref or hold a ref to (via tempRefVariable eg #nameRef) . the viewChild Decorator does this for us. in the ngAfterViewInit mtd add:
ngAfterViewInit() {elementRef.nativeElement.focus();}
@ViewChild('tempRefVariable') elementRefppty : ElementRef;
mediumDate is ang default date format (date pipe)
{{valueDate | date: 'dd/MM/yyyy'}}
{{date | date: 'dd'}}/{{date | date:'MM'}}/{{date | date: 'yyyy'}}
new Date().toISOString().substring(0, 10);
formControlName="bDate | date:'yyyy-MM-dd'

call BedOpps consulting for marketers
@CurrDate = CONVERT(varchar(15),GETDATE() ,106) 
@CurrDate = CONVERT([varchar](10),getdate(),(23))
@CurrTime = CONVERT([varchar](15),CONVERT([time],getdate(),(0)),(100))

omagebi@yahoo.com
vbEmpty Date ="12:00:00 AM"
minimalistic => to minimize

vwBenefitsForGrid
vwPaycodeForPaddingForGrid
vwPayCodeForCombo
516015409 -- gab svr
if @Payroll_Allce_Percent_Based='YES' -- ie dependBasic=1
for payrol items in HR add dependbasic = 0 in qry -- shld not show

WHILE len(@otherpaycode)>0
BEGIN
	insert into #tmpcode (paycode) select left(@otherpaycode,4)
	set @otherpaycode = substring(@otherpaycode,5,len(@otherpaycode)-4)
END

Use_GrossSal_PCent_For_Deductions
73 199 -- processing sproc -- add gross sal to vwProcessingBasic
order for digitalPersona readers -- 2 from jumia
diff between salary and payroll

The company needs to make journal entry by debiting salary advances and credit cash to employees.
When the employees have completed the work for company, they need to reclass the advance salary to salary expense for the month

Salary Advance transaction will decrease the company cash when paid to employees and increase the advance salary which is the current assets on balance sheet. The company does not record expenses as they do not yet consume the employee work yet.

what is payslip
is a note given to an employee when they have been paid, detailing the amount of pay given, and the tax and insurance deducted.

salary accounting
Since Salaries are an expense, the Salary Expense is debited. Correspondingly, Salaries Payable are a Liability and is credited on the books of the company

It is a liability account. When a wage expense is recorded it is a debit to the wage expenses account, which requires a credit to the wages payable account for the same amount until the wage is paid to the worker.

Salary payable is classified as a current liability account under the head of current liabilities on the balance sheet. All the general rules of accounting are also applicable to this account.
Your payroll/Salary accounts have lists of both expenses and liabilities

returned outward error -- emel mPharma
every decision is worth a few moments of thought

if this.service.form.controls['billNO'].value=='***'
TS2345: AArgument of type 'string' is not assignable to parameter of type 'number'
soln: add plus sign to variable in ts or html file eg updateTotal(+qty.value,+price.value)
this.form.controls['your form control name'].value
<input type="text" onkeypress="return isNumberKey(event)" placeholder="Phone Number">
//this will accept only numbers from 0 to 9

Use_Payable_Invoice_Value_For_Voucher -- sets val for txtPrice -- finalApprv

"billNO": 000002344
2022-06-05 15:19:01.317
2022-06-05 00:00:00.000
WHERE @today=(CONVERT(varchar(15), bDate, 106) = CONVERT(varchar(15), GETDATE(), 106))
WHERE (bDate = CONVERT(varchar(15), GETDATE(), 106))
    "ID": 74309,
    "bDate": "2022-06-05T00:00:00",

https://mail.yahoo.com/d/folders/1/messages/169472 -- linkedIn
forceConsistentCasingInFileNames 
error: mat-form-field' is not a known element
soln: add the component eg InvoiceDetailsListComponent to declarations array in app.module

angular schematics
ng generate @angular/material:address-form address-form
ng generate @angular/material:table my-table
ng generate @angular/material:navigation navigation-demo
ng generate @angular/material:dashboard dashboard
ng generate @angular/material:tree tree-demo
ng generate @angular/cdk:drag-drop drag-drop-demo

NIN: 55564349681 -- 555-6434-9681
*737*51*74# -- lock acct. to unlock call GTConnect, Contact Center or branch
some recs not showing in closed jobs eg 000002500
add create user Acct to smartHR -- check existing hidden page

number.AsQueryable -- linqpad


multi-factor Authentication
test practice -- turing
full token lifecycle (refresh/expiration) 

A lambda expression => can be of any of two forms:
    Expression lambda that has an expression as its body:
    (input-parameters) => expression

    Statement lambda that has a statement block as its body:
    (input-parameters) => { <sequence-of-statements> }

To create a lambda expression, you specify input parameters (if any) on the left side of the lambda operator and an expression or a statement block on the other side.

Expression lambdas can be converted to the expression tree types, as the following example shows:
System.Linq.Expressions.Expression<Func<int, int>> e = x => x * x;
Console.WriteLine(e);
// Output:
// x => (x * x)

You can use lambda expressions in any code that requires instances of delegate types (Action,Func,Predicate etc) or expression trees, for example as an argument to the Task.Run(Action) method to pass the code that should be executed in the background. 
You can also use lambda expressions when you write LINQ in C#, 
as the following example shows:

int[] numbers = { 2, 3, 4, 5 };
var squaredNumbers = numbers.Select(x => x * x);
Console.WriteLine(string.Join(" ", squaredNumbers));
// Output:
// 4 9 16 25

ClearingAPI.Models.ApplicationDbContext

diff between statement and expression
>>> x + 2         # an expression
>>> x = 1         # a statement 
>>> y = x + 1     # a statement
>>> print y       # a statement (in 2.x)
>>>2

In programming language terminology, an “expression” is a combination of values and functions that are combined and interpreted by the compiler to create a new value ie returns a value (even if it returns a void )., as opposed to a “statement” which is just a standalone unit of execution and doesn't return anything.
A statement can be simple or complex and can contain 0 or more expression.

return new JsonResult(User.Claims.Select(c => new { c.Type, c.Value }));
DepartmentId int foreign key references Departments(Id)

Inner Join in LINQ
var result = (from p in Products join o in Orders on p.ProductId equals o.ProductId select new  
{  
    o.OrderId,  
        o.OrderNumber,  
        p.ProductName,  
        o.Quantity,  
        o.TotalAmount,  
        o.OrderDate  
}).ToList(); 


CREATE TABLE [dbo].[Orders](  
    [OrderId] [int] IDENTITY(1,1) NOT NULL,  
    [OrderNumber] [int] NULL,
    [CustomerId] [int] NULL,  
    [Quantity] [int] NULL,
    [OrderDate] [datetime] NULL,  
PRIMARY KEY CLUSTERED   
(  
    [OrderId] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]  
) ON [PRIMARY]  

A predicate is a fn used to test each element for a condition
Use var keyword to store anonymous types returned by an expression


Consent
The user is presented with a consent page if the authentication check succeeds. This page allows them to grant the client access to resources (identity or API). This is optional and can be disabled in the client settings configuration by adding the following property: RequireConsent = false.

https://localhost:64200/101-linq-samples/index.md
https://localhost:7118/api/Invoices 
https://localhost:64088/ -- try.net

http://localhost:8088/ -- AdminUI
http://localhost:8089/ -- API
http://localhost:8090/ -- STS
	
https://portal.azure.com/#home
Your GitHub credentials have been added to your Microsoft account (info@logicversion.ng).
lagos postal code : 100001
5338 5308 1273 0438 -- 5338530812730438
Babafemi Omage
BABAFEMI OMAGE
claims-based authorization
Claims requirements are policy based, the developer must build and register a policy expressing the claims requirements
// api user claim policy
services.AddAuthorization(options =>
{
   options.AddPolicy("ApiUser", policy => policy.RequireClaim(Constants.Strings.JwtClaimIdentifiers.Rol, Constants.Strings.JwtClaims.ApiAccess));
});
...

builder.Services.AddAuthorization(options =>
{
   options.AddPolicy("EmployeeOnly", policy => policy.RequireClaim("EmployeeNumber"));
});

builder.Services.AddAuthorization(options =>
{
    options.AddPolicy("Founders", policy =>
                      policy.RequireClaim("EmployeeNumber", "1", "2", "3", "4", "5"));
});

In this case the EmployeeOnly policy checks for the presence of an EmployeeNumber claim on the current identity.
Apply the policy using the Policy property on the [Authorize] attribute to specify the policy name;
C#
[Authorize(Policy = "EmployeeOnly")]
public IActionResult VacationBalance()
{
    return View();
}

If you have a controller that's protected by the [Authorize] attribute, but want to allow anonymous access to particular actions you apply the AllowAnonymousAttribute attribute.
	
https://docs.microsoft.com/en-us/aspnet/core/security/authorization/claims?view=aspnetcore-6.0

-----------------------------------------------------

client 5444
api 5445 -- postman
server 5443
Install-Package IdentityServer4.AccessTokenValidation package in your API
apiName in your program.cs builder.services.addAuth... must match whats in your db -- ApiResource tbl -- julian  --pt 2  -- 18:00 -22:00
Authorization types: Role based Claims based and Policy based
a role is a privilege/level
a claim is a statement a user makes about himself eg name, email, role etc
policy is a set of rules/functions that det if a user can access a resource
in C#, create a policy with these rules

to install: dotnet tool install -g Microsoft.dotnet-try
then type 
>dotnet try 
from cmd prompt to open port below
Now listening on: https://localhost:50467

A sequence in C# is an object whose type implements the IEnumerable<T> interface or the IQueryable<T> interface. The standard query operators provide query capabilities including filtering, projection, aggregation, sorting and more.

LINQ complete query operation: 
The complete operation includes creating a data source, defining the query expression, and executing the query in a foreach statement.
C#
// Specify the data source.
int[] scores = { 97, 92, 81, 60 };

// Define the query expression.
IEnumerable<int> scoreQuery =
    from score in scores
    where score > 80
    select score;

// Execute the query.
foreach (int i in scoreQuery)
{
    Console.Write(i + " ");
}

// Output: 97 92 81

A query is not executed until you iterate over the query variable, for example, in a foreach statement

LINQ method names such as Where, Select, GroupBy, Join, Max, and Average.
LINQ methods either:
    Expect a collection (IEnumerable<T>) and pass back a collection of the     same type, like filtering with Where, sorting with OrderBy, dividing into     chunks with GroupBy, paring down the resultset with Select, etc.
    Perform some operation that returns a result, like Max , Min , Count, ToList, etc.
Query syntax and method syntax are semantically identical, but many people find query syntax simpler and easier to read. Some queries must be expressed as method calls

Configuring JWT Identity Token for Authentication
username: admin, pwd: Pa$$word123
aud: is the client eg angular_spa
This part of the tutorial will walk through the steps to
    1 Register the Angular app as a Client in IdentityServer4 tru Admin UI
    2 Configure the client with URI redirect, CORS, and claims (such as email,       openid, roles, and profile)
    3 Login to the Angular and inspect JWT

The settings for the Angular app to work with IdentityServer4 are in the file auth-config.ts under src/app/core folder. In the settings NB values of clientID, responsType, redirectUri, etc. These settings must match the settings we are going to set up via Admin UI.

Complete the API Scope form with data as shown in Figure 22. Be sure to specify role in the User Claims field as this will include user’s roles in the Access Token. Then click on the Save Api Scope button.

https://medium.com/scrum-and-coke/secure-angular-with-identityserver4-admin-ui-5dd163ff1434

-----------------------------------------------------------

grid for enquiries blank
vwLoanShow balance shld reflect
loan edit/delete
mth/yr end rollover
EndofMonth for rollover
UpdateAudit
Monthly variation OR Misc / Other Entries (eg IOU) (Other type) -- 
select_PayCodes_4D ('MV') sproc
payToAll=>0 and frequency = 1 where pay_to_all = 0 and left(paycode,2) <> '01' and frequency = 1 and paycode not between 4000 and 4999
frequency=> monthly 
of Annual means = basic sal % will be multiplied by 12
loadpaycodes -- select * from paycodes where frequency = 0 frequency=> monthly 
Periodic payment eg furniture Allce ofAnnual = 1 not 12
insert_paycodes netpayflhistory
loadPaycodes where paid mthly / frequency = 0 -- for combo in payrol processing
mthly var: pay_to_all = 0 and left(paycode,2) <> '01' and frequency = 1 and paycode not between 4000 and 4999
sal arrears : left(paycode,2) = '01'

Update_Payinput_4MVar Save_Payinput_4MVar Save_Payinput_4PArrs]
listwopay delete_Payinput_EV
update_paycodes sproc

RTRIM(personel.surname) + ', ' + RTRIM(personel.FirstName) AS FullName,

allce & Ded not based on Basic
If strApp = "SmartHR" Then -- for payrol

End If

union akive records with emp tbl and show on rpts and consultation
pat movt timeline
dup in clearing rpt and some records not showing in rpts
export to excel butt shld show service charge

show emp page in payrol
leave per/annum
remove loans page from HR and point loan to payrol
move bank to payrol
remove dept and asset group from asset master and use from hr and smatAccts
remove org,dept,div,units etc from smartAccts and use that of smartHR

https://csharp2json.io/
chrome://apps/
Install-Package IdentityServer4
connect terminal to smartAccts

the oidc-client library handles all the interactions with our OpenID Connect Provider (IDSvr4). npm install oidc-client --save
Next, I imported UserManager, UserManagerSettings, and User into the auth.service from the oidc-client library.

https://mail.yahoo.com/d/folders/1/messages/168052 -- turing -- 110522

skoruba Admin Project -- TokenProject.AdminUI in vs 2019
//Uncomment only once at first  to seed database program.cs ln36
//await ApplyDbMigrationsWithDataSeedAsync(args, configuration, host);

idsvr4 Admin UI Soln consists of 3 projects running same time
idsvr4 STS -- port 44310
TokenProject.admin.api -- 44302
TokenProject.admin.ui -- 44303
"Username": "admin",
"Password": "Pa$$word123",
https://localhost:44310/connect/token

http://localhost:8088/
http://localhost:8089/
http://localhost:8090/
http://localhost:8090/connect/token
"Server=Logic;Database=SapidBilling;User ID=smart; Password=smartsys;"
"Server=Logic;Database=Terminal;User ID=smart; Password=smartsys;"
OAuth stands for Open standard for Authorization.
The application architecture consists of Clients (admin.ui, ng app), ApiResources (admin.api) and Token Service (idsvr4 STS) [CAT]. 
"Server=Logic;Database=AuthSvr4;User ID=smart; Password=smartsys;"
Run the application using the command dotnet run (yourApplicationName).dll
If there are any errors, they should appear in the output.

netsh http add iplisten ipaddress=44303
netsh interface ipv4 show excludedportrange protocol=tcp
Add the port you are using to the port exclusion range: netsh int ipv4 add excludedportrange protocol=tcp startport=50403 numberofports=1 store=persistent

Virtualization is the process of running the virtual instance of a computer
system in a layer abstracted from the actual hardware.It allows us to use multiple
operating systems in the same computer and to create virtual storage devices
which forms the foundation of cloud computing....

Virtualization - is the process of separating the operating system from 
the underlying hardware.
virtual machine is a computer within a computer

In computing, virtualization or virtualisation is the act of creating a virtual version of something at the same abstraction level, including virtual computer hardware platforms, storage devices, and computer network resources. Wikipedia

What is DevOps
Definition. DevOps (a portmanteau of “development” and “operations”) is the combination of practices and tools designed to increase an organization's ability to deliver applications and services faster than traditional software development processes. This speed enables organizations to better serve their customers and compete more effectively in the market.

In simple terms, DevOps is about removing the barriers between traditionally siloed teams, development and operations. Under a DevOps model, development and operations teams work together across the entire software application life cycle, from development and test through deployment to operations.

Connected Services
Connected Services is a collection of tools in Visual Studio that help you connect your application to the following:

    Azure services
    OpenAPI endpoints
    gRPC (Remote Procedure Call) endpoints
    Windows Communication Foundation (WCF) endpoints
https://docs.microsoft.com/en-us/visualstudio/azure/overview-connected-services?view=vs-2022

What is Azure service?
Microsoft Azure is the public cloud computing platform by Microsoft which offers software as a service (SaaS), platform as a service (PaaS) and infrastructure as a service (IaaS). It comprises more than 600 cloud services and supports varied operating systems, databases, and developer tools.29 Oct 2021

Get started by right-clicking on the Connected Services node in Solution Explorer and select Manage Connected Services.

to prev error during insert involving identity fields in controller Action use:
_context.Entry(billing ).Property(x => x.ID ).IsModified = false;

'https://localhost:7118/api/Invoices/2349'
'https://localhost:7118/api/Invoices/2349'
builder =>
    {
      builder.WithOrigins(
          "http://localhost:4200",
          "http://localhost") -- change to 
        .AllowAnyMethod()
        .AllowAnyHeader(); 
     });

IdentityServer Configuration store (client store, api and identity resource store, CORS policy store), operational store (persisted grants store for tokens, codes and consents)

public void ConfigureServices(IServiceCollection services)
{
    services.AddIdentityServer()
        .AddInMemoryIdentityResources(InMemoryConfig.GetIdentityResources())
        .AddTestUsers(InMemoryConfig.GetUsers())
        .AddInMemoryClients(InMemoryConfig.GetClients())
        .AddDeveloperSigningCredential(); //not something we want to use in a production environment;

        services.AddControllersWithViews();
}

public void Configure(IApplicationBuilder app, IWebHostEnvironment env)
{
    if (env.IsDevelopment())
    {
        app.UseDeveloperExceptionPage();
    }

    app.UseStaticFiles();
    app.UseRouting();
    app.UseIdentityServer();
    app.UseAuthorization();
    app.UseEndpoints(endpoints =>
    {
        endpoints.MapDefaultControllerRoute();
    });
}

idsvr4 Admin UI Soln consists of 3 projects running same time
idsvr4 STS -- port 44310
TokenProject.admin.api -- 44302
TokenProject.admin.ui -- 44303
Run the application using the command dotnet run (yourApplicationName).dll
If there are any errors, they should appear in the output.

The type or namespace name 'ICachedReport' could not be found 
soln: Add these references to your project and recompile
using CrystalDecisions.Shared;
using CrystalDecisions.ReportSource;
using CrystalDecisions.CrystalReports.Engine;

string docPath = Path.Combine(_hostingEnvironment.ContentRoothPath, "App_Data/docs");

AppDomain.CurrentDomain
If you don't want to instantiate the IWebHostEnvironment interface in all of your Controllers, and/or if you want to access those properties from non-Controller classes, we can "store" them for later use thanks to a neat built-in feature of the AppDomain static class, which represents the application domain (the isolated environment where applications execute). Such class features a convenient CurrentDomain property with a SetData / GetData pair of methods that can be used to store arbitrary values within that secluded context.

This basically means that we can add the following line(s) of code at the end of the Configure() method of our app's Startup.cs file:
// setup app's root folders
AppDomain.CurrentDomain.SetData("ContentRootPath", env.ContentRootPath);
AppDomain.CurrentDomain.SetData("WebRootPath", env.WebRootPath);

This way we'll be able to retrieve them from within any class (including, yet not limiting to, Controllers and Views) in the following way:

var contentRootPath = (string)AppDomain.CurrentDomain.GetData("ContentRootPath");
var webRootPath = (string)AppDomain.CurrentDomain.GetData("WebRootPath");

This can be further exploited to create a static helper method that will allow us to have the same functionality as the good old Server.MapPath:

public static class MyServer 
{
    public static string MapPath(string path)
    {
        return Path.Combine(
            (string)AppDomain.CurrentDomain.GetData("ContentRootPath"), 
            path);
    }
}
Which can be used it in the following way:
var docPath = MyServer.MapPath("App_Data/docs");

Microsoft has permanently removed Server.MapPath function from .Net Core and introduced a new interfaces IHostingEnvironment for .Net Core 2.0 and IWebHostEnvironment for .Net Core 3.0.

Both these interfaces need to be injected as dependency in the Controller and then later used throughout the Controller.
Both these interfaces have two properties.
1. WebRootPath – Path of the www folder.
2. ContentRootPath – Path of the root folder which contains all the Application files.
The ContentRootPath property will give you access to the absolute path to the application content files.

     private IWebHostEnvironment Environment;
 
    public HomeController(IWebHostEnvironment _environment)
    {
        Environment = _environment;
    }

     public IActionResult Index()
    {
        string wwwPath = this.Environment.WebRootPath;
        string contentPath = this.Environment.ContentRootPath;
 
        return View();
    }

public class YourController : Controller
{
    private readonly IWebHostEnvironment _webHostEnvironment;

    public YourController (IWebHostEnvironment webHostEnvironment)
    {
        _webHostEnvironment= webHostEnvironment;
    }

    public IActionResult Index()
    {
        string webRootPath = _webHostEnvironment.WebRootPath;
        string contentRootPath = _webHostEnvironment.ContentRootPath;

        string path ="";
        path = Path.Combine(webRootPath , "CSS");
        //or path = Path.Combine(contentRootPath , "wwwroot" ,"CSS" );
        return View();
    }


.Net 6 (.NetCore 3 and above)

For example I want to locate ~/wwwroot/CSS

public class YourController : Controller
{
    private readonly IWebHostEnvironment _webHostEnvironment;

    public YourController (IWebHostEnvironment webHostEnvironment)
    {
        _webHostEnvironment= webHostEnvironment;
    }

    public IActionResult Index()
    {
        string webRootPath = _webHostEnvironment.WebRootPath;
        string contentRootPath = _webHostEnvironment.ContentRootPath;

        string path ="";
        path = Path.Combine(webRootPath , "CSS");
        //or path = Path.Combine(contentRootPath , "wwwroot" ,"CSS" );
        return View();
    }
}

Some Tricks
Also if you don't have a controller or service,follow last Part and register it's class as a singleton. Then, in Startup.ConfigureServices:

services.AddSingleton<your_class_Name>();

Finally, inject your_class_Name where you need it.

role based access control + is4
Role-Based Access Control with Angular and IdentityServer4

How to kill the process currently using a port on localhost in...
Run command-line as an Administrator. Then run the below mention command. netstat -ano | findstr : 44303
    Then you execute this command after identify the PID. taskkill /PID typeyourPIDhere /F.

to run the idsvr4 from PM, first check we are in root dir  -- PM> dir
then type below passing the /seed as argument: 
dotnet run Server/bin/Debug/net6.0/Server /seed --project Server
dotnet run TokenProject.Admin/bin/Debug/net5.0/TokenProject.Admin --project TokenProject.Admin
and hit enter -- Now listening on: https://localhost:5443	
https://localhost:5443/.well-known/openid-configuration
CoffeeAPI -- ClearingAPI
username: angella -- pwd: Pass123$
Creating Migrations
As we have mentioned, we are working with two db context classes and for both of them, we have to create a separate migration:

PM> Add-Migration InitialPersistedGranMigration -c PersistedGrantDbContext -o Migrations/PersistedGrantDb
PM> Add-Migration InitialConfigurationMigration -c ConfigurationDbContext -o Migrations/ConfigurationDb

for aspNet Identity:
PM> Add-Migration InitialAspNetIdentityMigration -c AspNetIdentityDbContext -o Migrations/AspNetIdentityDb

then update the db with: 
PM> update-database -context PersistedGrantDbContext 
PM> update-database -context ConfigurationDbContext 

PM> update-database -context AspNetIdentityDbContext 


projector sales | Infocus Projector price in Ikeja Nigeria
https://olist.ng › ... › Projector › Infocus
Get Infocus Projector price in Ikeja Nigeria on OList | This infocus projector ... Lagos,Ikeja,6 olayeni street,computer village ikeja lag

restore sapid2 as Terminal
chnage name to dn cli
update idGen tbl to init values

You can request for QuickCredit instantly by dialling *737*51*51#

type initializer threw an exception -- for payrol
soln: ensure the 2 dependent modules are included eg sidmach.sqlDAL asembly
also crystal reports Assembly ver 13.30.....

Delegates enhance code reuse and is all about calllbacks
A func<T> is a generic delegate with a return type
An Action<T> is a generic delegate without a return type -- ie void
C:\Users\Administrator\source\repos\Accounting\packages\DocumentFormat.OpenXml.2.7.2\lib\net40\DocumentFormat.OpenXml.dll

@CurrTime = CONVERT([varchar](15),CONVERT([time],getdate(),(0)),(100))
dbo.vwhRecords.Fullname + N' (' + CAST(CONVERT(varchar(15),dbo.vwhRecords.recDate ,106)  AS varchar) + N')'

CONVERT(varchar(15),dbo.vwhRecords.recDate ,106) 

Claims in jwt means piece of info about a subject
there are 3 types of claims: registered (iss, aud, exp sub etc) private (userID, role) and public

PicBox.SizeMode = PictureBoxSizeMode.CenterImage
linQPad

C# Delegate
Treating Function as a value is one of the core functional programming paradigms. In c# it's called a "delegate", today we learn - why delegates are useful, delegate syntax, how delegates work internally and what are closures.


An expression_statement evaluates a given expression. The value computed by the expression, if any, is discarded.

c# Expression body definitions
C# => operator  -- Arrow operator/token
The => token in C# is supported in two forms: as the lambda operator and as a separator of a member name and the member implementation in an expression body definition.
Lambda operator: In lambda expressions, the lambda operator => separates the input parameters on the left side from the lambda body on the right side.
string[] words = { "bot", "apple", "apricot" };
int minimalLength = words
  .Where(w => w.StartsWith("a"))
  .Min(w => w.Length);
Console.WriteLine(minimalLength);   // output: 5

int[] numbers = { 4, 7, 10 };
int product = numbers.Aggregate(1, (interim, next) => interim * next);
Console.WriteLine(product);   // output: 280
int[] numbers = { 4, 7, 10 };
int product = numbers.Aggregate(1, (int interim, int next) => interim * next);
Console.WriteLine(product);   // output: 280
Func<string> greet = () => "Hello, World!";
Console.WriteLine(greet());

Expression body definition
public string Name => $"{_firstName} {_lastName}"; //get accessor (read-only)
same as 
public string Name {
 return $"{_firstName} {_lastName}"; 
}

Both the get and the set accessor can be implemented as expression-bodied members. In this case, the get and set keywords must be present.  
    public string Name
    {
        get => _name;
        set => _name = value;
    }



An expression body definition has the following general syntax:
member => expression;
where expression is a valid expression. The return type of expression must be implicitly convertible to the member's return type.
The following example shows an expression body definition for a Person.ToString method:
public override string ToString() => $"{fname} {lname}".Trim();
It's a shorthand version of the following method definition:
public override string ToString()
{
   return $"{fname} {lname}".Trim();
}
Note that the return keyword is not used in the ToString expression body definition.
public void DisplayName() => Console.WriteLine(ToString());

The => operator cannot be overloaded.

You can use an expression body definition whenever the logic for any supported member, such as a method or property, consists of a single expression.

https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/operators/lambda-operator
https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/statements-expressions-operators/expression-bodied-members#properties
https://learn.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/properties

The following example defines a Location class whose read-only Name property is implemented as an expression body definition that returns the value of the private locationName field:

public class Location
{
   private string locationName;

   public Location(string name)
   {
      locationName = name;
   }

   public string Name => locationName; //Name is read-only ppty
}

Properties
Starting with C# 7.0, you can use expression body definitions to implement property get and set accessors. The following example demonstrates how to do that:

Finalizers and Indexers C#
-----------------------------------------------------

bookmark bar in vs code
The default keyboard shortcut for adding a code bookmark is cmd+shift+# where # is a number from 0 to 9, This might interfere with other system's keyboard shortcuts like taking a screenshot cmd+shift+4 and cmd+shift+4 . You can change the default one to shift+alt+#
To navigate bookmarks you can use cmd+# where # is your bookmark number

Serializing and Deserializing JSON -- https://www.newtonsoft.com/json/help/html/SerializingJSON.htm
https://www.newtonsoft.com/json
Newtonsoft.Json.JsonConvert.SerializeObject(new {foo = "bar"})

Use Angular, Angular Material, Angularfire (+ Firebase with Firestore) and NgRx to build a real Angular App

<label>Native property/event binding</label>
<input type="date" [valueAsDate]="dateObj" (change)="dateObj = $event.target.valueAsDate" />

Email: ['', Validators.required, Validators.pattern(this.EMAIL_REGEX)],

IdentityServer4
Fuji Nguyen
Angular PDF viewer
PDF viewing library ngx-extended-pdf-viewer.
https://pdfviewer.net/extended-pdf-viewer/simple
how to convert Crystal Report to PDF in C# --  It's a method on the report.

ASP NET Core Identity tutorial from scratch -- venkat
how to design and print invoice in angular
https://mail.yahoo.com/d/folders/1/messages/156495 -- joan turing


remove setbutt fn from template to class -- resetForm,butt clicks
https://github.com/damienbod/angular-auth-oidc-client
if json is valid, check using -- jsonformatter.curiousconcept.com

spread operator and objeect.Assign() make a shallow copy of an object or array (ie after copy, any modification of primitive values in it does not reflect)

 public countryList:{name:string, code:string}[] = countries;

How to read local JSON files in your Angular 13 application, each with an example:
    Reading Local JSON Files Using TypeScript 2.9+ import Statement,
    Reading Local JSON Files Using Angular HttpClient,
    Reading Local JSON Files in Offline Angular Apps Using ES6+ import Statement

Whatever you place in the assets folder is publicly accessible and can be read with an HttpClient in angular
another way to read json file, is set resolveJsonModule option to true in the tsconfig.json file under the compilerOptions key file. This is an example:
import * as data from './data.json'; or
import data from './data.json';
products: any = (data as any).default;
https://www.techiediaries.com/angular-local-json-files/
https://jsonworld.com/demo/how-to-read-local-json-file-in-angular

  ngOnInit(){
    this.httpClient.get("assets/data.json").subscribe(data =>{
      console.log(data);
      this.products = data;
    })
  }
must move the data.json file to the src/assets folder for it to be visible

  ngOnInit(): void {
    fetch('./assets/products.json').then(res => res.json())
    .then(jsonData => {
      this.productsArray = jsonData;
    });
  }

Reading Local JSON Files in Offline Angular Apps Using ES6+ import Statement
If your Angular application goes offline, reading the JSON file with HttpClient will fail. In this case, we have one more method to import local JSON files using the ES6+ import statement which supports importing JSON files.
But first we need to add a typing file as follows:

declare module "*.json" {
  const value: any;
  export default value;
}

Add this inside a new file json-typings.d.ts file in the src/app folder.

Now, you can import JSON files just like TypeScript 2.9+.

import * as data from "data.json";

-----------------------------------------------------

dynamic type In C#
In C# 4.0, a new type is introduced that is known as a dynamic type. It is used to avoid the compile-time type checking. The compiler does not check the type of the dynamic type variable at compile time, instead of this, the compiler gets the type at the run time.

var wbClient= new WebClient();
[JsonArray]
public class JsonObjCollection
{
    // implementation of a list of type JsonObj
}

http://localhost/clearing
http://192.168.25.156/clearing -- ipconfig
http://192.168.0.11/clearing
http://localhost:8081/api/invoices
http://localhost:8081/api/consignees
http://localhost:8081/swagger/index.html
https://localhost:7118/api/invoices
deployment of asp.net core web api to iis
iis requires sql svr authentication to connect NOT windows auth
install iis -- from win 10 add or remove windows features
install .NET Core hosting bundle for IIS this installs the .NET Core runtime, libraries, and the ASP.NET Core module for IIS.

After installing it, you may need to do a “net stop was /y” and “net start w3svc” to ensure all the changes are picked up for IIS.

Restart the server or execute 
net stop was /y 
followed by 
net start w3svc 
in a cmdshell.

Create a new IIS Application Pool. You will want to create one under the .NET CLR version of “No Managed Code“. Since IIS only works as a reverse proxy, it isn’t actually executing any .NET code.

Load Your App!
At this point, your application should load just fine. If it does not, check the output logging from it. Within your web.config file you define how IIS starts up your ASP.NET Core process. Enable output logging by setting stdoutLogEnabled=true and you may also want to change the log output location as configured in stdoutLogFile. Check out the example web.config before to see where they are set.

Possible errors
localhost cannot be reached
soln: restart iis or the system -- w3c service may be unavailable

Handler "aspNetCore" has a bad module "AspNetCoreModule" in its module list
soln:ignore this is due to install of hosting bundle
HTTP Error 500.0 - Internal Server Error
Calling LoadLibraryEx on ISAPI filter "C:\Windows\Microsoft.NET\Framework\v4.0.30319\\aspnet_filter.dll" failed

soln: https://www.schneider-electric.cn/en/faqs/FA238294/
in inetMgr go to iis section > isapi filters > dbl click and remove the extra backslash "\" b4 \aspnet_filter.dll
A possible Microsoft update (exact cause unknown) created the issue when updating an existing or installing a new ISAPI handler to IIS.
The update mishandled the path by inserting \\ instead of \ into the executable path causing IIS to be unable to load the filter.
This caused the 500 Internal Server errors to sites/applications running application pools in 64bit mode.
As seen in the above screen capture change the \\ to \ so the path reads:
C:\Windows\Microsoft.NET\Framework\v4.0.30319\aspnet_filter.dll
Perform an iisreset through a command prompt and the PME Web Applications page will now load normally. 

error: localhost refused to connect.
soln: restart iis or you system

deployment of angular to iis
remove root slash from paths eg image paths
copy configs from env.ts to env.prod.ts
build the app -- ng build --prod --base-href /clearing/ -- clearing --watch will be the name of the angular app in iis under a site (eg default site)
the build will be in dist folder -- copy it to desired dest folder
eg the prod files will be inside dist/clearing folder
right click the dist folder and click open in file explorer to view
In iis create an application under a site, call it clearing (same as ang app name during build)  and point it to dest folder eg (C:\Sites\Clearing)
the url will be: http://localhost:8081/clearing/
when deploying to iis, use same name given above to create app (ie clearing)
Fix 404 Error with Url Rewrite extension and web.config
Install iis url-rewrite ext to allow seamless access to the app. AND 
Add web.config file (containing url rewrite tag) to the deployed folder in C drive

Fix 404 Error with Url Rewrite extension and web.config
iis url rewrite -- download and install -- for angular deployment in iis
web.config is also nece.
Url ReWrite Extension Download Link : 
► https://www.iis.net/downloads/microsoft/url-rewrite
Web Config XML : 
////////////////////////////////////////
<?xml version="1.0" encoding="utf-8"?>
    <configuration>
      <system.webServer>
        <rewrite>
          <rules>
            <rule name="Angular Routes" stopProcessing="true">
              <match url=".*" />
              <conditions logicalGrouping="MatchAll">
                <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="true" />
                <add input="{REQUEST_FILENAME}" matchType="IsDirectory" negate="true" />   
              </conditions>
              <action type="Rewrite" url="/imagegallery/" />
            </rule>
          </rules>
        </rewrite>
      </system.webServer>
    </configuration>

///////////////////////////////////////////////////////
see also
https://angular.io/start/start-deployment
https://angular.io/guide/deployment
https://devblogs.microsoft.com/premier-developer/tips-for-running-an-angular-app-in-iis/
budget is the limit for bundle sizes. -- angular.json file
"budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "500kb",
                  "maximumError": "1mb"
                },
gzip your files to reduce size and enhance download time
How to gzip? If you host your Angular app in most of the cloud platforms or CDN, you should not worry about this issue as they probably have handled this for you. However, if you have your own server (such as NodeJS + expressJS) serving your Angular app, definitely check if the files are gzipped. The following is an example to gzip your static assets in a NodeJS + expressJS app. You can hardly imagine this dead simple middleware “compression” would reduce your bundle size from 2.21MB to 495.13KB.

after deployment the url will be: http://localhost:8081/clearing/


console.log('Caught in CatchError. Throwing error')
      throw new Error(error)

ipconfig /flushdns -- cmd prompt
csrf
restapitutorial.com

cURL, which stands for client URL, is a cmdline tool that developers use to transfer data to and from a server. At the most fundamental, cURL lets you talk to a server by specifying the location (in the form of a URL) and the data you want to send.23 Feb 2021
[Route("~/api/teachers")] -- overriding route prefix at controler level with tilde letter
import { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';
import { Observable, throwError } from 'rxjs';
import { retry, catchError } from 'rxjs/operators';

     // Handle API errors
      handleError(error: HttpErrorResponse) {
        if (error.error instanceof ErrorEvent) {
          // A client-side or network error occurred. Handle it accordingly.
          console.error('An error occurred:', error.error.message);
        } else {
          // The backend returned an unsuccessful response code.
          // The response body may contain clues as to what went wrong,
          console.error(
            `Backend returned code ${error.status}, ` +
            `body was: ${error.error}`);
        }
        // return an observable with a user-facing error message
        return throwError(
          'Something bad happened; please try again later.');
      };

      // Http Options
      httpOptions = {
        headers: new HttpHeaders({
          'Content-Type': 'application/json'
        })
      }

getCustomHeaders(): HttpHeaders {
    const headers = new HttpHeaders()
      .set('Content-Type', 'application/json')
      .set('Api-Key', 'xxx');
    return headers;
  }
	
https://localhost:7118/api/invoices
https://localhost:7118/swagger/index.html

HMOs -- for SmtDr
regular expr in JS
LINQ Syntax in C#
Azure
Turing

post(url, body, options = {}) {
        return this.request('POST', url, addBody(options, body));
    }

Note, versioning is mostly taken care of with different Controllers. Here for easy understanding, we have preferred to depict it with different Methods with same signatures.

In this example, "id" is a parameter that could be passed as the number or as an alphabet, any free string.

    [Route("api/[controller]")]  
    publicclassMoviesController: Controller {  
        [HttpGet("{id:int}")]  
        publicIEnumerable < string > Get(int id) {  
                returnnewstring[] {  
                    "V2.value1",  
                    "V2.value2"  
                };  
            }  
        [HttpGet("id:aplha")]  
        publicIEnumerable < string > Get(string id) {  
            returnnewstring[] {  
                "V2.value1",  
                "V2.value2"  
            };  
        }  
    }  

Mentioning parameter data types to be accepted, are termed as Constraints.

Multiple Parameters
In this example, ‘id’and ‘authorid’ is a parameter that could be passed as number.

    [Route("api/[controller]")]  
    publicclassBooksController: Controller {  
        [HttpGet("{id:int}/author/{authorid:int}")]  
        publicIEnumerable < string > Getdetails(int id, intauthorid) {  
            returnnewstring[] {  
                "V2.value1",  
                "V2.value2"  
            };  
        }  
    }  

Matching URI:   // Get  api/books/1/author/5 where 1 matches to ‘id’ and ‘5’ to authorid in the given method.



HTTP Request Data
To bind the request data to the controller action method parameters, model binding looks for data in the HTTP request in the following places in the order specified below.

    Form values
    Route values
    Query strings



[ApiController]
[Route("[controller]")]
public class ValuesController : ControllerBase
{
    ...

    [HttpGet("/withparams")]
    public IActionResult GetWithParameters([Required] int id, [BindRequired] int number, int check) 
        => Ok(new[] { id, number, check });
}



    [HttpGet] //Route here when firstName queryString param provided
    public async Task<ActionResult<IEnumerable<Student>>> SearchStudentAsync([FromQuery] string firstName)
    {
        /* Code omitted */
    }

the mapping between the URL and resource is nothing but the concept of Routing.
Routing in ASP.NET Core Web API application is the process of mapping the incoming HTTP Request (URL) to a particular resource i.e. controller action method. 

Query Strings are nothing but key-value pairs that you need to pass as of the URL. Again, you pass multiple query strings (i.e. multiple key-value pairs) separated by &. Further, the most important point that you need to remember is before the first query string or after the domain name you need to use a question mark (?). The question mark (?) in the URL indicates that the query string is started.

https://www.pragimtech.com/blog/blazor/search-in-asp.net-core-rest-api/

Read more about Routing in ASP.NET Core - https://docs.microsoft.com/en-us/aspnet/core/fundamentals/routing?view=aspnetcore-6.0

The following [HttpGet] attribute specified an extension to the base route /api/employees. So the route to reach this Search() method is /api/employees/search. The values for the two method parameters come from the query strings in the URL.

[ApiController]
[Route("api/[controller]")]

[HttpGet("{search}")]
public async Task<ActionResult<IEnumerable<Employee>>> Search(string name, Gender? gender)
{
}

If you want the search terms (name and gender) to be included as route parameters instead of query strings, change the route template on the HttpGet attribute as shown below. However, this approach is not recommended if you have many search parameters.

[HttpGet("{search}/{name}/{gender?}")]
public async Task<ActionResult<IEnumerable<Employee>>> Search(string name, Gender? gender)
{
}

IEmployeeRepository Interface
public interface IEmployeeRepository
{
    Task<IEnumerable<Employee>> Search(string name, Gender? gender);
}

EmployeeRepository
public class EmployeeRepository : IEmployeeRepository
{
    private readonly AppDbContext appDbContext;

    public EmployeeRepository(AppDbContext appDbContext)
    {
        this.appDbContext = appDbContext;
    }

    public async Task<IEnumerable<Employee>> Search(string name, Gender? gender)
    {
        IQueryable<Employee> query = appDbContext.Employees;
            
        if (!string.IsNullOrEmpty(name))
        {
            query = query.Where(e => e.FirstName.Contains(name)
                        || e.LastName.Contains(name));
        }

        if(gender != null)
        {
            query = query.Where(e => e.Gender == gender);
        }

        return await query.ToListAsync();
    }
}

     //Format Date
     function formatDate(d)
    {
         date = new Date(d)
         var dd = date.getDate(); 
         var mm = date.getMonth()+1;
         var yyyy = date.getFullYear(); 
         if(dd<10){dd='0'+dd} 
         if(mm<10){mm='0'+mm};
         return d = dd+'/'+mm+'/'+yyyy
    }
	
datetime-local
           [formControl]="$any(this.service.form.controls['bDate'])"
          formControlName="bDate"
         [ngModel]="$any(bDate)"

import  *  as  data  from  './data.json';
aproducts: any = (data as any).default;
stringifiedData: any; 

    getProducts(): Observable<Product[]> {
        return this.http.get(this.productsUrl)
            .map((response: Response) => <Product[]>response.json())
            .catch(this.handleError);
    }

    addProduct(product: Product) {                
        let body = JSON.stringify({ product });            
        let headers = new Headers({ 'Content-Type': 'application/json' });
        let options = new RequestOptions({ headers: headers });

        return this.http.post(this.productsUrl, body, options)
            .map(this.extractData)
            .catch(this.handleError);
    }

    private extractData(res: Response) {
        let body = res.json();
        return body.data || {};
    }

    private handleError(error: Response) {
        console.error(error);
        return Observable.throw(error.json().error || 'Server Error');
    }
}

$any() is a typecast operator in angular for the templating engine eg from 
+ operator is a number typecast operator in angular 
AbstractControl to FormControl
[formControl]="this.service.form.controls.bDate"
[formControl] assigns a reference to the FormControl instance you created to the FormControlDirective.
formControlName assigns a string for the forms module to look up the control by name.

  form = new FormGroup({
    ID: new FormControl(null),
    GroupName: new FormControl('', Validators.required),
  });

<input [ngModel]="startDate | date:'yyyy-MM-dd'" (ngModelChange)="startDate = $event" type="date" name="startDate"/>

<input type="date" [valueAsDate]="dateObj" (change)="dateObj = $event.target.valueAsDate" />

<input type="date" [ngModel] ="dt | date:'yyyy-MM-dd'" (ngModelChange)="dt = $event">

$("#datepickerEnd").val(new Date().toLocaleDateString('en-CA'));//YYYY-MM-dd
let theDate = new Date();
  $("#datepickerEnd").val(theDate.toLocaleDateString('en-CA'));//YYYY-MM-dd

var d = new Date(); 
var today = d.getFullYear()+"-"+("0"+(d.getMonth()+1)).slice(-2)+"-"+("0"+d.getDate()).slice(-2);
Or this :
var d = new Date().toLocaleDateString().split('/');
var today = d[2]+"-"+("0"+d[0]).slice(-2)+"-"+("0"+d[1]).slice(-2);

moment.js to solve date issue now legacy as at 2021

Your code would have worked if it had been in this format: YYYY-MM-DD, this is the computer standard for date formats 
You can only use date in input type="date" as in format YYYY-MM-DD

< input type="date" id="date" name="date" class="form-control" value="{{formatDate invoice.date 'YYYY-MM-DD'}}" />

  <div class="form-group">
    <button type="submit" [disabled]="form.invalid" class="btn btn-lg btn-block">SUBMIT</button>
  </div>
</form>

  <div class="form-group">
    <label>FULL NAME</label>
    <input name="FullName" #FullName="ngModel" [(ngModel)]="service.formData.FullName" class="form-control" required>
    <div class="validation-error" *ngIf="FullName.invalid && FullName.touched">This field is required.</div>
  </div>

  resetForm(form?: NgForm) {
    if (form != null)
      form.resetForm();
    this.service.formData = {
      EmployeeID: null,
      FullName: '',
      Position: '',
      EMPCode: '',
      Mobile: ''
    }
  }

JSON object is a built in object in javascript language
There are two methods in JSON objects
JSON.stringify() method (string version of an object), which is the conversion of an object to JSON string
JSON.parse() - parses json string (JSON object) and creates javascript object
  courseList = [
    {
      courseid: "1",
      coursename: "Java programming",
      author: "Franc"
    },
    {
      courseid: "2",
      coursename: "Learn Typescript programming",
      author: "John"
    }
  ];
    // Convert String obect to JSON
    this.stringJson = JSON.stringify(this.courseList);
    console.log("String json object :", this.stringJson);
    console.log("Type :", typeof this.stringJson);

    // ConvertjSON to an object
    this.stringObject = JSON.parse(this.stringJson);
    console.log("JSON object -", this.stringObject);

The json() method of the Response interface takes a Response stream and reads it to completion. It returns a promise which resolves with the result of parsing the body 
Note that despite the method being named json(), the result is not JSON but is instead the result of taking JSON as input and parsing it to produce a JavaScript object.
Return value
A Promise that resolves to a JavaScript object. This object could be anything that can be represented by JSON — an object, an array, a string, a number... 

How to convert Object to Array Example
Let us assume that you have an object declared with multiple properties.
First Get the named keys using object.keys() method.
This method retrieves keys from the given object and returns an array of keys.
Using the map() method with a defined callback. And callback is executed for each element of an object.
var employees = {   
    kiran: { age:30,salary:10000},  
    john: { age:35,salary:15000},  
    Tom: { age: 21, salary:5000}  
}  
let arr = [];  
Object.keys(employees).map(function(key){  
    arr.push({[key]:employees[key]})  
    return arr;  
});  
console.log('Object=',employees)  
console.log('Array=',arr)  

How to Convert Array to objects?
var array = [{ Kiran: "30" }, { Tom: "50" }],  
object = Object.assign({}, ...array);  
console.log(object);

convert json string to object in angular 8
getSomeDataFromSomeAPI(){
  //res.json() does the trick, .json() function belongs to Response Object
  return this.http.get("https://someApi.com/api/getData")
  .map(res => res.json()).toPromise();
}

How do you pass special characters in JSON?
JSON. simple - Escaping Special Characters

    Backspace to be replaced with \b.
    Form feed to be replaced with \f.
    Newline to be replaced with \n.
    Carriage return to be replaced with \r.
    Tab to be replaced with \t.
    Double quote to be replaced with \"
    Backslash to be replaced with \\

CSS Tutorial - Zero to Hero (Complete Course)
C# operator overloading

use change event to get selectedIndex of select element -- (change)="updatePrice(event.target)"
use keyup event to get value of input element -- (keyup)="updateTotal()"


<form #form="ngForm" autocomplete="off" *ngIf="service.formData">
import { AngularFireDatabase, AngularFireList } from 'angularfire2/database';
import * as _ from 'lodash';
import { DatePipe } from '@angular/common';
populateForm(employee) {
  this.form.setValue(_.omit(employee,'departmentName'));
}

dialogConfig.Data={orderItemIndex,OrderID}
use behavior subject to hold variables for billTypes, reimbursables etc


        this.listData.filterPredicate = (data, filter) => {
          return this.displayedColumns.some(ele => {
            return ele != 'actions' && data[ele].toLowerCase().indexOf(filter) != -1;
});

arrays:
Shifting is equivalent to popping, but working on the first element instead of the last.The shift() method removes the first element of an array (and "shifts" the other elements to the left ie to a lower index.):
The shift() method returns the value that was "shifted out":

The unshift() method adds a new element to an array (at the beginning), and "unshifts" older elements ie to a higher index.: 
The unshift() method returns the new array length.

Array Mtds -- Array.isArray() tests if a variable is an array
slice()
this mtd does not modify the original array
slice(start) -- start Parameter is Optional
slice(start, end) -- excluding the end index

splice() -- 
The splice() method adds and/or removes array elements.
The splice() method overwrites the original array.
returns An array containing the removed items (if any).
Syntax
array.splice(index, howmany, item1, ....., itemX)

splice(start)
splice(start, deleteCount)
splice(start, deleteCount, item1)
splice(start, deleteCount, item1, item2, itemN)

/"Splice mtd removes any number of consecutive elements from anywhere in an array."/
let array = ['today', 'was', 'not', 'so', 'great'];

array.splice(2, 2);
// remove 2 elements beginning with the 3rd element
// array now equals ['today', 'was', 'great']

The splice() method returns an array with the deleted items: 
The splice() method can also be used to add new items to an array: 
const fruits = ["Banana", "Orange", "Apple", "Mango"];
fruits.splice(2, 0, "Lemon", "Kiwi");
New Array:
Banana,Orange,Lemon,Kiwi,Apple,Mango

const fruits = ["Banana", "Orange", "Apple", "Mango"];
fruits.splice(2, 2, "Lemon", "Kiwi");
New Array:
Banana,Orange,Lemon,Kiwi

The first parameter (2) defines the position where new elements should be added (spliced in).
The second parameter (0) defines how many elements should be removed.
The rest of the parameters ("Lemon" , "Kiwi") define the new elements to be added.

The slice() method returns a shallow copy of a portion of an array into a new array object selected from start to end (end not included)

// array.slice(start, end)
const FRUITS = ["Banana", "Orange", "Lemon", "Apple", "Mango"];
var citrus = FRUITS.slice(1, 3);
// citrus => [ 'Orange', 'Lemon' ]

// Negative values slice in the opposite direction
var fromTheEnd = FRUITS.slice(-3, -1);
// fromTheEnd => [ 'Lemon', 'Apple' ]

The slice() method slices out a piece of an array into a new array.
This example slices out a part of an array starting from array element 1 ("Orange"):
const fruits = ["Banana", "Orange", "Lemon", "Apple", "Mango"];
const citrus = fruits.slice(1);
The slice() method creates a new array.
The slice() method does not remove any elements from the source array.


   employees = [
    { empID: 1, empName: 'babafemi' },
    { empID: 2, empName: 'Tudor' },
    { empID: 3, empName: 'oluchi' },
    { empID: 4, empName: 'deji' },
  ];

        this.array = employees.map(item => {
          return {
            $key: item.key,
            ...item.empID
          };
        });
      console.log(this.array);

[ { '$key': 1, empID: 1, empName: 'babafemi' },
  { '$key': 2, empID: 2, empName: 'Tudor' },
  { '$key': 3, empID: 3, empName: 'oluchi' },
  { '$key': 4, empID: 4, empName: 'deji' } ]


Use the splice() method to empty an array in TypeScript, e.g. arr. splice(0) . or A.splice(0,A.length)
To empty an array in TypeScript, reassign the variable storing the array and set it to an empty array, e.g. arr = [] . ...
To empty an array in TypeScript, set its length property to 0 

let aray = [1,2,3,4,5,6,7,8,9,10];

//as with most coding there are several ways you can do anything
//see whichever works best for your scenario

//set the array to equal a blank array
array = [];

//set the array's length to 0
array.length = 0;

//using splice, starts at index 0 & removes everything up to and including that last index 
array.splice(0, array.length);

//map or loop through and shift() or pop();
//goes through the array one at a time and removes the last item each time
array.map( () => array.pop());

//goes through the array one at a time and removes the first item each time
array.map( () => array.shift());

tabIndex="-1" for surname txtbox to recv focus in pop up dialog
firebase explorer ext
diff btw firebase and firestore
Firestore is a NoSQL database that is part of the Firebase app development platform.
Is firestore the same as Firebase?
https://firebase.google.com/docs/database/rtdb-vs-firestore
Cloud Firestore is Firebase's newest database for mobile app development. It builds on the successes of the Realtime Database with a new, more intuitive data model. Cloud Firestore also features richer, faster queries and scales further than the Realtime Database. Realtime Database is Firebase's original database.

date not showing on inv page -- clearing online
subTotal | number: '1.2-2'

https://mail.yahoo.com/d/folders/1/messages/165309 -- turing

Acct No: 0006905287
Babafemi Omage
GTBank

Kindly send the alert. 
Thanks as always

In a reactive (rx) form, angular uses rxjs behind the hood and treats the form as a rx realtime stream. 

Javascript
let today = new Date().toLocaleDateString()
console.log(today)

var today = new Date();
var date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();
console.log(date)
// output 2021-7-9

DateTime today = DateTime.Today; -- C#
DateTime.Now.ToString("M/d/yyyy");
hh:mm:ss gives the time. DateTime.Now.ToString("M/d/yyyy hh:mm:ss");
DateTime.Now.Date.ToShortDateString()

unit test in c#
AddSingleton, Addscoped AddTransient -- pt 44 asp.net core tut -- venkat
solid principle

In JavaScript, an operator is a special symbol used to perform operations on operands (values and variables). For example, 2 + 3; // 5. Here + is an operator that performs addition, and 2 and 3 are operands.

create directive in angular
ngDoCheck
ngAfterContentCheck
ngAfterViewCheck

NIN: 55564349681 -- 555-6434-9681

public class Item {
  public int Id { get; set; }
  public string Name { get; set; }
  public string Description { get; set; }
}

List<Item> items = new List<Item>()
{
    new Item{ Id=1, Name="Ball", Description="Hello" },
    new Item{ Id=2, Name="Hat", Description="Test" }
}

static polymorphism -- is implemented by mtd overloading -- compile time
dynamic polym -- is impl by mtd overiding -- happens at run time

Algorithm (/ˈælɡərɪðəm/ ( listen)) is a finite sequence of well-defined instructions, typically used to solve a class of specific problems or to perform a computation. Algorithms are used as specifications for performing calculations and data processing.

Data structure is a storage that is used to store and organize data. It is a way of arranging data on a computer so that it can be accessed and updated efficiently. Depending on your requirement and project, it is important to choose the right data structure for your project.
Example: Arrays,lists, Stack, Queue: Example: Tree, ...

Higher order fn (HOF) is a fn that takes a fn as an arg or returns a fn
<ng-content></ng-content> is a placeholder where angular projects content eg from parent to child comp
in TS undefined value is for backward compatitbility, use null value henceforth
C:\Users\Administrator\source\repos\payrol\Payroll\bin\Debug\Reports\Logo.jpg

acct opening bal
budget
flushAcct sproc -- use update for COA and not del
-- exec [Flush_Prev_AccountingPeriod_Multiple] '12/2021'

$ ng new count-down-timer --defaults
idempotent url -- when both req and res url are same eg during put operation
for non idempotent use post mtd
Client Controlled -- client generates IDs
server Controlled -- server generates IDs
JSON is a simple data exchange format that helps to communicate btw JS (in the browser) and server side techs eg asp.net core , php
ElementRef is a wrapper around native element inside of a view -- inject and use it to manipulate native elements
@HostBinding & @HostListener are better than elementRef 
@HostListener () fn decorator helps you to handle events of host element in the directive class -- 
@HostListener('mouseenter') onMouseEnter(){this.color='yellow'}
@HostListener('mouseleave') onMouseLeave(){this.color='green'}	

@HostBinding() fn decorator helps you to set properties of host element in the directive class -- @HostBinding('style.backgroundcolor') color
	ngOnInit(){this.color='green';}

Dim strDate As DateTime
strDate = DateTime.Parse(StartDateTextBox.Text, System.Globalization.CultureInfo.CreateSpecificCulture("en-GB").DateTimeFormat)
Dim formatInfo As New System.Globalization.DateTimeFormatInfo()
formatInfo.LongDatePattern = "MM/dd/yyyy"
Dim strStartDate As String = strDate.ToString("MM/dd/yyyy", formatInfo)
strSQL = strSQL & " AND [StartDate] <= '" + strStartDate + "'"
And It worked like a charm!!!!!!!!

I tried: Format="MM/dd/yyyy"
And
Dim culture As CultureInfo = New CultureInfo("en-US")
Dim SDate As DateTime = Convert.ToDateTime(StartDateTextBox.Text, culture)

Dim culture As CultureInfo = New CultureInfo("en-US")  'for mm/dd/yyyy
 'or Dim culture As CultureInfo = New CultureInfo("en-NZ") 'for dd/mm/yyyy

DateTime dtm = Convert.ToDateTime(string.Format("{0:d}", StartDateTextBox.Text)); 

I think ur date format is mismatching. I think sql server is in MM/dd/yyyy. what format  u r getting from calendar before converting ?

Dim culture As CultureInfo = New CultureInfo("en-US")  'for mm/dd/yyyy
Dim SDate As DateTime = = Convert.ToDateTime(StartDateTextBox.Text, culture)

Keep the date format as "MM/dd/yyyy"

Then while converting into datetime, give culture info also as mentioned in the previous posts.

Dim culture As CultureInfo = New CultureInfo("en-US")  Dim SDate As DateTime = = Convert.ToDateTime( StartDateTextBox.Text, culture )  

Dim strDate As DateTime
strDate = DateTime.Parse(TextBox1.Text, System.Globalization.CultureInfo.CreateSpecificCulture("en-GB").DateTimeFormat)
Dim formatInfo As New System.Globalization.DateTimeFormatInfo()
formatInfo.LongDatePattern = "MM/dd/yyyy"
dim strStartDate as String=strDate.ToString("MM/dd/yyyy",formatInfo)
	
tlb file overwritten in adekoya mach
Babel JavaScript extension
https://mail.yahoo.com/d/folders/1/messages/163670 -- turing
john 3:8 -- the wind bloweth...
4:40 98% -- batt

fbs 94
innocuous -- not harmful or offensive.
Employees Pay Slip PDF Generator System with Email using PHP/OOP Free Source Code -- https://www.sourcecodester.com/php/15242/employees-pay-slip-pdf-generator-system-email-using-phpoop-free-source-code.html?utm_source=feedburner&utm_medium=email

work with a team using github
how to work on same project in github

Basic usage and terms
As a publisher, you create an Observable instance that defines a subscriber function. This is the function that is executed when a consumer calls the subscribe() method. The subscriber function defines how to obtain or generate values or messages to be published.

Observers are simply a set of callbacks, one for each type of notification delivered by the Observable: next, error, and complete. The following is an example of a typical Observer object:

const observer = {
  next: x => console.log('Observer got a next value: ' + x),
  error: err => console.error('Observer got an error: ' + err),
  complete: () => console.log('Observer got a complete notification'),
};

To use the Observer, pass it to the subscribe() mtd of an Observable:
observable.subscribe(observer);
Observers are just objects with three callbacks, one for each type of notification that an Observable may deliver.

When subscribing to an Observable, you may also just provide the next callback as an argument, without being attached to an Observer object, for instance like this:
observable.subscribe(x => console.log('Observer got a next value: ' + x));
Internally in observable.subscribe, it will create an Observer object using the callback argument as the next handler.

Unique features of a subject compared to an observable are:
It is an observer in addition to being an observable so you can also send values to a subject in addition to subscribing to it

In Angular services, I would use BehaviorSubject for a data service as an angular service often initializes before component and behavior subject ensures that the component consuming the service receives the last updated data even if there are no new updates since the component's subscription to this data.

I am little bit confused with example 2 of regular subject. Why the subscription wont get anything even thoug on the second line you send values to subject using subject.next("b")? – 
jmod999
Nov 11, 2016 at 17:45
46
@jmod999 The second example is a regular subject which receives a value right before the subscription is called. In regular subjects, the subscription is only triggered for values received after subscription is called. Since a is received right before subscription, it is not sent to the subscription.
for more info -- https://stackoverflow.com/questions/39494058/behaviorsubject-vs-observable



    of(...items)—Returns an Observable instance that synchronously delivers the values provided as arguments.
    from(iterable)—Converts its argument to an Observable instance. This method is commonly used to convert an array to an observable.


Publishers are the one who publish the data and Subscribers are the ones who consume the data.  			
In Angular applications, the preferred way for event handling or asynchronous programm	ing is by using observables. Observables provide support for data sharing between publishers and subscribers.

  ngOnInit() {  
   // Subscribed here  
    this.subscription.add( 
     this.http.get(this.API).subscribe(  
     res => {  
        this.data = res;  
     } ); 
   ) 
 }  
  ngOnDestroy() {  
   // Unsubscribed the subscription  
  this.subscription.unsubscribe();  
  }   

   subscription$  
    ngOnInit () {  
      const observable$ = rx.Observable.interval(100);  
    // Here subscription will be emitting the result once on initialization     and then will unsubscribe it.  
     this.subscription$ = observable$.pipe(take (1)).  
       subscribe (x => console.log(x))  
      }  


import { of } from 'rxjs';
import { count } from 'rxjs/operators';
let all_nums = of(1, 7, 5, 10, 10, 20);
let final_val = all_nums.pipe(count());
final_val.subscribe(x => console.log("The count is "+x));

BehaviorSubject Requires an initial value and emits the current value to new subscribers
The RxJS Subscribe operator is used as an adhesive agent or glue that connects an observer to an Observable.

Subjects are used for multicasting Observables. This means that Subjects will make sure each subscription gets the exact same value as the Observable 

One of the variants of the Subject is the BehaviorSubject. The BehaviorSubject stores the “current” value. This means that you can always directly get the last emitted value from the BehaviorSubject.

An Observer is an object that can get data from a data source (an Observable )
In Angular applications Observables will be connected to observers and whenever they observe a new value or change in data, they will execute code with the help of Subscription and all the subscribed components will receive the updated outcome.16 Feb 2021

An Observable instance begins publishing values only when someone subscribes to it. You subscribe by calling the subscribe() method of the instance, passing an observer object to receive the notifications.

A BehaviorSubject holds one value (so we actually need to initialize a default value). When it is subscribed it emits that value immediately. A Subject on the other hand, doesn't hold a value.11 Apr 2017

This Microsoft ACE OLEDB 12.0 connection string can be used for connections to Excel 2007, Excel 2010 and Excel 2013. Connect to Excel 2007 (and later) ...

Office11 folder is the internal name for Office 2003, Office12 that for Office 2007 and Office14 that for Office 2010. office16 for office 2016

rxjs subscription, subject, behaviorSubject, Observable, Of	
ngx-countdown -- timer -- https://www.npmjs.com/package/ngx-countdown
TypeScript icon, indicating that this package has built-in type declarations

setTimeout() //executes the code after x seconds.
.setInterval() //executes the code **every** x seconds.

setTimeout allows us to run a function once after the interval of time.
setInterval allows us to run a function repeatedly, starting after the interval of time, then repeating continuously at that interval.


var intervalID = setInterval(alert, 1000); // Will alert every second.
// clearInterval(intervalID); // Will clear the timer.

setTimeout(alert, 1000); // Will alert once, after a second.
setInterval(function(){ 
	console.log("Oooo Yeaaa!");
}, 2000);//run this thang every 2 seconds


setTimeout(function(){
 	alert("Sup!"); 
}, 2000);//wait 2 seconds



if SUBSTRING (@period,1,2)= '01' --((right('00'+CONVERT([varchar](2),@monthcounter,(0)),(2))+'/')+right('00'+CONVERT([varchar](4),@periodyr,(0)),(4)))

Be sure you are using the correct ODBC Administrator tool. On 32-bit and 64-bit Windows, the default ODBC Administrator tool is in c:\Windows\System32\odbcad32.exe. However, on a 64-bit Windows machine, the default is the 64-bit version. If you need to use the 32-bit ODBC Administrator tool on a 64-bit Windows system, you will need to run the one found here: C:\Windows\SysWOW64\odbcad32.exe

C:\Windows\SysWOW64\odbcad32.exe -- to see 32bit drivers on 64bit mach

cN.Open ("Provider=Microsoft.Jet.OLEDB.4.0;" & _
                   "Data Source=" & path & ";" & _
                   "Extended Properties=""text; HDR=Yes; FMT=Delimited; IMEX=1;""")
        sConn = "Driver={Microsoft Excel Driver (*.xls, *.xlsx, *.xlsm, *.xlsb)};" & "DBQ=" & strFileOpen

ang 6 tut -- modules pt 31... venkat

run edited val removal on mdi load -- smartAccts
make p&L rpt  drill down
close acct prd not reflect in toolbar
button to import into journal from excel

Async-await
An async function can contain an await expression, that pauses the execution of the async function and waits for the passed Promise's resolution, and then resumes the async function's execution and returns the resolved value.

In simple term, you shall get an opportunity to write an asynchronous code in synchronous fashion.

basic nature of promise.
Example 1
Let’s consider a simple example. A function which returns a promise resolving after two seconds and returning value being passed as an argument.
resolveAfter2Seconds(x) {
    return new Promise(resolve => {
      setTimeout(() => {
        resolve(x);
      }, 2000);
    });
  }
Using promise, we can get the value using “then” callback function.
  getValueWithPromise() {
    this.resolveAfter2Seconds(20).then(value => {
      console.log(`promise result: ${value}`);
    });
    console.log('I will not wait until promise is resolved');
  }
In above case, console.log() on line 5 shall be executed before console.log() on line 3. That’s the basic nature of promise.

Now let’s see async-await usage.
async getValueWithAsync() {
    const value = <number>await this.resolveAfter2Seconds(20);
    console.log(`async result: ${value}`);
  }
Few points to note here:
Line 1 — Function is prefixed with “async” keyword. It is mandatory to use this prefix if your function has “await” keyword.
    Line 2 — We are not calling “.then()” callback function after promise function. Instead we are prefixing function call with “await” keyword. This keyword shall not allow next code block to execute. That means, console.log() at line 3 will get printed only when promise is resolved on line 2 just like a synchronous function call.
Since we are using Typescript, we need to type cast promise return value to specific type, hence <number> on line 2.

 getDataUsingPromise() {
    this.httpClient.get<Employee>(this.url).toPromise().then(data => {
      this.promiseResult = data;
      console.log('Promise resolved.')
    });
    console.log('I will not wait until promise is resolved..');
  }

  async getAsyncData() {
    this.asyncResult = await this.httpClient.get<Employee>(this.url).toPromise();
    console.log('No issues, I will wait until promise is resolved..');
  }



     <div class="row">
        <div class="form-group col-sm-7 mb-3">
          <label for="bDate">InvoiceDate</label>
          <input
            type="date"
            data-date-inline-picker="true"
            data-date-format="dd-mm-yy"
            placeholder="dd-mm-yy"
            id="bDate"
            formControlName="bDate"
            class="form-control"
            [ngClass]="{
              'is-invalid': submitted && formControls['bDate'].errors
            }"
          />
          <div
            class="invalid-feedback"
            *ngIf="submitted && formControls['bDate'].errors"
          >
            <label *ngIf="formControls['bDate'].errors['required']"
              >This field is required.</label
            >
          </div>
        </div>

        <div class="form-group col-sm-5 mb-3">
          <label for="bDate">InvoiceNo</label>
          <input
            type="text"
            id="billNO"
            formControlName="billNO"
            class="form-control"
            [ngClass]="{
              'is-invalid': submitted && formControls['billNO'].errors
            }"
          />
          <div
            class="invalid-feedback"
            *ngIf="submitted && formControls['billNO'].errors"
          >
            <label *ngIf="formControls['billNO'].errors['required']"
              >This field is required.</label
            >
          </div>
        </div>
      </div>


jeep rwt test with vio b4 15th mar
edi -- mitchelle
observable is async data stream
observer listens or subscribes to the observable
they are both rxjs objects
rxjs is used in http calls
navigate user to edit route
json-server -- fake rest api -- npm install -g json-server
online fake api -- pt 63 angular crud tut
function isEmpty(obj) {    return Object.keys(obj).length === 0;}
this.reactiveForm.get("firstname").setValue("", { emitEvent: false });
this.reactiveForm.get("firstname").setValue("", { onlySelf: true });

https://jdpclagosarch.org/
Justice, Development and Peace Commission
19, Maye Street, off Commercial Ave 
0803 650 0769
https://buyasp.net/erp-software-source-code-c-sharp
https://www.sourcecodester.com/c/13345/simple-accounting-system.html
https://www.sourcecodester.com/php/14893/budget-and-expense-tracker-system-php-free-source-code.html
https://www.dummies.com/article/business-careers-money/business/accounting/general-accounting/cost-accounting-budgeting-basics-166823
https://github.com/topics/budget?l=c%23

Thank you for placing an order on Jumia!
Order Nº 375636533

uk used laptop
Maryland Mall 350-360 Ikorodu Road Anthony Lagos NG, 100231, Lagos
07061989638
https://shopinverse.com/

rs75 -- $1

vwhRevenueForAccts -- for pos

The privacy and security of your Bank Account details is important to us. If you would prefer that we do not display your account balance in every transaction alert sent to you via email please dial *737*51*1#.

if Remainder (RecordNumber, 10) = 0 then true else false

take attnd -- dr agagu -- sat
eye glasses -- ishaq
burn music to cd

ng g c invoices/invoice --skipTests
ng generate class hero --type=model. will result in: hero.model.ts.

Fix 404 Error with Url Rewrite extension and web.config
iis url rewrite -- download and install -- for angular deployment in iis
web.config is also nece.
Url ReWrite Extension Download Link : 
► https://www.iis.net/downloads/microsoft/url-rewrite
Web Config XML : 
////////////////////////////////////////
<?xml version="1.0" encoding="utf-8"?>
    <configuration>
      <system.webServer>
        <rewrite>
          <rules>
            <rule name="Angular Routes" stopProcessing="true">
              <match url=".*" />
              <conditions logicalGrouping="MatchAll">
                <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="true" />
                <add input="{REQUEST_FILENAME}" matchType="IsDirectory" negate="true" />   
              </conditions>
              <action type="Rewrite" url="/imagegallery/" />
            </rule>
          </rules>
        </rewrite>
      </system.webServer>
    </configuration>

///////////////////////////////////////////////////////

Hp ProLiant DL380 G10 5218 Xeon Gold 32GB HDD SSD 16 Cores 8xSFF Server
₦ 4,100,000
DELL Inspiron laptop precisely

ng serve --port 4401    
How do I run an Angular project on a specific port?

    Navigate to angular.json file.
    Search for the "serve" field.
    Under "serve" it will be the "options" field (if not exist add the options field).
    Add this line to "options": "port": 4333(any port that you want).

"projects": {
    "project-name": {
        ...
        "architect": {
            "serve": {
                "options": {
                  "host": "0.0.0.0",
                  "port": 5000
                }
            }
        }
        ...
    }
}


sage cloud --  USD20 per month / 220 pa
voter transfer, requests for replacement of Permanent Voters Cards, and update of voter information record.
how to Run asp.net core web api and Angular on the same Port 
<form novalidate autocomplete="off" #form="ngForm" (submit)="onsubmit(form)">
-- #fullname="ngModel"
toastr.info() -- for sucessful update
toastr.error("Del Sucess",'Clearing') 
ng g g c -s --skipTests
force strict mode error: has no initializer and not assigned in constructor 
soln: strictPropertyInitialization: false in tsconfig file 
ctrl B to open/close file explorer
emmet abbreviation
<div class="form-row"></div> used to place 2 inputs on same row

https://mail.yahoo.com/d/folders/1/messages/161577 -- turing

https://mail.yahoo.com/d/folders/1/messages/161078 -- linkedIn Jobs
oleXP ScalingModule (Module2) 

ul
{
  list-style: none;
}

html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }

decimal[] decimalNumbers = { 1.0M, 1.01M, 1.0010M, 0.00M, 1.0050M};
jQuery Select2 plugin -- https://select2.org/
Access to the path 'bin\Debug\net6.0\ ... apphost
The FromSql function belongs to the Microsoft.EntityFrameworkCore namespace. 
The FromSql function accepts the following two parameters:
1. SQL Query – SQL Query to execute the Stored Procedure.
2. Parameters – One or more objects of SqlParameter class.         

using System.Linq;
using System.Data.SqlClient;
using Microsoft.EntityFrameworkCore;
 
namespace Search_EF_MVC_Core
{
    public class DBCtx : DbContext
    {
        public DBCtx(DbContextOptions<DBCtx> options) : base(options)
        {
        }
 
        public DbSet<Customer> Customers { get; set; }
 
        public IQueryable<Customer> SearchCustomers(string contactName)
        {
            SqlParameter pContactName = new SqlParameter("@ContactName", contactName);
            return this.Customers.FromSql("EXECUTE Customers_SearchCustomers @ContactName", pContactName);
        }
    }
}

@id int output
SET NOCOUNT ON;
SET @id=SCOPE_IDENTITY()
RETURN  @id


0000000000000000000000000000000000000000


using (SqlCommand cmd = new SqlCommand("UPDATE Persons SET City = @City WHERE Name = @Name", con))
    {
        cmd.CommandType = CommandType.Text;
        cmd.Parameters.AddWithValue("@Name", name);
        cmd.Parameters.AddWithValue("@City", city);
        con.Open();
        int rowsAffected = cmd.ExecuteNonQuery();
        con.Close();
    }

public partial class AppDBContext
{
    public DbSet<TicketSummary> TicketSummaries { get; set; }

    public void OnModelCreatingPartial(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<TicketSummary>().HasNoKey();

    }
}

In this example, TicketSummary class is used to retrieve results from a raw SQL query. In that query, I make a join and cherry-pick a few columns. That is it. I have no such table called TicketSummary in my database. Instead, I used FluentApi to specify that there is no key for the entity.
            
If Not connection Is Nothing Then connection.Dispose()
connection.Close()

var productCategory= new SqlParameter("productCategory", "Electronics");
var product = context.Product
.FromSql("EXECUTE dbo.GetProductByName  @productCategory", productCategory)
.ToList();

There are certain limitations to execute RAW SQL queries or stored procedures.You can’t use it for INSERT/UPDATE/DELETE. if you want to execute INSERT, UPDATE, DELETE queries, use the ExecuteSqlCommand
var categoryName = "Electronics";
dataContext.Database.ExecuteSqlCommand("dbo.InsertCategory @p0", categoryName);

Create the model you want to use for your output. This model will represent the output, not a table in the database.
namespace Example.EF.Model
{
    public class Sample
    {
        public int SampleID { get; set; }
        public string SampleName { get; set; }
    }
}

Then add to your context a new DBSet with your model:
public virtual DbSet<Sample> Sample { get; set; }
And then do as above, and use your model for the output:

var products = _samplecontext.Sample.FromSql($"EXEC ReturnAllSamples {id}, {startdate}, {enddate}",idVal,date1,date2).ToList(); -- FromSqlInterpolated

dbcontext.Employee.FromSql("InsertEmployee @emp @date1 @date2 ", employee date1 date2);

So doing this way, whenever we generate models using EF then we need to add manually the dbset everytime? – 
You can have them in a different file with partial class, to make it easier. – 

.FromSql("EXECUTE dbo.GetProductByCategory {0}", productCategory)
List<Employee> employees = dbcontext.Employee.FromSql("GetAllEmployees").ToList();
But for Create, Update, and Delete, we use ExecuteSqlcmd like the one below:
var employee = "Harold Javier";
dbcontext.Employee.ExecuteSqlCommand("InsertEmployee @emp", employee);

To call a stored procedure and get the result into a list of model in EF Core, we have to follow 3 steps.
Step 1. You need to add a new class just like your entity class. Which should have properties with all the columns in your SP. For example if your SP is returning two columns called Id and Name then your new class should be something like
public class MySPModel
{
    public int Id {get; set;}
    public string Name {get; set;}
}

Step 2.

Then you have to add one DbQuery property into your DBContext class for your SP.
public partial class Sonar_Health_AppointmentsContext : DbContext
{
        public virtual DbSet<Booking> Booking { get; set; } // your existing DbSets
        ...

        public virtual DbQuery<MySPModel> MySP { get; set; } // your new DbQuery
        ...
}

Step 3.

Now you will be able to call and get the result from your SP from your DBContext.

var result = await _context.Query<MySPModel>().AsNoTracking().FromSql(string.Format("EXEC {0} {1}", functionName, parameter)).ToListAsync();

--------------------------------------

A Task can represent an asynchronous operation and a Task provides an abstraction over creating and pooling threads.
i would like to add my example. In my website, i made all the action methods as Task<ActionResult> and made all the db calls async. The website really started loading faster

for (int i = 0; i < reader.FieldCount; i++)

----------------------------------------------------

SPToCore repository pattern venkat
angular crud tut -- venkat -- post and edit
angular 6 tut -- venkat -- post and edit
migration for identityserver4

SPToCore.exe scan -cnn "Data Source=Logic;Initial Catalog=sapidBilling;Persist Security Info=True;User ID=smart;Password=smartsys;" -sch dbo -nsp SPToCoreTest -ctx ApplicationDbContext -sf Models -pf C:\Users\Administrator\source\repos\ClearingAPI\ClearingAPI\Models\ -f SPToCoreContext.cs

class="thead-light" style for headers -- use it for add butt in template
read-only input fld -- see master-detail pt 1
ctrl+k -- all keys in vscode
ctrl+P -- cmd pallete (cmdPal or cp))
type @ in cp to see all mtds in the current ts file
ctrl K Z -- zen mode
quokka bookmark auto rename tag exts
add js doc comments better comments

alt + up/down moves the line up/down
alt+ sht copies the line up/down

Email: ['', [Validators.required, Validators.pattern(this.EMAIL_REGEX)]]
An invalid Angular control has the CSS class named 'ng-invalid'.
Under DevTools in Chrome, select Console tab.
In console prompt run the following cmdin order to get the invalid Angular controls that bear the CSS class 'ng-invalid'

Now, in angular 9, you can use the markAllAsTouched() method to show the invalid controls validators:
this.AddCustomerForm.markAllAsTouched();

document.getElementsByClassName('ng-invalid')
ExecuteSqlcmd vs ExecuteSqlRaw

Disable type checking using $any()
<input type="text" (change) = "setNewUserName($any($event.target).value)"/>

Angular 13 responsive dashboard with sidebar in 5 min using angular material -- https://www.youtube.com/watch?v=38tTNmBXhDQ

Good Morning Madam,
Im yet to see alert (=N=355,000) 
for SmartDoctor Support/Maint
Please send it
Acct No: 0006905287
Omage Babafemi
GTBank

context.Database.ExecuteSqlCommand("DELETE FROM Table WHERE ID = @p0", id);
await context.Database.ExecuteSqlCommandAsync("DELETE FROM Table2 WHERE ID = @p0", id);
context.Database.ExecuteSqlRaw("SELECT * FROM [dbo].[SearchBlogs]({0})", userSuppliedSearchTerm)
var customers = Context.Customers.SqlQuery("SELECT * FROM Customers").ToList();
var rowsAffected = Context.Database.ExecuteSqlCommand("INSERT INTO Customers (Name) VALUES ('Dharmendra'));

pass a real product ID as the second element. For now, because you're just adding a new product, pass a minus one (-1).
add() {
  this.router.navigate(['/productDetail', -1]);
}
<div class="panel panel-primary" *ngIf="product">
  <div class="panel-heading">
    <h1 class="panel-title">Product Information</h1>
  </div>
  <div class="panel-body">
  </div>
  <div class="panel-footer">
  </div>
</div>

updateProduct(product: Product) {
  this.productService.updateProduct(product).subscribe(() => this.goBack(),
  errors => this.handleErrors(errors));
}

Angular's readonly property: [readonly]="true"

          <div class="form-group">
          <label>{{"EmailAddress" | localize}}</label>
            <input class="form-control" type="email" name="emailAddress" [(ngModel)]="person.emailAddress" required maxlength="255" pattern="^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{1,})+$">                        
          </div>
{{"Cancel" | localize}}

<input [readonly]="this.isEditable">

set isDisabled(value: boolean) {
 this._isDisabled = value;
 if(value) {
  this.form.controls['name'].disable();
 } else {
    this.form.controls['name'].enable();
  }
}

For input use [readonly] rather than [disabled] and it'll work

// In Angular 
// Html
<p>{{myDate | date: 'dd-MM-yyyy'}}</p>
// Typescript
myDate: Date = new Date();

https://mail.yahoo.com/d/folders/1/messages/159739 -- turing

[HttpGet]
public IActionResult Get() => Ok(_todoItemStore.GetList());

If you want this option only for specific action, using System.Text.Json
return new JsonResult(myResponseObject) { SerializerSettings = new JsonSerializerOptions() { WriteIndented = true } };

Install-Package Dapper.Transaction
page 134 -- startup.cs -- configuration file values 
jwt issuer (sts url) and audience (token recipient/target eg web api, webService)
https://localhost:7118/api/consignees
https://localhost:7118/api/consigneeGroups
Dapper Transaction library
Dapper Plus is a NuGet library
transaction in ef core .net 6 sproc and views
add pri key to all tbls in sapidbilling b4 scaffold-dbContext
some map filter splice slice => array mtds
sqlservertutorial.net
asp.net core web api with dapper
Does .NET Core support database first?
NET Core. Entity Framework Core supports Database-First approach via the Scaffold-DbContext cmd of Package Manager Console. This cmd scaffolds a DbContext and entity type classes for a specified database.

install below nuget packages first:
Microsoft.EntityFrameworkCore
Microsoft.EntityFrameworkCore.Tools
Microsoft.EntityFrameworkCore.SqlServer

PM> Scaffold-DbContext "Server=.;Database=DatabaseName;User Id=sa;Password=sasa;" Microsoft.EntityFrameworkCore.SqlServer -OutputDir Models -Force

PM> Scaffold-DbContext "Server=.\;Database=AdventureWorksLT2012;Trusted_Connection=True;" Microsoft.EntityFrameworkCore.SqlServer -OutputDir Model -Context "AdventureContext" -DataAnnotations

https://www.entityframeworktutorial.net/efcore/create-model-for-existing-database-in-ef-core.aspx

What is Scaffold-DbContext?
Reverse engineering is the process of scaffolding entity type classes and a DbContext class based on a database schema. It can be performed using the Scaffold-DbContext cmd of the EF Core Package Manager Console (PMC) tools or the dotnet ef dbcontext scaffold cmd of the . NET Command-line Interface (CLI) tools.17 Dec 2021

*ngIf="inspection.ID!=0" disabled
*ngIf="snoVal!= null" disabled 
modal dialog 02:03:00 --.net6 angular, web api -- insert
modal dialog 12:35 --insert
17:00 show msg at footer -- Paging, Sorting and Filter Operation
mr solo proposal
error handling -- web api / angular
matTable renderRows() method
MatTable expand-collapse, custom templating
ps 29 30 46
renew veh lic insurance and rwcert -- call lady
move nav bar to home comp and implement child route -- login and logout ang 5 -- codAffection
datatable, nav tabs -- codevolution
tabbed card bootstrap
>se font size of nav
 
angular server side pagination
Angular 12 Material Datatable Print, Export
Install angularx-qrcode npm Package -- npm install angularx-qrcode --save

The primitive types in C# are Boolean ( bool ), Byte ( byte ), SByte ( sbyte ), Int16 ( short ), UInt16 , Int32 ( int ), UInt32 ( uint ), Int64 ( long ), UInt64 ( ulong ), IntPtr , UIntPtr , Char ( char ), Double ( double ), and Single ( single ).21 Jan 2010

modal Dialog
Then make sure you have added the DialogBoxComponent under the declarations array in the app.module.ts file.

class=btn btn-secondary float-end"
<a mat-icon-button (click)="$event.stopPropagation()">
  <mat-icon>edit</mat-icon>
</a>
By default click event bubbles through the DOM tree and is being fired on every layer.
You have to stop the propagation of the event.

    <a mat-icon-button (click)="edit($event)">
        <mat-icon>edit</mat-icon>        
      </a>


  edit(e) {
    e.stopPropagation();
    console.log('edit');

Dial the GTbank code for locking bank accounts *737*51*74# Provide the number registered with your GTbank account (i.e. the number you receive bank alerts with) and also your 737 PIN.18 May 2020

0006094884 -- swiftng gtBank Acct

what is angular schematics
A schematic is a template-based code generator that supports complex logic. ... The schematic collection can be a powerful tool for creating, modifying, and maintaining any software project, but is particularly useful for customizing Angular projects to suit the particular needs of your own organization.
https://angular.io/guide/schematics
eg:
ng generate @angular/material:navigation <component-name>
ng generate @angular/material:dashboard <component-name>
ng generate @angular/material:address-form <component-name>

Glock
AngularFire -- official library for firebase and Angular
6940386200080 --barcode completion -- sat
drugAvail & expire not called using barCode
auto close for acct period/yr
Loading Indicator -- spinner -- venkat
Router Nav events -- venkat
>se size of vscode -- zoom -- ctrl+= and ctrl + - for <se

prompt $$ -- shorten long folder path
angular 13 project defaults to home
mat icon -- 20:50 -- login and logout ang 5 -- codAffection
new httpHeaders () -- 1:00:40, 1:04:40 -- login and logout ang 5 -- codAffection
return this.http.get({headers: new httpHeaders({
'content-type: 'application/json',
'Authorization': 'Bearer ' + localStorage.getItem('userToken'),
}) })

reactivate accessbank acct
setup sales team

We are happy to inform you that our delivery agent has delivered a package with order 324133453, and tracking number JG-NJS-324133453-2089. 

spin kit css library
bg-blue: #7599b3
https://materializecss.com/
Angular Tutorial - 27 - Optional Route Parameters

gtBank $ Acct MFM: 0225262613
gtBank $ USSD MFM: *737*000*807 + amt#
<img src="..." class="rounded float-left" alt="...">
<img src="..." class="rounded float-right" alt="...">

<p class="text-left">Left aligned text on all viewport sizes.</p>
<p class="text-center">Center aligned text on all viewport sizes.</p>
<p class="text-right">Right aligned text on all viewport sizes.</p>
<p class="text-justify">Right aligned text on all viewport sizes.</p>

<div class="text-nowrap" style="width: 8rem;">
  This text should overflow the parent.
</div>

text transform
<p class="text-lowercase">Lowercased text.</p>
<p class="text-uppercase">Uppercased text.</p>
<p class="text-capitalize">CapiTaliZed text.</p>

<p class="font-weight-bold">Bold text.</p>
<p class="font-weight-normal">Normal weight text.</p>
<p class="font-weight-light">Light weight text.</p>
<p class="font-italic">Italic text.</p>

optional route param is not part of the route defiinition but route parameter is
the param is optional bcos its existence does not affect our view. but can be used to apply some logic to the view
localhost:4200/depts:id=3 <> localhost:4200/depts/3

absolute nav path begins with a '/' -- hardcoded
relative nav path is flexible -- post prod modifications

ctrl + D D D ...enables edit of a word on same line
https://mail.yahoo.com/d/search/emailAddresses=contactcenter%2540accessbankplc.com&emailAddresses=no_reply%2540accessbankplc.com&emailAddresses=no-reply%2540accessbankplc.com&emailAddresses=noreply%2540accessbankplc.com&listFilter=FROM&contactIds=0000.00c9/messages/155059
-- accessbank
https://mail.yahoo.com/d/folders/1/messages/157226 -- paystack api
https://mail.yahoo.com/d/folders/1/messages/157313 -- paystack api

Pastor Kehinde Samuel Adegbolahan -- sis emeh
pastorkehindeadegbolahan@gmail.com
Math.floor(100000+Math.Random()*900000).toString();
providedIn: 'root'
photocopy sienna docs
pharm pos -- tubi -- mon

npm install ngx-toastr --save
npm install @angular/animations --save

ML with JS
Nisha singla
steam morn and night
accessBank activate
upload to youtube
link gmail to yahoo
create gmail acct: logicversion@gmail.com
reactive forms validation
how to restore mssql database to azure

angular localstorage vs sessionstorage

angular services are singleton
ASP.NET Core 6 REST API Tutorial | MongoDB Database -- venkat
NET 5 REST API Tutorial -- venkat
How To Create A Search Bar In JavaScript -- kyle

Publishable key
pk_test_51KKgZwJMD57vFeJk67MP4AvFwQ1e2bgVniCBgjjCUokz5IrwaXBYTNedMYhZk7mvqevhR9ZDwikcmVLuqwHxHv2h00hdmhOx3j

Secret key
sk_test_51KKgZwJMD57vFeJkYKujqM5qBNYD0mTPmaH79MNk5cWoLYcTsNZNl56PnaavNRVUsyf27CP9NfumXnES9LiSxUFD00ueR7iMSq

Angular with payment solution
angular with payment gateway integration in nigeria -- paystack stripe
https://stripe.com/ -- Stripe APIs -- base url -- https://api.stripe.com
https://stripe.com/docs/api
nuget install Stripe.net
https://stripe.com/docs/api/authentication?lang=dotnet
https://www.youtube.com/playlist?list=PLy1nL-pvL2M4cNNoUtjWevYSci4ubsbhC
https://github.com/stripe/stripe-dotnet
https://github.com/stripe/stripe-dotnet.git

what is an Api Key 
An API key is a simple encrypted string that identifies an application without any principal. They are useful for accessing public data anonymously, and are used to associate API requests with your project for quota and billing.
its a code used to identify and authenticate an application or user. API keys are available through platforms, ...

Some APIs use API keys for authorization. An API key is a token that a client provides when making API calls. The key can be sent in the query string: ... api_key=abcdef12345.

It is better to use API Key in header, not in URL. URLs are saved in browser's history if it is tried from browser.3 Apr 2011

How do I use API key in Postman?
In the request Authorization tab, select API Key from the Type list. Enter your key name and value, and select either Header or Query Params from the Add to dropdown list. You can store your values in variables for additional security.19 Nov 2021

https://paystack.com
https://paystack.com/developers

Azure and Docker with Questpond
https://azure.microsoft.com/en-us/get-started/welcome-to-azure/?subscriptionId=8df14a8f-ca0c-463f-b929-ee9c9ff1858b

Github
Telemedicine

lagos postal code -- 102273
https://localhost:44369
https://localhost:44369/
http://localhost:65351/

JSON is a textual representation of data, just like XML, YAML, CSV, and others. To work with such data, it first has to be converted to JavaScript data types, i.e. arrays and objects 

http://localhost:46568/
cloud computing image for sapid
What is service worker in angular?
encapsulation implements abstraction
put nose mask in pouch

properties and methods of an Object in javascript
properties and methods of an Array in javascript
how to convert array to object and vice versa in javascript
diff btw typeof and instanceof in js

buy socks 

1:40:00
1:44:00
0:30:00 -- routing
0:47:50 -- prepend
return JSON("Data");
how to specify a port number for asp.net core dev server
how to enable cors in asp.net core web api

public async Task<ActionResult<T>>
master detail http post in Angular
ng g cl models/customer --type=model
fontAwesome - BootstrapCDN by stackPath
npm install ngx-toastr --save -- notification package
requires animation mod

dermalog

What is RxJS tap?
RxJS tap() operator is a utility operator that returns an observable output that is identical to the source observable but performs a side effect for every emission on the source observable. ... This operator is generally used for debugging observables for the correct values or performing other side effects.
As a rule, an Observable does nothing until something subscribes
HttpClient is Angular's mechanism for communicating with a remote server over HTTP.
All HttpClient methods return an RxJS Observable of something.
HTTP is a request/response protocol. You make a request, it returns a single response.
In general, an observable can return multiple values over time. An observable from HttpClient always emits a single value and then completes, never to emit again.
HttpClient.get() returns the body of the response as an untyped JSON object by default. Applying the optional type specifier, <Hero[]> , adds TypeScript capabilities, which reduce errors during compile time.
The server's data API determines the shape of the JSON data. The Tour of Heroes data API returns the hero data as an array.

Other APIs may bury the data that you want within an object. You might have to dig that data out by processing the Observable result with the RxJS map() operator.

To catch errors, you "pipe" the observable result from http.get() through an RxJS catchError() operator.
Import the catchError symbol from rxjs/operators, along with some other operators you'll need later.

getHeroes(): Observable<Hero[]> {
  return this.http.get<Hero[]>(this.heroesUrl)
    .pipe(
      catchError(this.handleError<Hero[]>('getHeroes', []))
    );
}

    

The catchError() operator intercepts an Observable that failed. The operator then passes the error to the error handling function.

The following handleError() method reports the error and then returns an innocuous result so that the application keeps working.
handleError

The following handleError() will be shared by many HeroService methods so it's generalized to meet their different needs.

Instead of handling the error directly, it returns an error handler function to catchError that it has configured with both the name of the operation that failed and a safe return value.
src/app/hero.service.ts
/**
 * Handle Http operation that failed.
 * Let the app continue.
 * @param operation - name of the operation that failed
 * @param result - optional value to return as the observable result
 */
private handleError<T>(operation = 'operation', result?: T) {
  return (error: any): Observable<T> => {

    // TODO: send the error to remote logging infrastructure
    console.error(error); // log to console instead

    // TODO: better job of transforming error for user consumption
    this.log(`${operation} failed: ${error.message}`);

    // Let the app keep running by returning an empty result.
    return of(result as T);
  };
}

After reporting the error to the console, the handler constructs a user friendly message and returns a safe value to the application so the application can keep working.
Because each service method returns a different kind of Observable result, handleError() takes a type parameter so it can return the safe value as the type that the application expects.

Tap into the Observable
The HeroService methods will tap into the flow of observable values and send a message, using the log() method, to the message area at the bottom of the page.
They'll do that with the RxJS tap() operator, which looks at the observable values, does something with those values, and passes them along. The tap() call back doesn't touch the values themselves.

Here is the final version of getHeroes() with the tap() that logs the operation.
src/app/hero.service.ts
/** GET heroes from the server */
getHeroes(): Observable<Hero[]> {
  return this.http.get<Hero[]>(this.heroesUrl)
    .pipe(
      tap(_ => this.log('fetched heroes')),
      catchError(this.handleError<Hero[]>('getHeroes', []))
    );
}

Next, add a deleteHero() method to HeroService like this.
src/app/hero.service.ts (delete)
/** DELETE: delete the hero from the server */
deleteHero(id: number): Observable<Hero> {
  const url = `${this.heroesUrl}/${id}`;

  return this.http.delete<Hero>(url, this.httpOptions).pipe(
    tap(_ => this.log(`deleted hero id=${id}`)),
    catchError(this.handleError<Hero>('deleteHero'))
  );
}

Note the following key points:

    deleteHero() calls HttpClient.delete().
    The URL is the heroes resource URL plus the id of the hero to delete.
    You don't send data as you did with put() and post().
    You still send the httpOptions.
Refresh the browser and try the new delete functionality.

https://angular.io/tutorial/toh-pt6

/** PUT: update the hero on the server */
updateHero(hero: Hero): Observable<any> {
  return this.http.put(this.heroesUrl, hero, this.httpOptions).pipe(
    tap(_ => this.log(`updated hero id=${hero.id}`)),
    catchError(this.handleError<any>('updateHero'))
  );
}

httpOptions = {
  headers: new HttpHeaders({ 'Content-Type': 'application/json' })
};

Add a new hero
<div>
  <label for="new-hero">Hero name: </label>
  <input id="new-hero" #heroName />

  <!-- (click) passes input value to add() and then clears the input -->
  <button class="add-button" (click)="add(heroName.value); heroName.value=''">
    Add hero
  </button>
</div>

Add a new Hero 
add(name: string): void {
  name = name.trim();
  if (!name) { return; }
  this.heroService.addHero({ name } as Hero)
    .subscribe(hero => {
      this.heroes.push(hero);
    });
}
/** POST: add a new hero to the server */
addHero(hero: Hero): Observable<Hero> {
  return this.http.post<Hero>(this.heroesUrl, hero, this.httpOptions).pipe(
    tap((newHero: Hero) => this.log(`added hero w/ id=${newHero.id}`)),
    catchError(this.handleError<Hero>('addHero'))
  );
}

addHero() differs from updateHero() in two ways:
    It calls HttpClient.post() instead of put().
    It expects the server to generate an id for the new hero, which it 	
returns in the Observable<Hero> to the caller.


+this.size: the plus sign is infer symbol, ie shorthand for converting to correct datatype
const movieID= +this.route.snapshot.paramMap.get('id');
do not call service layer directly from the template.
How do I return observable after subscribe?
You can't return an observable from subscribe but if you use map instead of subscribe then an Observable is returned.20 Feb 2020

The <input type="hidden"> defines a hidden input field. A hidden field let web developers include data that cannot be seen or modified by users when a form is submitted. A hidden field often stores what database record that needs to be updated when the form is submitted.

comp interactions:
template ref variable trv is used to access child comp ppty and mtds directly, which is very useful when working with forms and nested comp
<app-child #child></app-child> -- accessing from the parent template (html)

to access such ppty and mtds from the parent comp class, declare a ppty var of type childComponent then attach @viewChild decorator to it and pass the child comp into it.
@viewChild(childComponent) childCompRef: childComponent;
In ngAfterViewInit mtd, access the ppty and mtds from childCompRef var
as in this.childCompRef.whatever

Interaction using a serve
we generally subscribe to an observable in ngOnInit mtd



1230020 -- pvt
enable lock in smtDr b4 wed
get result -- clinix

add uniqe idx to coa
FinPrd_Auto_Close=YES
FinYear 2022
FinYear_Create_StartDate 01-Jan-2022
FinYearClose 31 Dec 2022
FinYearLastPeriod 12/2021
FinYearStart 01 Jan 2022
FinYearStartPeriod 01/2022
Import_External_Data_EndDate 31-MAR-22
Import_External_Data_StartDate 01-Jan-22
AcctPostLastPeriodCloseDate 31 Dec 2021
AcctNo_Dividends_Payable_Cash XXX
	
The server has 70Gb of memory and 16 cores - 4 allocated to the O/S and the other 12 allocated to SQL Server.

this.size = Math.min(40, Math.max(8, +this.size + delta));

raise sales team -- jobberman hotNigJob 
write first ng app
Javascript control flow -- amigoscode

pipe in node js

valueChanges ppty of type observable and setValue()/setpatch() in rxForms
comp interaction
https://getbootstrap.com/docs/5.0/examples/cheatsheet/
https://hackr.io/blog/bootstrap-cheat-sheet

In JavaScript, a truthy value is a value that is considered true when encountered in a Boolean context. All values are truthy unless they are defined as falsy (i.e., except for false, 0, -0, 0n, "", null, undefined, and NaN).
The precedence of the logical operator is in the following order from the highest to lowest:
Logical NOT (!)
Logical AND (&&)
Logical OR (||)

There are only six falsy values in JavaScript — false, null, undefined, NaN, 0, and "" — and everything else is truthy. This means that [] and {} are both truthy, which tend to trip people up.

the Array.from() Creates an array from a string:
Array.from("ABCDEFG")

what is route: pathway to a destination
What is the life span (cycle of component in Angular?
The lifecycle continues with change detection, as Angular checks to see when data-bound properties change, and updates both the view and the component instance as needed. The lifecycle ends when Angular destroys the component instance and removes its rendered template from the DOM.

.imgClass{ width: 200px; height: 200px;}
.vertical-align{display: flex; align-items: center;}

use btn-toolbar class within a wrapping div to space 2 buttons

angular router composes the nav url and the base-href tag in index.html telss it how to do it. ie routing starts from the base-href element

Babafemi Omage is inviting you to a scheduled Zoom meeting.
Topic: SmartDoctor Demo with John
Time: Jan 8, 2022 04:00 PM West Central Africa
Join Zoom Meeting
https://us04web.zoom.us/j/71963342645?pwd=vO_VDbT0KTvnumGJN44FfJoWDARluE.1
Meeting ID: 719 6334 2645
Passcode: Y8Grtx

With reactive forms, you define the form model directly in the component class

Angular's keyup.enter pseudo-event
<input #box (keyup.enter)="update(box.value)" (blur)="update(box.value)">

Azure functions now support running serverless function in .NET 6.0. Azure Functions 4.0 supports .NET 6.0, Node.js 14, Python 3.7-3.9, Java 8 & 11, powerShell 7.0.

the base href element tells ng how to compose the nav urls -- routing
if you chnage it to "/emp/" then  add it when serving with 
ng serve -o --base-href  /emp/
for prod: ng build -prod --base-href  /emp/, 
this auto updates the prod version of index.html in dist folder


The pop() method removes the last element from an array: 
and returns the value that was "popped out":
Example
const fruits = ["Banana", "Orange", "Apple", "Mango"];
let fruit = fruits.pop();

The push() method adds a new element to an array (at the end) and returns the new array length:
Example
const fruits = ["Banana", "Orange", "Apple", "Mango"];
let length = fruits.push("Kiwi");

The shift() method removes the first array element and "shifts" all other elements to a lower index.
Example
const fruits = ["Banana", "Orange", "Apple", "Mango"];
fruits.shift();
The shift() method returns the value that was "shifted out":

The unshift() method adds a new element to an array (at the beginning), and "unshifts" older elements:
Example
const fruits = ["Banana", "Orange", "Apple", "Mango"];
fruits.unshift("Lemon");
The unshift() method returns the new array length.

Merging (Concatenating) Arrays
The concat() method creates a new array by merging (concatenating) existing arrays:
Example (Merging Two Arrays)
const myGirls = ["Cecilie", "Lone"];
const myBoys = ["Emil", "Tobias", "Linus"];
const myChildren = myGirls.concat(myBoys);
The concat() method does not change the existing arrays. It always returns a new array.
The concat() method can take any number of array arguments:
Example (Merging Three Arrays)
const arr1 = ["Cecilie", "Lone"];
const arr2 = ["Emil", "Tobias", "Linus"];
const arr3 = ["Robin", "Morgan"];
const myChildren = arr1.concat(arr2, arr3);

The concat() method can also take strings as arguments:
Example (Merging an Array with Values)
const arr1 = ["Emil", "Tobias", "Linus"];
const myChildren = arr1.concat("Peter"); 

Splicing and Slicing Arrays
The splice() method adds new items to an array.
The slice() method slices out a piece of an array.
const fruits = ["Banana", "Orange", "Apple", "Mango"];
fruits.splice(2, 0, "Lemon", "Kiwi");
The first parameter (2) defines the position where new elements should be added (spliced in).
The second parameter (0) defines how many elements should be removed.
The rest of the parameters ("Lemon" , "Kiwi") define the new elements to be added.
The splice() method returns an array with the deleted items: 
const fruits = ["Banana", "Orange", "Apple", "Mango"];
fruits.splice(2, 2, "Lemon", "Kiwi");
Original Array:
Banana,Orange,Apple,Mango
New Array:
Banana,Orange,Lemon,Kiwi
Removed Items:
Apple,Mango

Using splice() to Remove Elements
With clever parameter setting, you can use splice() to remove elements without leaving "holes" in the array: 
Example
const fruits = ["Banana", "Orange", "Apple", "Mango"];
fruits.splice(0, 1);
Banana,Orange,Apple,Mango is now:
Orange,Apple,Mango
The first parameter (0) defines the position where new elements should be added (spliced in).
The second parameter (1) defines how many elements should be removed.
The rest of the parameters are omitted. No new elements will be added.

JavaScript Array slice()
The slice() method slices out a piece of an array into a new array.
This example slices out a part of an array starting from array element 1 ("Orange"):
Example
const fruits = ["Banana", "Orange", "Lemon", "Apple", "Mango"];
const citrus = fruits.slice(1);

Note

The slice() method creates a new array.

The slice() method does not remove any elements from the source array.

This example slices out a part of an array starting from array element 3 ("Apple"):
Example
const fruits = ["Banana", "Orange", "Lemon", "Apple", "Mango"];
const citrus = fruits.slice(3);
Banana,Orange,Lemon,Apple,Mango is now
Apple,Mango and returned as a new array
The slice() method can take two arguments like slice(1, 3).
The method then selects elements from the start argument, and up to (but not including) the end argument.
Example
const fruits = ["Banana", "Orange", "Lemon", "Apple", "Mango"];
const citrus = fruits.slice(1, 3);
Banana,Orange,Lemon,Apple,Mango is now
Orange,Lemon and returned as a new array
If the end argument is omitted, like in the first examples, the slice() method slices out the rest of the array.

Automatic toString()
JavaScript automatically converts an array to a comma separated string when a primitive value is expected.
This is always the case when you try to output an array.
These two examples will produce the same result:
const fruits = ["Banana", "Orange", "Apple", "Mango"];
const strVal = fruits.toString();
will give 
Banana,Orange,Apple,Mango

Note
All JavaScript objects have a toString() method.
Use the built in Object.keys() Method instead of Array.Keys() method:
const fruits = ["Banana", "Orange", "Apple", "Mango"];
const keys = Object.keys(fruits);

let text = "";
for (let x of keys) {
  text += x + "<br>";
}

JavaScript Array keys()
Example
Create an Array Iterator object, containing the keys of the array:
const fruits = ["Banana", "Orange", "Apple", "Mango"];
const keys = fruits.keys();
let text = "";
for (let x of keys) {
  text += x + "<br>";
}

The keys() method returns an Array Iterator object with the keys of an array.
The keys() method does not change the original array.

JavaScript Array map()
Return a new array with the square root of all element values:
const numbers = [4, 9, 16, 25];
const newArr = numbers.map(Math.sqrt)
Multiply all the values in an array with 10:
const numbers = [65, 44, 12, 4];
const newArr = numbers.map(myFunction)
function myFunction(num) {
  return num * 10;
}
Ans:650,440,120,40

Definition and Usage
map() creates a new array from calling a function for every array element.
map() calls a function once for each element in an array.
map() does not execute the function for empty elements.
map() does not change the original array.

The main difference between map and forEach is that the map method returns a new array by applying the callback function on each element of an array, while the forEach method doesn't return anything. You can use the forEach method to mutate the source array, but this isn't really the way it's meant to be used
Map is faster than forEach()

-----------------------------------------------
httpClient in angular.io
the httpClient get mtd  is an asynchronous operation that returns an RxJS observable
Since the async/await syntax can only be used with promises, we need to convert the observables to promises using the toPromise() method of the observable.
We use the json pipe to convert the JSON object to a string in the HTML

await is an "asynchronous wait"; that is, it asynchronously waits for the task to complete. "Asynchronous" here means "without blocking the current thread"
A Task represents some asynchronous operation in C#
A task can have multiple processes happening at the same time. Threads can only have one task running at a time

https://www.techiediaries.com/10-best-angular-templates/
https://www.techiediaries.com/angular-10-async-await-example/
https://www.techiediaries.com/routing-angular-router/
https://www.techiediaries.com/angular-formdata/

a subject is an observer and observable obsv -- a special kind of observable. it takes notifications notf from one source and and forwards them to one or more destinations. it resides in a service
when A comp wants to comm with other comps, it sends the notf to a subject who in return sends it to all comps that have subscribed to the subject
generally, we subscribe to the obsv in onInit lch
we expose the obsv with $ appended to it eg teacherMessage$

viewChild @viewChild decorator on ppty requires afterViewInit lch 
getter and setter works best with only one input ppty
OnChanges lch allows us access to useful properties of simpleChages Object 
OnChanges LCH only works with child Component

https://angular.io/guide/glossary#glossary
https://angular.io/guide/form-validation

Track control states
The NgModel directive on a control tracks the state of that control. It tells you if the user touched the control, if the value changed, or if the value became invalid. Angular sets special CSS classes on the control element to reflect the state, as shown in the following table. 
eg ng-touched
You use these CSS classes to define the styles for your control based on its status

src/assets/forms.css     
.ng-valid[required], .ng-valid.required  {
  border-left: 5px solid #42A948; /* green */
}

.ng-invalid:not(form)  {
  border-left: 5px solid #a94442; /* red */
}
In the index.html file, update the <head> tag to include the new style sheet.
src/index.html (styles)
<link rel="stylesheet" href="assets/forms.css">



Two-way binding gives components in your application a way to share data. Use two-way binding to listen for events and update values simultaneously between parent and child components.
For two-way data binding to work, the @Output() property must use the pattern, inputChange, where input is the name of the @Input() property. For example, if the @Input() property is size, the @Output() property must be sizeChange.

In the AppComponent template, fontSizePx is two-way bound to the SizerComponent.
<app-sizer [(size)]="fontSizePx"></app-sizer>
<div [style.font-size.px]="fontSizePx">Resizable Parent Text</div>
In the AppComponent, fontSizePx establishes the initial SizerComponent.size value by setting the value to 16.
The two-way binding syntax is shorthand for a combination of property binding and event binding. The SizerComponent binding as separate property binding and event binding is as follows.
<app-sizer [size]="fontSizePx" (sizeChange)="fontSizePx=$event"></app-sizer>
The $event variable contains the data of the SizerComponent.sizeChange event. Angular assigns the $event value to the AppComponent.fontSizePx when the user clicks the buttons.

Because NO built-in HTML element follows the x value and xChange event pattern, two-way binding with form elements requires NgModel Directive
NgModel adds two-way data binding to an HTML FORM element.
This [(ngModel)] syntax can only set a data-bound property.

To customize your configuration, write the expanded form, which separates the property and event binding. Use property binding to set the property and event binding to respond to changes. The following example changes the <input> value to uppercase:
<input [ngModel]="currentItem.name" (ngModelChange)="setUppercaseName($event)" id="example-uppercase">


https://angular.io/guide/two-way-binding
https://angular.io/guide/built-in-directives#ngModel
https://angular.io/guide/binding-syntax

Directives are classes that add additional behavior to elements in your Angular applications. Use Angular's built-in directives to manage forms, lists, styles, and what users see.
template input variable

A template input variable is a variable you can reference within a single instance of the template. You declare a template input variable using the let keyword as in let customer.
<tr *ngFor="let customer of customers;">
    <td>{{customer.customerNo}}</td>
    <td>{{customer.name}}</td>
    <td>{{customer.address}}</td>
    <td>{{customer.city}}</td>
    <td>{{customer.state}}</td>
    <button (click)="selectedCustomer=customer">Select</button>
  </tr>

A View
A component class and its associated template define a view

The NgForm directive creates a top-level FormGroup instance and binds it to a <form> element to track aggregated form value and validation status. As soon as you import FormsModule, this directive becomes active by default on all <form> tags. You don't need to add a special selector.
The NgModelGroup directive creates and binds a FormGroup instance to a DOM element.
The provided sample application creates the Hero class which defines the data model reflected in the form.

How to Work with Object Literals and ngClass
When we use object literals, the key represents the class that we are going to configure for the element, while the value represents whether the class should be applied to the element. 

Note that the key will be applied only when the value is truthy. In the above example, if coltrol.isInvalid is one of false, undefined, '', and so on, then the class of error will not apply to the element.

interpolation is a template expression
angular two way binding
subMenu and nested menu in bootstrap
how to use cdk with bootstrap in angular
npm install bootstrap
npm install jquery
Add this to angular.json
"styles": [
              "node_modules/bootstrap/dist/css/bootstrap.css",
              "src/styles.css"
            ],
            "scripts": [
              "node_modules/bootstrap/dist/js/bootstrap.js",
              "node_modules/jquery/dist/jquery.js"
            ]


the formBuilder fb class is injected as a service in reactive forms
subscribing to the valueChanges ppty of the formGroup/Control helps us to move validation from the template to the components

what is a media query  -- w3c
mat-grid-list component

function getRandomNumberBetween(min,max){
    return Math.floor(Math.random()*(max-min+1)+min);
}

//usage example: getRandomNumberBetween(20,400); 

call omesh --HNY sir
JS Array functions
the 'this' keyword stores the instance of a newly created object

how to edit multiple lines in vscode
step 1: Click on first line
Step 2: hold SHIFT+ALT
step 3: Click on last line to highlight
step 4: start editing

how to edit multiple occurrences of find match in vscode: highlight the word and press ctrl + shift + L , then edit

comment multiple lines vscode
How do you comment single line -- ctrl + / for single line. again, for uncomment. 
highlight then ctrl + / for multiple line. again, for uncomment.

const materialComponents=[MatButonModule,,,]
and add materialComponents to imports and exports array in matModule

'empLogin' has no initializer and is not definitely assigned in the constructor.
Add the ! as a postfix to the variable name as follows
class Person {
  name!: string
}
When you add an exclamation mark after variable/property name, you’re telling to TypeScript that you’re certain that value is not null or undefined.
You can also get rid of warning by setting strictPropertyInitialization: false inside tsconfig.json

app.quicktype.io
vs code ctrl P for pallete ctrl K for short cuts
press ctrl + . on a class to display and import into ts file
Sharing Data with a Service

semantic-ui-css.com for doc

there are 4 ways to comm btw components in ng (ctp means child-to-parent)
1 binding using input() decorator ptc and output() decorator ctp
2 reference (@viewChild ctp via DI, @viewContent)
3 provider (Service)
4 Template Outlet

ViewChild allows a one component to be injected into another, giving the parent access to its attributes and functions. One caveat, however, is that child won’t be available until after the view has been initialized. This means we need to implement the AfterViewInit lifecycle hook to receive the data from the child.

Template statements are methods or properties that you can use in your HTML to respond to user events
NgModel adds 2 way databinding to html form element


npm install semantic-ui-css
police rpt for glory sim	
see dr agagu clinix blood gp genotype

Now, you just have to update the dashboard.component.html file to bind the click event of the delete button to the deletePost method:

<a (click)="deletePost(element.position)" type="button">
  <mat-icon class="icon">delete</mat-icon>
</a>

ng generate interface data/product
ng g c welcome --module app.module
ng g c dashboard --module app.module
<router-outlet>{{title}}</router-outlet>

npm install @angular/material @angular/cdk	
ng add @angular/material

    / \   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|
   / △ \ | '_ \ / _` | | | | |/ _` | '__|   | |   | |    | | 
  / ___ \| | | | (_| | |_| | | (_| | |      | |___| |___ | | 
 /_/   \_\_| |_|\__, |\__,_|_|\__,_|_|       \____|_____|___|
                |___/

Angular CLI: 13.1.2	
102.88.8.41
102.88.8.42
102.88.8.43

Response.json()
The json() method of the Response interface takes a Response stream and reads it to completion. It returns a promise which resolves with the result of parsing the body text as JSON.
Note that despite the method being named json(), the result is not JSON but is instead the result of taking JSON as input and parsing it to produce a JavaScript object.

What is JSON parse and JSON Stringify? JavaScript JSON Object
JSON.parse() is used for parsing data that was received as JSON String; it deserializes a JSON string into a JavaScript object. JSON.stringify() on the other hand is used to create a JSON string out of an object or array; it serializes a JavaScript object into a JSON string

The fetch API is not implemented in Node.
You need to use an external module for that, like node-fetch.
Install it in your Node application like this

npm install node-fetch

then put the line below at the top of the files where you are using the fetch API:

import fetch from "node-fetch";

red squiggles
$ is short for jQuery fn -- $(document).ready(handler)
where handler is anoyn. fn like : function ()=>{$(#button1).click(function (){window.alert('hello world')})}
 
DOM Traversal js
A good JavaScript developer needs to know how to traverse the DOM—
it's the act of selecting an element from another element

Recursion Event Delegation
immutability in js
serverless function -- lambda fn by aws, azure fn, clud fn by google 
Azure git 
Cloud Deployment
Linux Mac

add exec backupDB to processing sproc
create processingByDivision sproc
add acctID to paycodes and send payrol to accts on rollover
mongoDB and C#
express.js in asp.net core
C:\Program Files\MongoDB\Server\5.0\bin
the default is a local MongoDB server at mongodb://127.0.0.1:27017		
send inv to tubi fch
sapidonline domain -- host db
renew sienna rwCert veh lic and insurance -- call tope

add index to roster (date shiftid and gpid)
inv for fch ajao call vi
set hasPayroll to yes -- sapid
test run hr and payrol -- ajao
update smartHR -- fch vi
connect views to sapid2

ClockIn.wav
ClockOut
TooEarly
GoBackToWork
InvalidRosterIDForClockOut
UnknownFingerPrint
InvalidStaffOrRosterDate
ErrorhasOccured

https://logicversion.ng
2:30
emp leave page to send info to clockIn and leave allce to payrol
for absenteeism and prev abandonment, run job at 11pm to fine them
schedule a job (sproc) to close shift after ClockOut_Grace_Period of 4hrs
close shift means to mark emp tbl col as IN and lookUp to the next dutyDate and penalize if need be

test pharm pos -- tubi

exports is a shortcut to module.exports

If table IsNot Nothing AndAlso table.Rows.Count > 0 Then

projector to comp Vil
office 2019
see infinity glasses
call flawless fri

Managed Debugging Assistant 'PInvokeStackImbalance' 
  Message=Managed Debugging Assistant 'PInvokeStackImbalance' : 'A call to PInvoke function 'Identification!Identification.modIdentify::PlaySound' has unbalanced the stack. This is likely because the managed PInvoke signature does not match the unmanaged target signature. Check that the calling convention and parameters of the PInvoke signature match the target unmanaged signature.'

sp_help proc_name sp_helptext proc_name sp_depends proc_name
how to encrypt and decrypt stored procedure
smtdr sms activate

add unique idx to tbls with identity cols -- roster

how to combine date and time to single datetime in tsql
If both of your fields are datetime then simply adding those will work. eg: Declare @d datetime, @t datetime set @d = '2009-03-12 00:00:00.000'; set @t = '1899-12-30 12:30:00.000'; select @d + @t.
If you used Date & Time datatype then just cast the time to datetime.
SELECT MyDateTime1=CAST(@MyDate AS DATETIME) + CAST(@MyTime AS DATETIME);.

To run JavaScript in vscode using code Run ext, Open the JavaScript code file in the Editor, then use shortcut Control+Alt+N.

How do I split my monitor into two screens?
You can either hold the Windows key down and tap the right or left arrow key. This will move your active window to one side. All other windows will appear on the other side of the screen. You just choose the one you want and it becomes the other half of the split-

How to split screen on Windows 10. To split screen in Windows 10, simply drag a window all the way to one side of the screen until it snaps into place. Then select another window to fill the other half of your screen.9 Apr 2021

Fetch API returns a promise of type Response
JSON is actually a string that looks like js object. It has to be string bcos data exchange between server and browser must be in string format.

A thread is like an ordered sequence of statement and only one can run at a time. this is synchronous code.
async code is start something, finish later

how to know asynchronous fn in js
To detect if a function is asynchronous, use the function's constructor.name property: const isAsync = myFunction.constructor.name === "AsyncFunction"; If the value is AsyncFunction , you know the function is async

What are the ways to deal with asynchronous code in JavaScript?
JavaScript provides three ways of handling asynchronous code: callbacks, which allow you to provide functions to call once the asynchronous method has finished running; promises, which allow you to chain methods together; and async/await keywords, which are just some syntactic sugar over promises.11 Feb 2019

Visual Studio Code for the Web
C:\Windows\System32\msdtc.exe

A Promise is a proxy for a value not necessarily known when the promise is created. It allows you to associate handlers with an asynchronous action's eventual success 
value or failure reason.           

let promise = new Promise((resolve , reject) => {
  fetch("https://myAPI")
    .then((res) => {
      // successfully got data
      resolve(res);
    })
    .catch((err) => {
      // an error occured
      reject(err);
    });          
});

What does a Backtick do in JavaScript?
Backticks ( ` ) are used to define template literals. Template literals are a new feature in ECMAScript 6 to make working with strings easier. Features: we can interpolate any kind of expression in the template literals.

w/app simeon mmgal
reactivate access bank acct

Async and await are markers which mark code positions from where control should resume after a task (thread) completes.

add conID to hPix -- consulting
show on scan/image from hPix using conID

imc auto backup -- hosp db missing
rwCert test for jeep, veh lic tope, sapid oasis -- friday 
call ayanlere -- sienna driver

self Contained means no dependencies
diff btw github and dropbox
Building a RESTful API in Node and Express
Install dependencies: npm install
$ npm install express --save
Start the server: node server.js
Test your API using Postman

secugen hamster plus fingerprint scanner
Dermalog fingerprint scanner
dotnet/aspnetcore github
js closure
pre-rendering pwa
indeed.com
hostinger.com

js closure
A closure is a function having access to the parent scope, even after the parent function has closed.
Remember self-invoking functions? What does this function do?
const add = (function () {
  let counter = 0;
  return function () {counter += 1; return counter}
})();

add();
add();
add(); // the counter is now 3 

Example Explained
The variable add is assigned to the return value of a self-invoking function.
The self-invoking function only runs once. It sets the counter to zero (0), and returns a function expression.

This way add becomes a function. The "wonderful" part is that it can access the counter in the parent scope.
This is called a JavaScript closure. It makes it possible for a function to have "private" variables.

The counter is protected by the scope of the anonymous function, and can only be changed using the add function.

https://javascript.info/modules-intro
A module is just a file. One script is one module. As simple as that.
Modules always work in strict mode. E.g. assigning to an undeclared variable will give an error.
<script type="module">
  a = 5; // error
</script>

tithe/offr saving/investment and spending
get marketers for cities in nig for software sales

Put simply, an API, or "application programming interface", allows two different computing systems to talk to one another.

Express JS is a Node.js web application framework.
Its the most popular Node.js web framework.
Express JS is a JavaScript back-end framework that's designed to develop complete web applications and APIs. Express is the back-end component of the MEAN stack, which also includes MongoDB for the database, AngularJS for the front end and Node. js for the JavaScript runtime environment.

to make a restful api, Use the proper HTTP verbs to make it RESTful (GET , POST , PUT , and DELETE ) Return JSON data. Log all requests to the console.

dapper -- IDbConnection _dbConnection;
context.Employees.FromSqlRaw(...).ToList -- cos of ret type
.FirstOrDefault -- if id is passed or .FirstOrDefaultAsync.Result();

fedEX
Address: 2a Mobolaji Bank Anthony Way, Maryland 101233, Lagos
Hours: Closed ⋅ Opens 8AM
Phone: 0700 733 7827

Address: 30 Allen Ave, Allen 101233, Ikeja
Hours: Closed ⋅ Opens 8AM
Phone: 0700 733 7827

Address: 4 Comfort Adeniyi St, Mende 105102, Lagos
Hours: Closed ⋅ Opens 8AM
Phone: 0700 733 7827
A user suggested this phone
0803 542 6694

HttpResponseException in ASP.NET Web API
Using HttpResponseException in ASP.NET Web API
https://www.infoworld.com/article/2994111/how-to-handle-errors-in-aspnet-web-api.html
https://www.c-sharpcorner.com/article/exception-handling-4-in-asp-net-core-mvc/
https://www.tutorialsteacher.com/webapi/action-method-return-type-in-web-api
You can use the HttpResponseException class to return specific HTTP status codes and messages from your controller methods in Web API. Here is an example.

hot reload => auto reload /refresh
in js, stop using var, use let or const instead
Encapsulation groups related code (var and fn) into one unit (object) to reduce complexity.
Abstraction is hiding details and complexity (to reduce impact of change) 
inheritance redduces redundant code and show only the essentials
Polymorphism refactors ugly switch/case statements

the object literal syntax {}:
eg
let empty = {};


omagebi@yahoo.com
omagebi@yahoo.com ; omagebi3@gmail.com
AVG Internet Security (Multi-Device)
For 10 devices. Subscription billed annually until cancelled.
License Number: G3BQLY-45DUE2-4DL9TS

08:30 Monday, Pacific Time (PT) is
17:30 Monday, in Mende, Lagos

Verify if SQL service is running and db accessible by connect db from web connect tool:
https://mssql.site4now.net/default.asp

inProcess hosting: iis worker process w3wp.exe is used
outOfProcess hosting: kestrel web server is used with iis as reverse proxy
Middleware mware is a software that handles http req or resp. performs a specific function
a mware processes a req and hands over to the next in the req processing pipeline (rpp).  (or simply passes it to the next if the request is not meant for it or short-circuits the rest of the pipeline ie sends resp back  without passing to the next one .
these mware components are avail as nuget packages

app.UseDefaultFiles();
app.UseStaticFiles(defaultFilesOptions);
app.UseMvc(routes =>
{
    routes.MapRoute(name: "api", template: "api/{controller=Admin}");
    routes.MapRoute(name: "default", template: "{controller=Home}/{action=Index}/{id?}");
});

complete pharm pos b4 tue
C# tutorial 3 Extension mtds -- venkat
SiteUrlToLaunchAfterPublish: https://omagebi-001-site1.etempurl.com/
https://logicversion.ng/api/DiagSummary/2021-01-01,2021-10-31
https://logicversion.ng/index.html
/api/DiagSummary/{startDate},{endDate}
/api/DiagSummary/{id}
https://localhost:44357/api/DiagSummary/2021-01-01,2021-10-31
2021-01-01,2021-10-31
http://sapidholdingsonline.com/test/aspnet/test.aspx

publishing
server: https://omagebi-001-site1.etempurl.com:8172/msdeploy.axd?site=omagebi-001-site1
iis: omagebi-001-site1

server/Host/FTP Address: win5110.site4now.net
FTP Login ID: omagebi-001
IP Address: 205.144.171.201
pwd: ***de@123 

logic
login: db_a66d0c_logihos_admin
pwd: logicdb***@123
addr: sql5090.site4now.net
db: db_a66d0c_logihos

sapid
login: db_a66d0c_clearing_admin
pwd: logicdb***@123
addr: sql5090.site4now.net
db: db_a66d0c_clearing

//FTP: omagebi-001
//Host: FTP.SITE4NOW.NET

VS Webdeploy info
VS STATUS ON  
Site Name logicversion
Service URL https://omagebi-001-site1.etempurl.com:8172/MsDeploy.axd?site=omagebi-001-site1
Site/Application SiteName omagebi-001-site1
Username omagebi-001

call smarterASP.net to ask for static ip to link local and online mssql
network with HMOs and partner with them -- eg their Asso
network with lasg -- tru canty -- to recommend SmtDr to hospitals
reg for voters card

config sources in asp.net core -- fuec -- in that order 
ASP.NET Core runs on conventions.
ASP.NET Core project is actually console applications. Your project now contains a Program.cs file just like a console app would have.


SELECT FORMAT(1234, 'N0') Result

Office:
Logic Version
89, Kudirat Abiola Way, 
Pera-Beam House (Royal Digits Suite)
Oregun Rd, Ikeja Lagos, Nigeria 
Tel: 08033452113, 09097561272
Email: info@logicversion.ng ; omagebi@yahoo.com
Website: https://logicversion.ng

avg renew
searchable combo box in vb6 -- diagnosis
connect payrol to accounts
side comments for adjusted prices -- vou mod
receiving bank for expenses -- from smartAcct
retire imprest rpt
xple receivers on a payment voucher

quokka ext -- vscode
add isprocess to con mod -- emel
RGB: 95-123-164; bkgrd blue

create self updating online installer in C#
How do I create a web-based installation package in c#
how to create download installer for windows application
how to create download link in html

<a href="path/to/file.ext" download rel="noopener noreferrer" target="_blank">
   Download File
</a>

<a href="link/to/your/download/file" download="filename">Download link</a>

This will allow you to change the name of the file actually being downloaded.

A task is something you want done. A unit of work to do.
A thread is one of the many possible workers which performs that task. In . NET 4.0 terms, a Task represents an asynchronous operation.

The Task class represents a single operation that does not return a value and that usually executes asynchronously. Task objects are one of the central ...


mysql-connector-net 
mysql-connector-odbc

dhl proposals to exec hosps, teaching hosps, fmc and cont terms
duchess bluesky reddington st nicholas eko hosp may clinics
list out exec hosps and terminals send prop to their MDs
change smartDoctor to infinity
print proposals and spiral bind
corporate trainings -- ms office etc to military and MDAs


localhost/api/DiagSummary/469718
services.AddDbContext<MyContext>(ServiceLifetime.Scoped);

IEnumerable<DataRow> sequence = dt.AsEnumerable();

or

using System.Linq;
...
List<DataRow> list = dt.AsEnumerable().ToList();

   catch(Exception e)
    {
        return StatusCode(500, "Something happened");
    }

var user = _service.GetUser(id);
if (user is null)
{
    return NotFound("User not found");
}

        throw new HttpResponseException(response);

       Response.StatusCode = code; // You can use HttpStatusCode enum instead

        return new MyErrorResponse(exception); // Your error model

<AllowUntrustedCertificate>true</AllowUntrustedCertificate>
<EnvironmentName>Production</EnvironmentName>

error handling in asp.net core web api
httpResponse error object  in asp.net core web api

how do i deploy asp.net core .net5 to my website , how di i retore my mssql backup to my website, how do i use crystal report in my site, can i get static ip address from you to connect to my database elsewhere ?

DGView_CellEndEdit

      // GET: api/DiagSummary
        [HttpGet("{startDate},{endDate}")]
        [AllowAnonymous]
        public async Task<ActionResult<IEnumerable<DiagSumm>>> GetDiagnosis(DateTime startDate,DateTime endDate)
        {
            SqlConnection conn = new SqlConnection(_config.GetConnectionString("DefaultConnection"));
            Sqlcmdcmd = new SqlCommand("GetDiagnosisSummary",conn);
            conn.Open();
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            //Task<SqlDataReader> reader =  cmd.ExecuteReaderAsync();
           
            List<DiagSumm> diagList = new List<DiagSumm>();

            using (SqlDataReader reader = await cmd.ExecuteReaderAsync(CommandBehavior.CloseConnection))
            {

                while (await reader.ReadAsync())
                {
                    DiagSumm diagSumm = new DiagSumm();
                    diagSumm.Date = Convert.ToDateTime(reader["Date"]);
                    diagSumm.Diagnosis = reader["Diagnosis"].ToString();
                    diagSumm.MthName = reader["MthName"].ToString();
                    diagSumm.Yr = Convert.ToInt32(reader["Yr"]);
                    diagSumm.Mth = Convert.ToInt32(reader["Mth"]);
                    diagSumm.Period = reader["Period"].ToString();
                    diagSumm.PeriodVal = Convert.ToInt64(reader["PeriodVal"]);

                    diagList.Add(diagSumm);


                }

                            if (diagList != null)
            {
                return  diagList;


() => {} Arrow Functions are often used for one-line actions and callbacks
the => in JS?
It's a new feature that introduced in ES6 and is called arrow function. The left part denotes the input of a function and the right part the output of that function.16 Jul 2016

Anonymous functions are often arguments being passed to higher-order functions, or used for constructing the result of a higher-order function that needs to return a function. If the function is only used once, or a limited number of times, an anonymous function may be syntactically lighter than using a named function.25 Jun 2018

An anonymous function is a function without a function name. Only function expressions can be anonymous, function declarations must have a name. 

What's the difference between an argument and a parameter?
Generally speaking, the terms parameter and argument are used interchangeably to mean information that is passed into a function. A parameter is the variable listed inside the parentheses in the function definition. An argument is the value that is sent to the function when it is called.

What is the difference between function expression and anonymous function?
An anonymous function is a function without a function name. Only function expressions can be anonymous, function declarations must have a name. A function expression is an expression which defines a function. Function expressions can be used to define a named or unnamed (anonymous) function.17 Mar 2020



In C# the internal keyword can be used on a class or its members. It is one of the C# access modifiers. Internal types or members are accessible only within files in the same assembly.
Objects are created at runtime from templates, which are also known as classes

As a member of the OuterClass , a nested class can be declared private , public , protected , or package private.

Our success has been built on a simple formula - deliver what we promise and build long-term win-win relationships.
	
crpt
if RecordNumber mod 2 = 0 then crSilver else crNoColor. -- alternate row color
OR
select RecordNumber mod 2
case 0: crWhite
case 1: color(222,222,222)

Your shading doesn’t have to be grey and white.  You can use different colours!  The colours that Crystal uses are: crBlack, crMaroon, crGreen, crOlive, crNavy, crPurple, crTeal, crGray, crSilver, crRed, crLime, crYellow, crBlue, crFuchsia, crAqua, crWhite.

This is how to do alternate line shading in the DETAIL section.  You can also do this by the Groups (such as Customer Group in the report above). 
 
Maybe you want the first group to be grey, second group to be yellow, etc.  To do this, change the DETAIL formula to read:
select GroupNumber mod 2
case 0: crWhite
case 1: crYellow

sum({vwPayDetls.Income}, ({vwPayDetls.staffid}))-
sum({vwPayDetls.Deduction},({vwPayDetls.staffid})) -- by group

if {vwPayDetls.IsIncome}=false then
        true //hide
    else
        false //do not hide

Suppress [x-2] on formula and place if pagenumber mod 2 = 0

burn cds -- how to  -- imgburn
win media player
virtual developers (ebenMoney, Venkat, freelance.com) 

call emel

ang 11 uses ts 4 and >
Model binding in angular template driven forms
angular form events

to use attrib binding, prefix the attrib with attri, eg attr.colSpan='{{cSpan}}'
bind-disabled='isDisabled' is a canonical form of ppty binding
on-click is the canonical form of (event) binding

Data binding provides a way for developers to create a read/write link between the controls on a form and the data in their application (their data model). ... Windows Forms data binding allows you to access data from databases as well as data in other structures, such as arrays and collections.

use super() to call a base class ctor 
enum Color {Green,Red,Blue};
union type (multiType) eg let abc : number | boolean ;

buy extra table lamp
plier spanner ext box
https://www.javascripttutorial.net/javascript-callback/
https://www.tektutorialshub.com/crystal-reports/download-crystal-reports-for-visual-studio-2019/

start simple from db upwds
support@hilkom-digital.de

HTTP GET PUT POST DELETE -- venkat 
ASP NET Web API and SQL Server 
basic auth => just decorate controller with Authorize attrib.

ef core database first
https://docs.microsoft.com/en-us/ef/core/cli/powershell
Entity Framework Core supports Database-First approach via the Scaffold-DbContext cmdof Package Manager Console. This cmdscaffolds a DbContext and entity type classes for a specified database.
The context represents a session with the database and allows you to query and save instances of the entity classes.

In Visual Studio, select menu Tools -> NuGet Package Manger -> Package Manger Console and run the following command:
Scaffold-DbContext "Name=ConnectionStrings:DefaultConnection" Microsoft.EntityFrameworkCore.SqlServer -OutputDir Models -Context ApplicationDbContext -NoPluralize -UseDatabaseNames  -Force -Schemas dbo -NoOnConfiguring

Scaffold-DbContext "Server=(localdb)\v11.0;Database=Blogging;Trusted_Connection=True;" Microsoft.EntityFrameworkCore.SqlServer -OutputDir Models -Force

Use the following cmdto get the detailed help on Scaffold-DbContext command:
PM> get-help scaffold-dbcontext –detailed

vwDocAssign not working
Dapper MongoDB GraphQL LINQ
vs code: Debug: Open Link command
@category:"Extension Packs"
VSCode DevTools for Chrome
Ctrl+K Z for zen mode
start ng cli & launch msedge -- launch.json
web_api

A common way to handle events is to pass the event object, $event, to the method handling the event. The $event object often contains information the method needs, such as a user's name or an image URL.

Angular 7 CRUD with Web API -- codeAffection
Asp.Net Core Web API and Angular 7 CRUD.mp4
Complete Angular 7 Master Detail CRUD with Web API - Part 1
Complete Angular 7 Master Detail CRUD with Web API - Part 2
Asp.Net Core Web API - Role Based Authorization in Angular 7 with Identity Role
User Registration with Asp.Net Core Web API and Angular 7 -- used identity

send inv 4th qtr to clients
renew sapidOnline b4 nov 20

ebenMoney prj
jwtAuth
macNeil

es10 or es2019 -- js

email data -- cust
phone data
seo

http://localhost:4200/auth-callback
C:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\DATA

Open your Powershell / cmdPrompt on a working directory and run the following cmd which installs the IdentityServer4 templates globally for you.
dotnet new -i identityserver4.templates

You can see the installed IdentityServer4 templates. Now, to create a new project based off a template, run the following.
dotnet new is4inmem

const is compile time constant
readonly is runtime constant , normally read from a config file

IEnumerable =>ICollection. =>Ilist in inheritance chain. 
IQueryable extends ICollection. An IQueryable generates a LINQ to SQL expression that is executed over the database layer.
 
gg neptune saturn etc under images
angular color: #337487
Part 1 How to find nth highest salary in sql 
Stored procedures in sql server Part 18


FLAWLESS ESSENCE NIGERIA LIMITED owners of Flawless Courts and Estates is a property investment /... 69, Ayinde Adeleye Street, Off Toyin Street, Ikeja,
(+2348023811148)...

proctected modifier helps to access a class member from a derived class
private is within the class
public is avail everywhere

Routing routes an incoming HTTP request to a particular action method on a Web API controller.
A route is a URL pattern that is mapped to a handler. The handler can be a physical file, such as an . aspx file in a Web Forms application. ... To define a route, you create an instance of the Route class by specifying the URL pattern, the handler, and optionally a name for the route

Routing in Angular helps us navigate from one view to another as users perform tasks in web apps

the easiest and right way to gen links in web api is by using route names


Components are declared, Modules are imported, and Services are provided.
anonymous type eg new {id=student.id}

Function types: Arrow, anonymous or normal
the return type of an async function is a promise

Scaffold-DbContext “Server=Anupam-PC\SQLEXPRESS;Database=GraphQLDemo;Trusted_Connection=True;” Microsoft.EntityFrameworkCore.SqlServer -OutputDir Infrastructure\DBContext  

Dependency Injection is a principle in software architecture that provides a loosely coupled communication between two classes.

For example the Communication between –

    Controller and Repositories
    Controller and Services (Email sender, Logger, etc.)
    Business layer and Data layer
    Etc.

The concept of Dependency Injection is same for Asp.Net Core MVC and Asp.Net Core Web API.
Dependency Injection provides a Loosely Coupled Communication between two layers (classes).
Dependencies are registered in containers and the container in asp.net core is IServiceProvider. 
The best place to register the dependency in the asp.net core is the ConfigureServices method of the Startup class.

Repositories are classes or components that encapsulate the logic required to access data sources. They centralize common data access functionality, providing better maintainability and decoupling the infrastructure or technology used to access databases from the domain model layer.8 Oct 2018

But, If we are following the concept of Dependency Injection then we need to create an interface eg IBookRepository for BookRepository. We will only expose this IBookRepository to the controller and because of this the controller will never know about the implementation i.e. BookRepository.

Make sure the BookRepository class inherits from IBookRepository interface.

to use DI, register the service with DI (eg ang injector) and then specify dependency in ctor of the component where an instance of the service is needed
you can use DI to share data and funtionality btw components as it provides a singlton ie a single instance of the service

AddSingleton() - A Singleton service is created only one time per application and that single instance is used throughout the application life time. As the name suggest,  AddSingleton() method creates a Singleton service. A Singleton service is created when it is first requested. This same instance is then used by all the subsequent requests. So in general, 

AddTransient() - This method creates a Transient service. A new instance of a Transient service is created each time it is requested. 
    
AddScoped() - This method creates a Scoped service. A new instance of a Scoped service is created once per request within the scope. For example, in a web application it creates 1 instance per each  http request but uses the same instance in the other calls within that same web request.

To inject a service in a controller we use the constructor, in a view, we use @inject directive :  @inject IBookRepository _BookRepository 
inside the html, to use the var, precede with @ eg @_BookRepository.getBooks().count()


ADO.NET entity data model is not available for ASP.NET Core Web API,
3, Using ASP.NET Core Web API with Code First Entity Framework
the code first method of entity framework does not work for a stored procedure.
 
    SELECT top 1 AppointmentID, ReturnCode, getdate() SubmittedTime
    FROM appointments
    order by appointmentID desc


Proof Key for Code Exchange
PKCE, pronounced “pixy” is an acronym for Proof Key for Code Exchange. The key difference between the PKCE flow and the standard Authorization Code flow is users aren't required to provide a client_secret.

GraphQL: A data query language and runtime designed and used at Facebook to request and deliver data to mobile and web apps since 2012.
{customers{customerId, name}}
You should make them static to avoid wasting memory on class instances.
Helper classes that contain nothing but static methods should themselves be declared static to prevent you from accidentally adding non-static members and from instantiating the classes.

services.AddIdentityServer()
                    .AddSigningCredential(new X509Certificate2(Path.Combine(_environment.ContentRootPath, "certs", "IdentityServer4Auth.pfx")));
                    //.AddTemporarySigningCredential()
 ;


https://medium.com/@LondonAppBrewery/how-to-download-install-mongodb-on-windows-4ee4b3493514

How do I install MongoDB on Windows 10?

    Step 1 — Download the MongoDB MSI Installer Package. ...
    Step 2 — Install MongoDB with the Installation Wizard. ...
    Step 3— Create the Data Folders to Store our Databases. ...
    Step 4 — Setup Alias Shortcuts for Mongo and Mongod. ...
    Step 5 — Verify That Setup was Successful. .

diff btw helper and extension methods
Do extension methods have to be static?
An extension method must be a static method. An extension method must be inside a static class -- the class can have any name. The parameter in an extension method should always have the "this" keyword preceding the type on which the method needs to be called.

What is a static helper method? static -- means Will not modify the state of the object
A helper method is used to perform a particular repetitive task common across multiple classes. This keeps us from repeating the same piece of code in different classes again n again. Whereas the class-specific methods define its behaviour, the helper methods assist in that process.

In general, any method that does not depend on the state of an instance should be static. Helper classes that contain nothing but static methods should themselves be declared static to prevent you from accidentally adding non-static members and from instantiating the classes.22 Jun 2011

"workbench.colorCustomizations": {
    "editorIndentGuide.background": "#0000ff"
}

"editor.fontFamily": "'Fira Code', Consolas, 'Courier New', monospace, 'Segoe UI Emoji'",
"editor.fontLigatures": true,


angular http service returns an observable
Route Resolver prefetches data before display when data is complete
it can be implemented as a service or function

how to override identity template in asp.net core template in vs 2019
template ref var to pass data from child to parent -- chap 38 ang crud tut
we use route parameters (reqd, optional, queryParam) and ang service to pass data btw sibling comp (apt 34 ang 2 tut)

What is difference between LET and Var and const in Javascript?
var declarations are globally scoped or function scoped while let and const are block scoped. var variables can be updated and re-declared within its scope; let variables can be updated but not re-declared; const variables can neither be updated nor re-declared

https://localhost:44350/login
https://www.javascripttutorial.net/javascript-callback/
A callback function is a function passed into another function as an argument, which is then invoked inside the outer function to complete some kind of routine or action. ... A good example is the callback functions executed inside a .then() block chained onto the end of a promise after that promise fulfills or rejects

the object literal syntax:
eg
let empty = {};

To create an object with properties, you use the key:value within the curly braces. For example, the following creates a new person object:
let person = {
    firstName: 'John',
    lastName: 'Doe'
};

let person = {
    firstName: 'John',
    lastName: 'Doe',
    greet() {
        console.log('Hello, World!');
    }
};

person.greet();

https://stackoverflow.com/questions/51912757/identity-server-is-keep-showing-showing-login-user-is-not-authenticated-in-c/60748736#60748736

https://fullstackmark.com/post/21/user-authentication-and-identity-with-angular-aspnet-core-and-identityserver

OpenID Connect 1.0 is a simple identity layer on top of the OAuth 2.0 protocol. It allows Clients to verify the identity of the End-User based on the authentication performed by an Authorization Server, as well as to obtain basic profile information about the End-User in an interoperable and REST-like manner.

oidc-client LLibrary provides OpenID Connect (OIDC) and OAuth2 protocol support for client-side, browser-based JavaScript client applications. Also included is support for user session and access token management.

To bring the oidc-client library into the project, I first installed it via npm and confirmed it was added as a dependency in package.json.

in your ng Project Dir (eg ClientApp) run > npm install oidc-client --save

IdentityServer4 provides an OIDC discovery endpoint, which can be used to retrieve metadata about the authorization server including the Token Endpoint.
The discovery endpoint is available via /.well-known/openid-configuration relative to the base address of your Token Server. For example, if we run the application locally and perform a GET request to the following endpoint:

The user is presented with a consent page if the authentication check succeeds. This page allows them to grant the client access to resources (identity or API). This is optional and can be disabled in the client settings configuration by adding the following property: RequireConsent = false.

 Step 4: Update the UserManagerSettings

Create constant object called “ClientSettings” as per below code.

export const ClientSettings = {
  authority: "http://localhost:5000",
  client_id: "identityserverapp",
  redirect_uri: "http://localhost:4200/auth-callback",
  post_logout_redirect_uri: "http://localhost:5000/account/login/",
  response_type: "code",
  scope: "openid profile api",
  filterProtocolClaims: true,
  loadUserInfo: true,
  automaticSilentRenew: true,
  silent_redirect_uri: 'http://localhost:4200/silent-refresh'
}; 

https://localhost:44354/.well-known/openid-configuration

https://vmsdurano.com/apiboilerplate-and-identityserver4-access-control-for-apis/
ApiBoilerPlate AccessTokenValidation Integration
If you are reading this post and haven't tried using ApiBoilerPlate for building your ASP.NET Core APIs, then head over to the official repository here: https://github.com/proudmonkey/ApiBoilerPlate.

The template uses IdentityServer4 AccessTokenValidation as well to authenticate and validate access tokens. You can find the code that configures IdentityServer Authentication under Installers/RegisterIdentityServerAuthentication.cs file. Here’s the code snippet:

...
onSubmit() { 

    this.spinner.show();

    this.authService.register(this.userRegistration)
      .pipe(finalize(() => {
        this.spinner.hide();
      }))  
      .subscribe(
      result => {         
         if(result) {
           this.success = true;
         }
      },
      error => {
        this.error = error;       
      });
}
...

[HttpPost]
[Route("api/[controller]")]
public async Task<IActionResult> Register([FromBody]RegisterRequestViewModel model)
{
  if (!ModelState.IsValid)
  {
     return BadRequest(ModelState);
  }

  var user = new AppUser { UserName = model.Email, Name = model.Name, Email = model.Email };

  var result = await _userManager.CreateAsync(user, model.Password);

  if (!result.Succeeded) return BadRequest(result.Errors);
            
  await _userManager.AddClaimAsync(user, new System.Security.Claims.Claim("userName", user.UserName));
  await _userManager.AddClaimAsync(user, new System.Security.Claims.Claim("name", user.Name));
  await _userManager.AddClaimAsync(user, new System.Security.Claims.Claim("email", user.Email));
  await _userManager.AddClaimAsync(user, new System.Security.Claims.Claim("role", Roles.Consumer));

  return Ok(new RegisterResponseViewModel(user));
}
---------
 
The auth.service is responsible for authentication, managing user data and sesssions in our Angular app primarily through the oidc-client library.
the oidc-client library handles all the interactions with our OpenID Connect Provider (eg identitServers4).

alice : My long 123$ password
bool seed = config.GetSection("Data").GetValue<bool>("Seed");
var  connectionString2 = Configuration.GetSection("ConnectionStrings").GetValue<string>("DefaultConnection");

Add-Migration InitialIdentityDbMigration -c ApplicationDbContext -o Data/Migrations/AspNetIdentity
Update-Database -Context ApplicationDbContext

services.AddSingleton<ILoggerFactory, LoggerFactory>();
services.AddSingleton(typeof(ILogger<>), typeof(Logger<>));

asp.net core containers
identityServer4 ApiScopes
.AddDefaultUI asp.net core Identity
Done. To undo this action, use 'ef migrations remove'
var conStr=Configuration.GetConnectionString(name: "DefaultConnection");
var connectionString = Configuration.GetConnectionString("DefaultConnection");
var migrationsAssembly = typeof(Startup).GetTypeInfo().Assembly.GetName().Name;

https://deblokt.com/2019/09/26/04-part-3-identityserver4-asp-net-core-identity/
https://deblokt.com/2019/09/24/04-part-2-identityserver4-asp-net-core-identity/
https://deblokt.com/2019/09/23/04-part-1-identityserver4-asp-net-core-identity/
https://identityserver.github.io/Documentation/docsv2/overview/terminology.html
https://vmsdurano.com/apiboilerplate-and-identityserver4-access-control-for-apis/
https://fullstackmark.com/post/21/user-authentication-and-identity-with-angular-aspnet-core-and-identityserver

https://docs.microsoft.com/en-us/ef/core/cli/powershell
https://docs.microsoft.com/en-us/ef/core/cli/powershell#scaffold-dbcontext

http://mail.logicversiononline.com/Login.aspx

41.58.131.64
41.58.151.185
129.18.141.144

userkey.psw
https://www.nairaland.com/4860343/cost-estimate-building-3bedroom-bungalow
https://stackoverflow.com/questions/39062930/what-is-the-difference-between-declarations-providers-and-import-in-ngmodule?newreg=6918d4f35a094714a4471256cf34f6c7


HP ProBook 450 G3

barcode scanner/reader for bayelsa -- can scanner in phone be used -- try it on pharmacy module
And a
St Tubi Pharmaceutical & Diagnostic Services
10, Alamieyeseigha Rd,Adule-Ama
Amassoma Town, Bayelsa State

add emp form to mgt rpt
add commission to lab mod
check scanner
add barcode to service outlet

diff btw ngForm and NgForm angular

deep breadth garlic and banana helps to reduce bp

buy hard disk for home pc -- backup files from laptop
orbit barcode scanner with usb cable (shld also scan QRcode)
08063440147 -- 50k
08138482041 -- 55k
07014866777 -- 35k

sms working but dup message -- send by clinic oasis
crpt error -- oasis
rdlc error -- oasis

admin, Pa$$word123	
dr austin requests Data entry Officer

create new emp in smartHR to test payroll
change avg antiVirus acct to yours not martins

mssql 2019
win server 2019

---------------------------
get ready for bayelsa -- 
call bolt for trip to airport 6:30am
laptop -- charger
truncate smtDr dbs and backup
~pack yur clothes--
~phone charger
~check departure time again
~slippers
~covering wrapper and pyjamas
~tooth brush and paste
~clothes glasses
~drugs -- bp and vision plus flagyl pcm
~towel and soap
~baygon -- buy there
~projector -- laptop -- charger -- anti surge plug
~usb drive -- cruizer and stainless 9mobile mifi
~bluetooth


activate a route means navigating to a route
activated route service helps to rerieve route param from url
to read it we use either snapshot.paramMap ppty (in router object) approach as in 
this._router.snapShot.paramMap.get('id');
or observable ppty approach which we will subscribe to

I Sell Unisex Turtle Neck For Adult n Kids
Payment On Delivery Within Lagos
Nationwide Delivery
Please Call/WhatsApp 0 80 82 82 92 21


Femi@123
logic....123
Username: admin; Email: admin@ebenmonney.com; Password: tempP@ss123
Username: user; Email: user@ebenmonney.com; Password: tempP@ss123

https://docs.identityserver.io/en/release/intro/big_picture.html

Note: A VS Code "workspace" is usually just your project root folder
vscode cmdpalette ( control + shift + p )
How to debug Angular SPA in either vs2019 or vscode
You do it in the Chrome dev tools, hit F12 in Chrome and go to the sources tab. Hit ctrl-p to search for the source file. You can set break point in the TypeScript.

VSCode DevTools for Chrome
Microsoft Edge Developer Tools for Visual Studio Code
http://localhost:4200/login
To see available Angular extension packs, add the "extension packs" category to your filter (angular @category:"extension packs").

call emel for invoice

night owl theme
cascadia code font -- gg it
fira code font
font Ligature setting
settings.json in vsCode
live share
advanced-new-file
cobalt blue colr code: #0047ab
blue sky

Colours
Blue: #193549 Blue Highlight: #1F4662 Blue Highlight2: #234E6D Blue Dark: #122738 Yellow: #ffc600 Hot Pink: #ff0088 Blush Pink: #ff628c Orange: #ff9d00 Green

The “payload” is the data we are interested in transporting. This is differentiated from the things that wrap the data for transport like the HTTP/S Request/Response headers, authentication, etc.

The Payload of an API Module is the body of your request and response message. It contains the data that you send to the server when you make an API request. You can send and receive Payload in different formats, for instance JSON.

generate secret key
Using .NET it's very easy to generate a random key. Create a console application and copy the following code:

public static void Main(string[] args)
{
    var rng = System.Security.Cryptography.RandomNumberGenerator.Create();
    var bytes = new byte[256 / 8];
    rng.GetBytes(bytes);
    Console.WriteLine(Convert.ToBase64String(bytes));
}

Then, you can store the generated key in the configuration file of your ASP.NET Core web site. Open the appsettings.json file and add the following section:

{
  "JwtAuthentication": {
    "SecurityKey": "ouNtF8Xds1jE55/d+iVZ99u0f2U6lQ+AHdiPFwjVW3o=",
    "ValidAudience": "https://localhost:44318/",
    "ValidIssuer": "https://localhost:44318/"
  }
}

Finally, you can register the configuration in the service collection to retrieve these settings easily:

using Microsoft.IdentityModel.Tokens;

public class JwtAuthentication
{
    public string SecurityKey { get; set; }
    public string ValidIssuer { get; set; }
    public string ValidAudience { get; set; }

public SymmetricSecurityKey SymmetricSecurityKey => new SymmetricSecurityKey(Convert.FromBase64String(SecurityKey));
public SigningCredentials SigningCredentials => new SigningCredentials(SymmetricSecurityKey, SecurityAlgorithms.HmacSha256);
}

public class Startup
{
    public Startup(IConfiguration configuration)
    {
        Configuration = configuration;
    }

    public IConfiguration Configuration { get; }

    public void ConfigureServices(IServiceCollection services)
    {
        services.AddMvc();
        services.Configure<JwtAuthentication>(Configuration.GetSection("JwtAuthentication"));
    }
}

By the way, it can be a good idea to look at Azure Key Vault, AWS KMS or their competitors to store this secret key.


jwt issuer and audience examples
A jwt token has 3 parts sep by dot (Header Payload and signature), your secret key stands for the signature
for a web api controller to receive api request, it must inherit from controllerbase class and decorate it with [ApiController] attrib

generics syntax in c#
run script to update supp and hret tbls debt cols from acct yr begin

To avoid this problem, consider setting up a 301 redirect from one of your redundant hostnames to the other, or create a search-and-replace filter that strips "www." from hostnames.

Google Tag Assistant Recordings can help you verify that your redirect is setup correctly, or that your filter is working as intended.


A claim is a name-value pair. it contains info about a user eg username, email age etc. claims are policy based. create a policy and add one or more claims. we then use the policy and the policy param of the autohrize attrib (in controllers) to implement claims based authorization. 

A role is a claim with Type Role

SPA (Single Page Application) requires JWT for access control. Per OIDC specification, the JWT consists of two components: ID token and Access token. The ID token confirms the user identity, while the Access token grants the user’s permission to access API Resources. In practicality, ID and Access tokens are for authentication and authorization respectively.

to inject a class into a view use @inject directive
claims principal is the logged in user
the razor page base class has a property called User. this has info about the logged in user ( returns claimsPrincipal instance)


userManager
signInManager
efcore pt 45-52 -- venkat -- asp.net core tutorial
Using sql server with entity framework core -- pt 48 -- venkat
identity pt 65-123 -- venkat -- asp.net core tutorial
Angular 5 - Login and Logout with Web API using Token Based Authentication
provisine
identityServer project template for asp.net core
owlenz projector display not clear 
one drive win 10
debt in billing mod -- modify and cancel
MySQL for Visual Studio
SQL Server Data Tools

https://www.linkedin.com/in/femi-omage-6306a83b/
turing email for test

crpt dlls
CrystalDecisions.CrystalReports.Engine
CrystalDecisions.ReportSource
CrystalDecisions.Shared
CrystalDecisions.Windows.Forms
CrystalDecisions.Web
etc. 
copy all from below path to bin folder or your app root folder
Path: C:\Program Files (x86)\SAP BusinessObjects\Crystal Reports for .NET Framework 4.0\Common\SAP BusinessObjects Enterprise XI 4.0\win32_x86\dotnet\CrystalDecisions.CrystalReports.Design.dll
runtime ver: v4.0.30319
ver: 13.0.4000.0

add spinner and update outstd pages to website
invoice logo not showing colored -- sapid
bootstrap spinner/ loader
angular pwa

https://github.com/LogicVersion/LogicVersionResponsive.git
Using asp net identity with Web API pt 18-22

C:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\Backup

eye:
----
small letters on phone and laptop 
eg reading email on phone
folder names on laptop -- details view
also soln explorer items -- names difficult to see
use phone/laptop during eye test -- apart from their own book
get glasses that meets reading distance and laptop distance -- very nece
see more tru the sides -- check for astigmatism
diificult to see mouse cursor/beam
fw cs6 menus

update appdef tbl set has_archive =yes
check adm pat b4 1st jul -- from qryhAdission
truncate all tranx tbls in new hosp db except pri tbls and reload using sproc
del PurchaseOrderDetails , PurchaseOrderDetailsApprove manually from its parent
also del Tranxaction ,hScan, hScanDetails, hScanPix

mobile app devt -- test with some app eg gg ads or a form -- click butt to see where it goess -- web page
how to hide url address bar in browser

how to add identity colums to all tables without identity column
use cursor, sysclumns tbl

reinstall iis
Linq Tutorial -- venkat


iis conf -- 
app slow
images not showing
allow 32 bit app
edit app pool
check permission
default directory
enable 32 bit app
add iis 6 back compatibility




-----------------------------------------



.btn{width 75px;}

libman -- library manager -- for client side lib downloads/mmgt

AVG tuneup -- exp oct 3

parse JSON objects into database structures
sp_OACreate 

test iis on sitting room server
dup sms -- oasis
getDebtInfo -- oasis
Tag helpers in asp net core
type prop and press tab key twice to gen property code in vs

async and await in C# -- watch pt101 in C# tut -- venkat
// Storing the token in cookie


----------------------------------------------

molecular@123#

From/Username: noreply@logicversiononline.com
pwd: "logic@123";
Host: "mail.logicversiononline.com";
SMTP();
$mail->SMTPAuth = true;

https://mail5005.site4now.net/Default.aspx
https://mail5005.site4now.net/Login.aspx

jasmine-html-reporter

EntityFramework.Extensions.EFCore
EF Core SaveChanges method operates within a transaction


---------------------------------------------------

hire developers -- devlink@ebenmonney.com

Im new to Angular
im interested in your project
what is the support like
how can i test the total pack fully before buying
you said $49
any special discount for me
tel no: 2348033452113
expecting your response
Nigeria


online program like linda.com or teamtreehouse.com,Youtube even udemy is a good choice

egFR -- kidney
edema
insulin resistance
type 2 diabetes



https://localhost:44312/api/TodoLists

encrypt constr
deploy lab db in vi
use anydesk -- oasis

gridview footer total shows total per paging -- issue

use tilde '~/Reports/Default.aspx' in aspx file and 'Reports/Default.aspx' in html files

IM E MAL 150MG DLY X3/7

loye

~emel vou mod
oasis con mod -- eye
update Debt in Suppliers and hRet tbls to zero -- emel -- or acct start date
add pri key to hConRoomAssign docNo -- and del prev days assign
Option Strict on 
Option Explicit to on

turing job experience -- Doan -- 5am
mgt rpt web based -- with crpt -- sales
change acct  group of an acct in coa -- even if it has figures -- then reCalcPeriod
show payables and recvable invoices as they are posted to accts -- vou mod & client receipt 
Cash flow statement
wrong AcctDisposal Acct val in appDef tbl -- emel
run script for FA and cumm bal sheet by year -- FCH
run cumm bal sheet by year -- emel
update billing/records -- emel
voucher mod for supp to allow xple items --
cash for today -- use crpt
disable del butt for tranx -- use enable_Del_Butt_for_Tranx in appDef tbl -- del only for admin

Bedopps
Finelib
HotNigeriaJobs
Jobberman for marketers

lastClinic and lastPurpose not editing during pat attnd edit
how to use c# and vb.net together in asp.net webforms
use C# henceforth even in vs 2010 -- vscode folder -- and ref it in web,config
iis user permission
Final spectacle prescription bar is to be added to the management.
Addition of Vitreous and fundus to the internal examination section

{0:t}
pat movt timeline qry to be based on entryDate
accordion -- collapse and read more... link
bts badge component


~create chk constr to kick out rec mod if appVersion is null or zero
~upload drugList for oasis 



resume accts entry from july
create a feed
where to search for Job Applicants in nigeria
how to connect phone or tablet to local network
how to create shortcut on phone/tablet (android and ios)
Add bootstrap to logicversion site -- target mobile device
add clients to yur site page
update services page
add smtDr functions to index page
tel no clickable in yur site
review website -- sat
buy mini projector -- konga
buy extension box
appt -- prof bakare -- wed 8am

~call mr segun for smtDr marketing in ibadan

to launch vscode from cmd, use "code ."
Hold ctrl+` in VS Code should open its terminal window -- back tick

SAp Crystal Reports free software download
https://www.sap.com/cmp/td/sap-crystal-reports-visual-studio-trial.html?trial=https%3A%2F%2Fwww.sap.com%2Fregistration%2Ftrial.9a4afb3b-7eaa-42af-98ce-abeae5deb784.html

https://www.tektutorialshub.com/crystal-reports/download-crystal-reports-for-visual-studio-2019/

Aug 11 2021  6:08AM
01-Jul-21 10:00:00 AM
postmaster@logicversion.ng
omagebi@yahoo.com
https://logicversion.ng
http://logicversiononline.com
BSON is just binary JSON (a superset of JSON with some more data types, most importantly binary byte array). It is a serialization format used in MongoDB
MariaDB is like a superset of MySQL -- has NoSQL features

WebAssembly is a standard implemented by Blazor -- C#
endpoint is where we have the resource i.e list of employees in this case.
open web standards eg Portable Network Graphics (PNG) and Scalable Vector Graphics (SVG)
put all deployment conf for sql svr on one file and run at once





depr generation shld start from depr start date -- but insert into tranx will depend on closingPeriod sproc
~sapid billing issue -- one coy show in rpt -- culprit is coyID in jobs tbl

~delete dup rows from userRoles for oasis
~load diag and complaints -- oasis
~add sql svr and browser inbound rules to win defd adv settings -- inbound rules

send esther to gtb == mon jul 12

text omesh -- scotts maint
look at mohan's request -- incorrect sales rpt -- scotts


Scaffold everything -- even razor
truncate tbl cmd stops where it hits error
https://caniuse.com/css-grid

Deployment -- oasis 
--------
~after install on devt mach, delete log file and recreate it
~add bal def to appDef tbl in oasis db from emel
~set AcctPostOn to false
~change pix in rpt files
~add images folder to inno script
~truncate tbls -- using script
~disable mods not needed in roles tbl
~set idGen val to 1
~reduce clinicTypes
~hide archive btn in con hist
~set stock,recv,payable bals to 0

CORS -- in web API configure in startup.cs -- google it 
Components are reusable and can be embedded into the template as an xml-like tag
Promise and observable are used for Async processes-- from rxJS
Property is auto created when specified in template


VS2019
I have tried switching between different project settings and it appears that code analysis was the problem.
Turning it off via ...
Project Properties -> Code Analysis -> Enable Code Analysis on Build
...sped the build up a lot. 

Dash Cam on your car

view mails (yah/gmail)
view analytics
view ads to see if smtDr is shown in search
-----------------------

pragimTech Blog -- for code



add comments to medChart fch
insert/update tariff item fch
shld be able to edit itemName in HMo tariffs -- FCH
lab rpt duplicate fch

Screen.MousePointer = Default


copy sapid db from triDomainHost (Clearing, Terminal, Haulage)


Ctrl + Q quits your browser
win + C talks to Cortana
Alt + Click downloads image 
appwiz.cpl in run dialog opens Win Prg and features in win 10
Ctrl+Shft + T restores closed Tab in browser
Win + shft + S snaps youtube screen

Lock Screen folder path:
C:\Users\fm\AppData\Local\Packages\Microsoft.Windows.ContentDeliveryManager_cw5n1h2txyewy\LocalState\Assets


A full database backup using WITH FORMAT will overwrite any existing backups and create a new media set.

A RESTful API is an architectural style for an application program interface (API) that uses HTTP requests to access and use data. That data can be used to GET, PUT, POST and DELETE data types, which refers to the reading, updating, creating and deleting of operations concerning resources.


Is REST API a Web service?
Yes, REST APIs are a type of Web Service APIs. A REST API is a standardized architecture style for creating a Web Service API. One of the requirements to be a REST API is the utilization of HTTP methods to make a request over a network.

SUSPENSE ACCT (ASSET)
add unclustered idx to pno in billing
add con rpt hist to billing mod emel


~cr rpt not opening below win 10 ver -- update mach with VC redst x86 and 64 then restart mach

add unclustered index to SNoID col in tranx tbl


sienna
---------
hub
tyres
Air Con
check Fuel and Temp guage


DOM in HTML is like API for the HTML (web page). where you can use JS or ANG to manipulate the page
elements
Angular is used for SPA -- Properties contain the data fro the view template
Interpolation in Ang means data binding (Data from Component property to view element ppty) and 
Node is a JS Runtime that enables you to run JS outside the browser
MVVM -- model view view-model -- then VM is the code that binds the View (HTML) and the Model (Classes). in aspx page, VM is called code-behind
Azure is Microsoft's implementation for cloud
In C#, Anony mtd and Lambda expr (LE) are related to  (or used) along with Delegates
With Anony, params can be skipped but not so with LE. LE is based on del
Anonymous mtd is a mtd that can be coded inline 
with Anony mtd, delegate params are optional
Func is generic del and is similar to LE. Just 2 diff ways to write the same thing
Events are encapsulation (wrapper) over delegates
Delegates are useful as callbacks -- to communicate between threads
Generics separate (decouple) the logic from the datatype. in this way we >se reUsability

~make smtAccts load from made2.sys or use default when loading
~study FCH COA


add def cols to hPatientsTimeline and voucher tables
~AdjustBill lacks appVersion in billing

38,785,326.15 Sales Ledger Ajao jan

handlebars.js-- create html out of json
too much diag in pat invoice

~create StockForDustbin and ImportExtData jobs for VI

vwInvoiceDetailsCoy2BatchForPost
vwInvoiceDetailsCoy2ForUnProcessed
vwInvoiceDetailsCoyBeforeProcessing

add pri keys to all tbls 	



~add create Acct snippet in rev, expenses, 
~create drugReturned tbl
~enforce min ver
~Load_Combos_From_Tariff = yes for FCH
let archive checkBox allow search for frmPatList in con Hist -- Nur mod

enforce reqd fields in LIMS

IMC
------
Add memory from timo
install AVG and AnyDesk

Archive
-------------
work on script for import data YTD to new hosp db
~ensure relevant cols are idx for hosp db

create uniq idx for suppName,RetainName,RevType,hExpenseCat,hExpenseItems
create chk constr on clientID,RevType,coyName,BillTo in billingDetls,billAccum and billing



review pharmacy apps -- .NET and vb6 Versions
~AcctPostLastPeriodCloseDate update not working in ReOpen_ClosedAccountingPeriod
-- review ReOpen_ClosedAccountingPeriod for credit and debit sign  -- use another var for credit eg set @CreditAmount=-(@Amount) 


call first bank -- take nepa bill and ID card along
call gen ayo (Unuigbe, AF ref Hosp) -- update wed


C:\Program Files\Microsoft SQL Server\MSSQL10.SQL2008\MSSQL\DATA


~make AcctPostType_Receivable to BATCH to prev posting -- since already done by updateBill

vwPaymentTypesSummGrid has OTHERS in its isnull fn -- 
reCreate AcctNos for recv, payables,expenses, and sales using their GroupIDs from Emel accts and 
place check constraints on coyID,BillTo in billAccum,BillingDetails. also make sure billing ClientID is not empty. first of all fill any blank with data b4 constraints using hRecords
~Nursing page for immu not inserting CoyID in BillAccum


get Investors
Contacts Contacts Contacts
25k/day
min expenses today
Talk less today
keep moving today -- dont be distracted
Lagos mkt is full strategize on sales. increase rev streams
join popular blogs and directories. follow celebs to advert SmartDoctor

SmartDoctor Anywhere: Use C#
shld deploy anywhere, local, web or cloud (Cloud enabled)
Subscription based
Hospitals will subscribe to use, Dedicated portal for big hosp, the other for small hosp
Activate SmartAccounts in hosps and rpts viewed in the cloud to encourage its sale
Use key.db instead of made.sys. add cols DbName,UserName,pwd,SVR,Connstr to key.mdb and pwd it for web
Ability to change look and feel (skin,theme etc)
-----------------------------
~sapid Billing wrong inv total

departed staff not showing in auditrail -- union archive with active staff -- FCH Ajao
lab mod -- VI Issue
------------------General----------------------------------------
how to create dll in vb6 and .NET
how to call dll from vb6
create C# Service that will do auto updating
how to create installer package to download  from the internet
How do I create a web-based Auto Updater for windows app?

-------------------------------------------------------------------------------------------
create twitter, linkedIn, facebook and instagram pages for logicVersion
call dr Alimi for SamrtDoctor in UI
marketer for SmartDoctor in Ibadan
visit prophet Adetuberu in Ibadan

--------------Accounts-----------------------------------------------------
Select Case KeyAscii
Case Is < 32 ' Control keys are OK.
Case 46 ' This is a period.
    If KeyAscii = 46 Then
         If InStr(1, txtQty.Text, ".") > 0 Then
             KeyAscii = 0
        End If
    End If
Case 48 To 57 ' This is a digit.
Case Else ' Reject any other key.
KeyAscii = 0
End Select

On Error GoTo errH
lblSub.Caption = CDbl(txtPrice.Text) * CDbl(txtQty.Text)
'lblTotal.Caption = !drgcatname
Exit Sub
errH:
lblSub.Caption = 0
'MsgBox Err.Description


A Balanced Fin Rpt (BS) depends on OPBal only, while PL dep on ClBal in COA 

@UserName nvarchar(50)='system' -- cos of auto reOpen prd and yr
~TranID is sys gen, TranNo is from User. TranID will always be gen even if User enters tranNo
~Hide & suppres irrelevant gps in group Items

+ char(13) + char(10) + 
Period=@Period and CoyID=@CoyID
((right('00'+CONVERT([varchar](2),@monthcounter,(0)),(2))+'/')+right('00'+CONVERT([varchar](4),@periodyr,(0)),(4)))
lastDayOfMth -- select CONVERT(VARCHAR(25),DATEADD(dd,-(DAY(DATEADD(mm,1,GETDATE()))),DATEADD(mm,1,GETDATE())),101)

DeprAmount=(([grossvalue]-([AccumDeprAmount]+[ScrapValue]))/([DurationI	nMths]-[deprcount]))
endDate=(dateadd(month,[DurationInMths]-(1),[startDate]))
	
	Declare @ReferenceID bigint -- for insert in sproc
	Select @ReferenceID = @@IDENTITY
	Return @ReferenceID

review contra entries in smtDr and smtAccts eg reOpen jan prd sproc
add Current_Coy to Appdefaults, will be updated by change of coy page
change coy page under review
Add SearchAllCompany entry to appDefaults -- search by coy or all coys
remove dept/unit combos from entry pages
costCenters shld derive from coyID eg if coyID=0001 then cc shld be 0001..001 cc tied to their coy,div and dept
when creating coy, cascade to create div, dept and unit same time in insertCoy sproc
Add more cols to coy tbl from appDefaults
create another coy in dec to test run lets have start and yr end begin from Aug 2020 to Jul 2021

search to know if import fixed assets is added to importAcctGp sproc

remove sales returns from Sales A/c combo in sales page -- use view for this combo alse check SR page
for Cash flow stm, enforce use of cash pages for cash tran. use views to filtr this in jrnl page etc 

AcctNo_Dividends_Payable_Cash in appdefaults has no val
AcctNo_Dividends_Payable_Shares in aphpdefaults has no val
check Cat var in PostJournal sub Tran.vb
~InterestPayable gp 5410000 --remove suppres

cannot make payment if insufficient fund

place a trigger on reportSumm tbl to prevent del,update and insert from fraud
create acct called Capital Acct to handle drawings when it is closed, under Capital Account & Drawings gp

add drawings to '10/2020' prd before closing
when changing coy, close all open forms auto and call main() subRoutine
Use SSMS to Import TB accts from excel into ChartOfAccounts_BeginBalance_From_Excel --- Begin Bal



~create expandable rpt for GL using CR or rdlc
~hide unused acct name and gps in acct info and jnl pages -- from db


--------------------Terminal----------------------------------------------------------------

let conStrTerm be set from ini file

right align amount in rct grid and total same for DN
~display columns for CAL  and Cost uploads on thier grid heading
display uploaded cost when vess is chosen in expenses page
Also do same in CAL page -- display upl conts

blno of a debited cont cannot be edited. first cancel the db note
shld print from indiv page of debitNote,Rct,TDO by entering their ID
open combos in rpt pages for DN,Rct and TDO
check status of DN b4 del.cannot del normal when it has additional. only last DN can be del or waiver by %
shld be able to del Debit Note and carry into Archive
Credit note shld only be for waivers only and DN that has rct
add TariffUsed page to Termnal app -- under mgt priv in TerminalTariff module


-----------------------------------SmartDoctor-------------------------------------------------

~rsDetails!AppVersion = App.Major
 .Open "select idval from AppDefaults where ID='STAFF_ATTENDANCE'", conStrHR, adOpenStatic, adLockOptimistic
If Not .EOF Then
    strAttnd = !idval & ""          
Else
    strAttnd = "NO"
End If

If strAttnd = "YES" Then
    frmLoginAttnd.Show
Else
    frmLogin.Show
End If

curious, flexGrid shows blank after commitTrans


Add Lead level col Drugs/Master and to Master List page in store mod and enforce in stock entry
add Status and remarks to Users table -- ADMIN,USER,MGT,SUPER,PRVDR as status, Remarks to display on tool bar as privilege eg Administrator for ADMIN.
remark UpdateStockForDustBin in stock issue -- shld be in consuming page only eg pharm mod --
Add def col to drugs,master,reconcile,position,movt,for dustbin,inDustBin,entry,issue,Users

Add HMOs features to records eg approval page in HSH rec mod
exclude ext pat from tranx tbl
pno col in tranx tbl not null -- check call to tranx sub in  billing mod

Add Consultation features to Tariff services section so sys can add consultants fee when they save


Re-activate HR tbls in SmartDoctor for Hosps henceforth
have a qry (vwSmartHrEmpToSmartDoctor) that will, when run, correct those qrys that point to smartHR tbls to point to SmartDoctor emp tbls.
have another qry (vwSmartDoctorEmpToSmartHr) that will, when run, orrect those qrys that point to SmartDoctor tbls to point to smartHR emp tbls once again.
Hosps will only use tbls from SmartHR, only if they buy SmartHR

Trigger to send sms to me when credit reaches 100
icd,icdLab,icdProc,icdDrugs for consulting
zooming for consultung
work on frmConsultingAssignedPatients to receive pats for consultants


---------------------------------------------------------------------------------------------



!AppVersion = App.Major
add   clinicType to qryhPreConsult and qryhPreConsultForClinics
strClinicAssigned = !clinicType & ""

Screen.MousePointer = vbDefault
add pri key to hrecordsPubluc and hPatientsPublic


add search to lab reports and XRay and other modules
add EntryTime and date cols to tariff tbls and hAntenatal and Reg

add rptHmoClaimsNoDiscount to FCH
make phone no compulsory
make dob compulsory

Add AppName to key.mdb eg SmartDoctor
user manual for smartDoctor


----------------------------------------------------------------



       Dim rsOldVer As New Recordset
       Dim StrAppBilling As String
       StrAppBilling = "BILLING"
       With rsOldVer
        .Open "select idval from AppDefaults where ID='LockOldVersion'", conStr, adOpenStatic, adLockOptimistic
        If Not .EOF Then
            LockOldVersion = !idval & ""
            If LockOldVersion = "YES" Then
                .Close
                .Open "select MinVer from Roles where LoginRole='" & StrAppBilling & "'", conStr, adOpenStatic, adLockOptimistic
                If Not .EOF Then
                    Dim MinVer As Integer
                    MinVer = IIf(IsNull(!MinVer), 0, !MinVer)
                    If MinVer > App.Major Then
                        MsgBox "This Version of " & StrAppBilling & " Module is OLD!" & vbNewLine & _
                        "Only Versions " & MinVer & " and Above are Allowed", vbCritical, "Old Version " & App.Major & "." & App.Minor & " Not Allowed"
                        Unload Me
                    Else
                        LockOldVersion = "NO"
                    End If
                Else
                    LockOldVersion = "NO"
                End If
            Else
                LockOldVersion = "NO"
            End If
                
        Else
            LockOldVersion = "NO"
        End If
        
 End With


--------------------------------------------------------------------

qryhDispDetailsForNurse

           Call Auditrail(m_Username, "Bill Adjustment: Item from: " & OldAdjust & " : => " & newAdjust & _
                 " Qty from: " & OldQty & " : => " & newQty & _
                 " price from: " & OldPrice & " : => " & newPrice & " for " & strFName, lblCon.Caption, "", strHostName)

rsVerX.Close 'Locked Bill
rsVerX.Open "select * from billing where isSigned=1 and billNo='" & strCon & "'", conStr, adOpenForwardOnly, adLockReadOnly
If Not rsVerX.EOF Then 'ie its Locked, Check for Mgt Prev
    MsgBox "This Bill is Locked! requires Management Permission to Unlock"
    Exit Sub
End If


'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''        

strPreConsult = strPreConsult & "Date: " & !preDate & " : " & !preTime & vbCrLf & "T = " & !temp & "deg C" & vbCrLf & "B.P. = " & !Pressure & "mm Hg" & vbCrLf & "Pulse = " & !pulse & "/min" & vbCrLf & "Weight = " & !Weight & "Kg" & vbCrLf & "Height = " & !Height & "m" & vbCrLf & "RespRatio = " & !respRatio & "/min" & vbCrLf & "Urine Alb = " & !urineAlb & vbCrLf & "Urine Sugar = " & !urineSug & vbCrLf & "SPO2 = " & !SPO2 & "" & vbCrLf & "RBS = " & !RBS & "%" & vbCrLf & "Positioning = " & !Positioning & "" & vbCrLf & "Done by = " & !Nurse & "" & vbCrLf & "-----------------------------------" & vbCrLf
